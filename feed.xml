<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://sunetrike.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sunetrike.com/" rel="alternate" type="text/html" /><updated>2021-08-19T12:31:29+08:00</updated><id>https://sunetrike.com/feed.xml</id><title type="html">sunE</title><subtitle>Wake up to the world that solar and Low Speed Electric Vehicles (LSEVs) can offer the Philippines</subtitle><author><name>Allan Gray</name></author><entry><title type="html">In flight, I attain a higher consciousness. Fear disappears - Translation of Bertrand Piccard’s interview on La Croix</title><link href="https://sunetrike.com/solar-impulse/in-flight-i-attain-a-higher-consciousness/" rel="alternate" type="text/html" title="In flight, I attain a higher consciousness. Fear disappears - Translation of Bertrand Piccard’s interview on La Croix" /><published>2021-07-25T01:08:07+08:00</published><updated>2021-07-25T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/in-flight-i-attain-a-higher-consciousness</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/in-flight-i-attain-a-higher-consciousness/">&lt;p&gt;Last month, Capt Piccard sat down with the Malotrus and her podcast Place des Religions for an interview.  I decided to do a translation into English.  I opted to do this for a few reasons:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Just for fun and French practice&lt;/li&gt;
  &lt;li&gt;To reflect more on where Solar Impulse might be heading with its newest initiative and tagline &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;Ecology as driving force for economy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really want to see this initiative succeed&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Merci a &lt;a href=&quot;&quot;&gt;&lt;/a&gt; for double-checking my work! :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.la-croix.com/Religion/PODCAST-Bertrand-Piccard-En-vol-jatteins-degre-conscience-peur-disparait-2021-04-14-1201150811&quot;&gt;Here is the link to the podcast&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Envoyer un nouveau projet rentable pour protéger l’environnement au pape François journaliste à la croix et j’ai rencontré Bertrand Piccard écouter la troisième saison de place des religions dont vous êtes l’initiateur est le président de l’aviation est partout dans la pièce.&lt;/p&gt;

&lt;p&gt;Que représente pour vous aujourd’hui ce lieu les journalistes salle de réunion de rencontre l’histoire de l’aviation parce que j’ai une certaine nostalgie de cette histoire incroyable des pionniers ont ouvert la voie au risque de le réveiller et puis il y a quand même l’autre partie qui est celle de la spiritualité Orient des objets tibétain birman thaïlandais qui sont plus du monde intérieur que du monde extérieur de la version. Vous vous vous êtes devenu libre en deltaplane et de l’huile dans les années 1970 qu’est-ce qui vous attire est particulièrement dans des aspirateurs dans le monde de l’aviation des astronautes Charles Lindbergh, j’ai eu la chance de rencontrer quand j’étais enfant, j’habite aux États-Unis. Assister à 6 décollage d’Apollo rencontrer les astronautes de la NASA et les pionniers de l’histoire de l’aviation et je l’ai rencontré après avoir des livres histoire et ça pour moi tout frontière entre le rêve et la réalité, je rêvais de ça. Je les rencontrai. Je voyais qu’il&lt;/p&gt;

&lt;p&gt;réaliser l’impossible et je me suis dit j’aimerais être explorateur. J’aimerais aller me confronter à l’inconnu faire des choses que personne n’a jamais fait et j’ai acquis une certaine boussole dans mon cœur qui montrait non pas le nord mais qui m’entraîne inconnu tout ce qu’elle va encore jamais été fait et quand j’avais 16 ans, j’ai dû voler une des premières était apparue en Europe et je me suis dit bah ça c’est nouveau ça moi ça c’est de nouveau quelques choses à explorer qui n’a pas encore été fait et c’est comme ça que j’ai commencé à voler à 16 ans, je souhaite un triangle de toile d’aluminium. 2 mètres d’altitude est-ce que tu es fatiguant la danse des pas simplement le fait de découvrir le vol c’était de se découvrir soi-même j’étais plutôt que je voulais tu resteras turn en même temps, j’avais pas de monter dans un arbre, je me retrouve à moi-même avec la responsabilité de ma vie en ce moment qui développe une conscience de soi qui est extraordinaire et quand on est en relation&lt;/p&gt;

&lt;p&gt;avec soi-même quand on se sent revivre à l’intérieur de son corps, on développe une performance et je me suis dit je suis capable de faire beaucoup beaucoup plus de choses qu’est-ce que je pensais mais est-ce que je parlais beaucoup de spiritualité avec la mer c’était quelque chose de très théorique puis tout à coup, je voyais à quel point on ne pouvait être. De toutes ses ressources dans l’instant présent à cette révélation beaucoup de chemin de fille en 99 à boucler le premier tour du monde en ballon avec un jour et 21h de vol est considéré comme la dernière grande aventure du 20e siècle qu’est-ce qui voulais vraiment croire envers et contre tous vous pouvez aller au bout de ce serait possible que la seule manière de réussir c’est d’essayer c’est vrai que j’avais pas forcément beaucoup de chances de réussir. C’est vrai que j’avais gagné la course transatlantique en ballon avec un Belge qui m’avait invité donc ça m’avait initié au ballon. Mais en même temps les grands milliardaires qui&lt;/p&gt;

&lt;p&gt;voulait être le premier tour du monde en ballon avait déjà construit normal. On les avait déjà fait des tentatives Richard Branson pour nommer que 2 mois, je me suis dit mais pourquoi pas moi. Qu’est-ce que j’ai à perdre pour rien et finalement la troisième tentative j’ai réussi et j’ai fait le premier tour pour moi, c’était vraiment une leçon de persévérance âge de monnaie des très très grands projets que tout le monde considère à possible, est-ce que c’est fou vous a des gens qui se moque de vous parce que la première fois qui vous disent que c’est toute façon vous voyez finalement les gens qui sont des vrais pionniers et qui vous accompagne et puis tout ce qu’ils ont peur d’essayer quoi que ce soit et pour qui vous êtes une menace.&lt;/p&gt;

&lt;p&gt;Réparation de la remise en direction de l’ordre du lâcher prise de l’abandon profond aux éléments dans cette expérience de tour du monde en ballon dans ces moments-là, tu dois les trois semaines. Vous savez pas aussi longtemps si vous avez assez 13h de gaz dans la bonne direction pendant ces 3 semaines.&lt;/p&gt;

&lt;p&gt;Il y a pas de moteur, il y a pas de couverts taille poussé par le vent et puis vous partez vous avez 45000 km en face de vous arrivez à vous dire parce que l’atmosphère est fait de très différente et vous apprenez comme ça à l’utiliser ce changement d’attitude pour trouver la meilleure direction et pour changer d’altitude, vous devez lâcher du lest du poids et métaphore de la vie. C’est pour ça que j’aime le ballon. Bah non, c’est pas sport parce que dans la vie vous êtes aussi de votre volonté souvent et de vos habitudes de vos croyances de manière. Changer d’altitude est l’influence d’autres direction dans laquelle la vie vous coûtera en 2003 vous vous êtes lancé dans le nouveau grand projet de votre existence avec la construction de Solar Impulse cet avion solaire capable de ce que vous avez fait le tour du monde 2015-2016 avec le pilote André Borschberg tour du monde en ballon,&lt;/p&gt;

&lt;p&gt;il reste 40 kg de gaz liquide sur les 3700 kg du départ c’est vraiment tu es vraiment sûr quand on dit le ciel est la limite de sky’s the limit c’est pas vrai c’est le carburant qui est la limite pour aller plus loin.&lt;/p&gt;

&lt;p&gt;it had 40kg of liquide from the 3700 kg on departure it’s true.  You are really sure when they say the sky is the limit, it’s not true.  It’s the fuel that is the limit for going further. To do a world tour where fuel is used is to climb that which one can do with the technologies ,&lt;/p&gt;

&lt;p&gt;De faire le tour du monde en carburant est utilisé ça pour montrer ce qu’on peut faire avec des technologies ce qu’on peut faire avec des a priori impossible, c’est ça qui me met que cette année, on pouvait être un message et un ambassadeur des allergies renouvelable et montrer que sur pourrait le faire en vol ou c’est le plus difficile pas forcément peux le faire au sol aussi en ce moment là parce que j’en ai tellement connecter à soi-même, on est dans un tel niveau de performance de conscience qu’on arrive à résoudre les différents problèmes. Par contre, j’ai vu très souvent peur de pas pouvoir voler des outils avec cette aventure, on était plusieurs fois, c’était quand même. Il fallait payer deux personnes en moyenne tous les mois donc il fallait des sponsors partenaire pour que ça marche normalement de problèmes administratifs et bureaucratique très lourd que c’était extraordinaire aux États-Unis. Vous avez toute votre équipe autour de l’avion les membres de l’équipe, vous avez une&lt;/p&gt;

&lt;p&gt;partie des ingénieurs à Monaco qui communique par satellite avec vous lancement de fusée pratiquement tout à coup, vous avez la tour de contrôle qui vous dit vous êtes autorisés au décollage des manettes. Sifflement commence à avancer et au bout de 150 m. Vous êtes en l’air très doucement, il y a pas de bruit et vous êtes dans un avion tellement unique au monde et voilà, j’ai décollé maintenant, j’ai l’Atlantique devant moi, j’ai le Pacifique devant moi, j’ai la chaîne devant moi que vous savez que vous allez rester en vol plusieurs jours et plusieurs nuits et que vous êtes au milieu de la connu au milieu des doutes au milieu de 4 choses qui vont peut-être parce que moi je me rappelle très bien quand j’ai laissé la porte de derrière moi et que j’avais 4000 kilomètres jusqu’à San Francisco quelle lumière en silence de l’aéroport de ben. Citation qui résume votre conception de l’aventure l’aventure est un état d’esprit vis-à-vis de l’inconnu une façon de concevoir notre existence comme un&lt;/p&gt;

&lt;p&gt;champ expérimental dans lequel vous obliger de développer une ressource intérieur de gravir le chemin d’évolution personnelle et d’assimiler les valeurs éthiques et spirituelle dans nous avons besoin comme compagnon de voyage.&lt;/p&gt;

&lt;p&gt;Est-ce que vous pourriez me dire un peu comment ont évolué justement c’est ressources intérieures que vous avez mobiliser et puis vos première expérience de Valentin a aujourd’hui au début c’était le courage et c’est le courage c’est quand vous arrivez à faire quelque chose même si vous avez peur mais c’est pas suffisant parce que je sais que ce qui est important c’est la confiance et c’est ce que j’ai trouvé quand j’étais avec Brad Pitt R3 avec deux au milieu de l’océan, vous êtes là mais des milliers de kilomètres de toute possibilité de secours et vous vous sentez mieux que dans tous les moments de votre vie normale. pour moi c’était vraiment hein ? Je vous ai mais comment c’est possible je suis dans une situation de dormir et moi je me sens mieux je crois que c’est vraiment le fait quand on se met en rupture par rapport à toutes nos habitudes tout notre conditionnement qu’on est catapulté en dehors de sa zone de confort en trouver à l’intérieur de soi-même et d’aller plus et les ressources&lt;/p&gt;

&lt;p&gt;qu’il faut au fond de toi-même qui vous font confiance dans l’être humain dans la vie le monde dans tout ce qui nous guide pas ce qu’on voit qu’on a ce qu’il faut pour avancer au monde vous êtes vraiment Quand vous voyez à quel point vous pouvez fonctionner mieux que d’habitude quand vous revenez dans la vie normale, la vie est plus totalement normal vous a beaucoup plus de l’essentiel. Vous arrivez à donner beaucoup plus de valeur aux relations humaines au destin à la spiritualité à tous les événements de la vie en l’air d’aventure aller aussi au sol. Elle est dans votre vie de tous les jours dans tout ce qu’ils ne vont pas à la recherche de ce que vous cherchez.&lt;/p&gt;

&lt;p&gt;Un autre facette de votre vie qui ne vont pas encore pleuré mais vous avez fait des études de médecine avec une double spécialisation en psychiatrie et psychothérapie, qu’est-ce que vous avez tiré de tous les apprentis sur les mondes intérieurs, j’ai vu à quel point les gens souffrent et se sente mal de le réveiller au moment où il oublie au moment où ils ont perdu le sens du contexte dans lequel Lviv veut se rassurer avec des matériels, puis-je sur des gens qui nous aime mais qui peuvent mourir sur de l’argent qui peut disparaître et finalement je pense qu’il y a énormément de gens qui vivent en équilibre instable sur des repères qui peuvent maman.&lt;/p&gt;

&lt;p&gt;Revenir pourquoi envie et se dire que peut-être qu’on vient de quelque part mais on sait pas où on va quelque part et on sait pas où on sait pas très bien. Pourquoi on est là, on se permet d’avoir des questions ouvertes et quand on a des questions ouvertes explorateur mouvement social alors que c’est ça qui nourrissent je sais pas pourquoi mais il faut que je sois le plus heureux possible d’acquérir des biens matériels de amoureux de quelqu’un qui est amoureux de vous il y a plein de choses qui dépendent plus de nous alors que non et ça complètement les événements qui arrivent les événements de la vie sur tu es pas là pour vous détruire des événements de la vie sur Terre. à lâché des certitudes lâcher des habitudes chercher des croyances vous ouvrira dimensions et influence qui vont vous amener dans ton direction de votre société respective discours pour un changement de paradigme et une prise de conscience de ça aujourd’hui moi j’ai toujours que l’évolution elle se faisait beaucoup plus&lt;/p&gt;

&lt;p&gt;à titre individuel que j’ai pas l’impression que c’est la société qui évolue dans sa direction isolément trouve quelque chose qui leur permet d’avancer&lt;/p&gt;

&lt;p&gt;Brièvement évoqué tout à l’heure mais vous avez grandi dans une famille aussi très porté sur la spiritualité avec une grand-mère maternelle pasteur votre part de ses études sur le sur le terrorisme comment est-ce que tu as nourri votre parcours fondamentale et d’habitude tout le monde me parle de mon père mais c’est vrai que avoir une mère. Vous prends au sérieux comme un enfant dans votre recherche de compréhension de la vie de la mort de Dieu de des autres, c’est extraordinaire. Moi j’ai passé des heures et des premiers avec la mère dans la forêt dans la montagne peu partout déjà quand j’avais 6 ans 7 ans et puis je poser toutes les questions que je pourrais passer de comprendre pourquoi j’étais là à quoi ça sert tout ce qu’on fait. On va où et cetera m’expliquer tout ce que j’avais compris que tu paieras. Ah bah ça je sais pas. Extraordinaire comme cadeau quand on a un enfant je ne sais pas si mes parents savent pas mais moi je vais peut-être essayer de comprendre essayer de trouver&lt;/p&gt;

&lt;p&gt;ça donne envie d’aller plus loin, c’est plus seulement des questions d’intérieur avec ma mère de comprendre le monde extérieur avec mon père qui m’a animé toute ma vie de recherche est-ce que aujourd’hui vous vous définirez comme croyant, je crois que vous avez dans la religion catholique. Oui alors croyant ça dépend en quoi moi je crois pas les hommes ont fabriqué pour se rassurer de record de la mort. Par contre, je crois l’être humain n’est pas très bien. Manifester tout de suite création, je pense qu’il y a un créateur à tu savais quelque chose qui donne un sens donc une énergie supérieure qui donne un sens à ce qu’on vit. Activement, on ne comprends pas parce qu’on n’est pas à ce niveau et je pense que d’être humain ne peux pas mettre un visage à Dieu attribuer des des volonté à Dieu, c’est horriblement présent que comme ça quand est-ce que vous pourriez nous raconter cette rencontre. Moi j’avais envie de rencontrer le pape François parce que en fait c’est parce que j’avais envie de&lt;/p&gt;

&lt;p&gt;rencontrer. Parce que j’ai l’impression que c’est le premier que c’est vraiment occupé des grands problèmes de notre la pauvreté, l’environnement entre les êtres humains et qui essaie d’améliorer la qualité de vie sur Terre a dépendamment de toute politique et puis j’avais lu le lo date aussi qui est sur l’environnement et j’avais envie de parler parce qu’en fait tu arrives à me comprendre mais quand on parle essentiellement de respect pour l’environnement d’amour pour le prochain et de reconnaissance pour la création divine, on va toucher une certaine partie des je sais pas ce que c’est pas ce qui massacre semblables et moi j’avais envie d’aborder avec lui. C’est ça qu’on a parlé de toutes les solutions technologique qui sont financièrement rentable et qui peut protéger l’environnement. Même quand on n’est pas spirituel quand on a un respect pour les autres mais peut-être on peut faire du bien quand même technologie pourrait sauver le monde sur l’enfer détruire le monde avec la technologie&lt;/p&gt;

&lt;p&gt;technologie qui permettent à l’être humain d’être beaucoup plus efficient d’énergie économiser des ressources naturelles économiser de nourriture et aujourd’hui vous avez en tout cas la moitié du problème qui resolvable totalement grâce à la technologie des énergies renouvelables aménagement économique des aménagements de l’attitude de comportement humain, il faut pas commencer par le comportement humain faire des sacrifices. Vous pouvez continuer à faire la même chose mais vous pouvez avoir un impact / 10 sur l’environnement parce que vous serez plus efficients des technologies modernes vous permettront de l’écologie, il faut commencer par faire tout ce qu’on veut sur le plan technologique et puis ensuite si on doit aller plus loin à ce moment-là, on peut peut-être demander de changer les François été réceptif à votre discours pour votre rencontre. On a dit qu’on allait se revoir mais c’était un mois que je l’ai rencontré donc c’est vrai qu’on a pas pu se revoir. On a gardé des contacts&lt;/p&gt;

&lt;p&gt;épistolaire de tellement avec le cardinal Tucson qui dirige cette partie-là, je me réjouis de pouvoir aller lui amener les missions pour protéger l’environnement sur la trouver d’ici le mois d’avril et énormément de technologie qui peuvent motivé. La protection de l’environnement qui ne sont pas sensibles aussi par rapport à une certaine écologie catastrophique des nouvelles solutions des nouvelles technologies du pétrole au Soler du chauffage à la pompe à chaleur d’une voiture électrique, il y a pas grand monde qui est intéressé par le changement des écologistes. Non non, c’est bien parce que il faut que j’envoie que si ils font rien pour tous à la catastrophe beaucoup plus vite. Par contre, il y a des solutions catastrophes catastrophes mobiliser beaucoup plus pour utiliser des solutions et changer le cours des choses.&lt;/p&gt;

&lt;p&gt;écouter de la troisième saison de place des religions&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="solar-impulse" /><summary type="html">Last month, Capt Piccard sat down with the Malotrus and her podcast Place des Religions for an interview. I decided to do a translation into English. I opted to do this for a few reasons: Just for fun and French practice To reflect more on where Solar Impulse might be heading with its newest initiative and tagline Ecology as driving force for economy I really want to see this initiative succeed</summary></entry><entry><title type="html">A TDD rake based build-system for multi-targeting - using the teensy 3.6 as an example</title><link href="https://sunetrike.com/open-source/embedded/teensy/a-test-drive-build-system-for-teensy/" rel="alternate" type="text/html" title="A TDD rake based build-system for multi-targeting - using the teensy 3.6 as an example" /><published>2021-07-11T01:08:07+08:00</published><updated>2021-07-11T01:08:07+08:00</updated><id>https://sunetrike.com/open-source/embedded/teensy/a-test-drive-build-system-for-teensy</id><content type="html" xml:base="https://sunetrike.com/open-source/embedded/teensy/a-test-drive-build-system-for-teensy/">&lt;h2 id=&quot;what-are-you-getting-out-of-completing-this-tutorialexercise&quot;&gt;What are you getting out of completing this tutorial/exercise?&lt;/h2&gt;

&lt;p&gt;This article is my attempt to distill what I’ve learned about embedded testing to date and hopefully give a starting point to anybody who is interested in trying automated testing/Test Driven Development (TDD) within the world of open-source &amp;amp; embedded systems.&lt;/p&gt;

&lt;p&gt;You can browse the &lt;a href=&quot;&quot;&gt;github repo&lt;/a&gt; to have a look.  It is a &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt; based build using &lt;a href=&quot;&quot;&gt;Unity&lt;/a&gt; as the testing framework.  After getting the toolchain set-up, we’ll refactor the teensy starter blinky code into its own module and add an abstraction layer to the interface.&lt;/p&gt;

&lt;h2 id=&quot;why-bother-with-automated-testing-for-embedded-systems&quot;&gt;Why bother with automated testing for embedded systems?&lt;/h2&gt;

&lt;p&gt;I’m a big fan of automated testing.  As somebody who is always juggling a lot of balls in the air.  It gives me a lot of comfort to revisit an area of my codebase that I haven’t seen in 6-8 months and allow the tests to remind me how it works.&lt;/p&gt;

&lt;h3 id=&quot;solid-flexible-and-testable-designs&quot;&gt;SOLID, Flexible, and Testable Designs&lt;/h3&gt;

&lt;p&gt;The term ‘spaghetti code’ gets thrown around a lot in the software world.  Codebases that have intertwined functions, nested if/elses, etc can become a nightmare to maintain over time.  As a codebase progresses and matures, these types of interwoven dependencies can significantly slow down progress and new releases.&lt;/p&gt;

&lt;p&gt;One of the main benefits of TDD is the way it forces you to think about your design and structures.  Grenning identifies the SOLID framework, originally attributed to “Uncle” Bob Martin in &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1002/pfi.21408&quot;&gt;“Agile Software Development: Principles, Patterns, and Practices”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The c-language is not object oriented which means that these principles are implemented at the module level. If you are interested, you could also look at how these principles drive the design of the RakefileHelper class that RSpec is driving for the build system.&lt;/p&gt;

&lt;p&gt;There are plenty of articles on the internet which describe SOLID in different contexts so I’m only going to briefly describe how these principles apply to the embedded context.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;S Single Responsibility Principle&lt;/strong&gt; - The name says it all here a module should have one job.  This often leads to very descriptive module names.  A module called LEDdriver.c is expected to turn the LEDs on and off.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;O Open Closed Principle&lt;/strong&gt; - ‘Open for extension, Closed for modification’. For example, The LedDriver.c module may leverage a separate BaseLedDriver.c module in order to trigger the specific actions for the teensy.  If you now wanted to add support for a new device (Netduino, for example), You would create a NetduinoLedDriver.c which also calls BaseLedDriver. Both devices would then interact with the rest of the application in the same way even if their underlying implementations are different.  As a developer, you do not need to modify BaseLedDriver.c to add a new target board.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;L Liskov Substitution Principle&lt;/strong&gt; - In the LEDdriver example, you might create a data structure that encompasses the basic information of an LedDriver.  This is what permits you to substitute in a mock interface during testing.  By doing this, any other module (an LedScheduler.c, for example) that wants to trigger an Led, will use the same function call. The calling module does not care about the implemenation details.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;I Interface Segregation Principle&lt;/strong&gt; - The interface of a module should be limited to a single concept.  An LedDriver.c is basically a light-switch.  It wouldn’t make sense for you to check the time by looking at a light switch.  Time and Light “Status” are very different concepts.  If you find yourself asking about both of those concepts within the same interface, function call, etc) Then the interfae of your module is probably not well segregated.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;D Dependency Inversion Principle&lt;/strong&gt; - Dependencies between modules create problems both for testing and for changing over time.  It’s can be very challenging to debug embedded systems especially since they can experience unexpected bit-flips and suddenly end up in &lt;em&gt;no man’s land&lt;/em&gt; as far as your code is concerned.  While these issues will always challenge even the most battle-hardened software vets who are operating down near the bare-metal, the ability to reduce dependencies can help to simplify the problem of how to escape from an unknown bit-space.  Putting this into practice in testing will often involve turning your module into a ‘black-box’.  Where the caller makes an abstracted call such as ‘is Led #5 on?’ or ‘turn the blue led off’.  The internal details of how the serving module makes that call is hidden from the caller.  In embedded TDD, function pointers are often used in order to allow testing of these abstracted interfaces.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dual-targeting-and-even-multi-targeting&quot;&gt;Dual-targeting and even multi-targeting&lt;/h3&gt;

&lt;p&gt;There has been a lot of news lately about a global shortage in microcontrollers and semiconductors.  So the ability to write an embedded application that can build of multiple devices may mean the difference of whether or not your protoypes make it into production.  TDD forces you to decouple your application layer from the underlying hardware which makes for better portability to other devices.&lt;/p&gt;

&lt;h2 id=&quot;where-i-found-big-challenges-in-learning-automated-testing-for-embedded-systems&quot;&gt;Where I found big challenges in learning automated testing for embedded systems&lt;/h2&gt;

&lt;p&gt;As I’ve been diving deeper into the world of embedded systems and mirocontrollers, I wanted to make sure that I had a handle on how to apply TDD in the world of C cross-compiling.  So I picked up copy of James Grenning’s book &lt;a href=&quot;https://pragprog.com/titles/jgade/test-driven-development-for-embedded-c/&quot;&gt;TDD for Embedded Systems&lt;/a&gt;.  Among the two testing frameworks he demonstrated, I preferred &lt;a href=&quot;http://www.throwtheswitch.org/unity&quot;&gt;Unity&lt;/a&gt; this is mainly because I am still a relative novice in C and I’d prefer to avoid mixing languages at this time.  The other option &lt;a href=&quot;http://cpputest.org/&quot;&gt;CppUTest&lt;/a&gt; is written in C++.&lt;/p&gt;

&lt;p&gt;As a relative novice in c-programming just getting Grenning’s examples to build took a pretty big effort.  Eventually I got through and voila, my reward was a suite of passing tests that &lt;strong&gt;could NOT&lt;/strong&gt; be built on any particular device.  While it makes sense within the scope of the book, I found myself floundering a bit in trying to figure out how to get this well-tested &amp;amp; decoupled book code to deploy onto an actual device.&lt;/p&gt;

&lt;p&gt;Embedded TDD tries to offer its practitioner the promise of development without hardware.  It’s an attractive but rather lofty goal for a small team. At the end of the day, if well-tested code doesn’t perform as expected on the board, then the whole effort is wasted.&lt;/p&gt;

&lt;p&gt;The open-source &lt;a href=&quot;https://www.pjrc.com/teensy&quot;&gt;Teensy&lt;/a&gt; boards serve as a good starting point for learning how to get into ARM Cortex.  I had a couple Teensy 3.6 boards left over from another project. So that’s why I opted to use this model.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.pjrc.com/teensy/td_download.html&quot;&gt;Teensyduino&lt;/a&gt; package contains a starter makefile and blinky source code.  To ensure the necessary toolchain is set-up on your computer, please make sure you can build and run it before attempting to use this code.&lt;/p&gt;

&lt;h2 id=&quot;rake-vs-make-for-embedded-development&quot;&gt;Rake vs Make for embedded development&lt;/h2&gt;

&lt;p&gt;Slowly but surely, I’m learning to navigate makefiles, they are quite cryptic to read and learn but I as far as I can tell, they are still pretty much industry standard.  From a TDD &amp;amp; multitargeting perspective, they suffer from a couple important drawbacks:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;They are a domain-specific language that is super hard to read for the uninitiated&lt;/li&gt;
  &lt;li&gt;They don’t have a way to test and protect against regressions &lt;strong&gt;Most important&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While scripting languages often suffer performance wise, in this case, I feel that have a full object oriented language more than makes up for it and I’m very fond of &lt;a href=&quot;https://rspec.info/&quot;&gt;RSpec&lt;/a&gt; for its expressiveness and readability.  As the ruby version of Make, Rake does a lot of the heavy lifting for us on this job.  If you are curious to learn more about Rake, I pulled a lot from &lt;a href=&quot;https://avdi.codes/rake-part-1-basics/&quot;&gt;this blog&lt;/a&gt; while learning how rake handle dependencies and filetypes.  I leaned heavily on ElectronVector’s blog post on using &lt;a href=&quot;http://www.electronvector.com/blog/using-gcc-for-automatic-c-language-dependency-management-with-rake&quot;&gt;rake to drive GCC&lt;/a&gt;.  This example is basically a TDD version of that rakefile.&lt;/p&gt;

&lt;p&gt;Unity provides an &lt;a href=&quot;https://github.com/ThrowTheSwitch/Unity/tree/master/examples/example_3&quot;&gt;starter rakefile&lt;/a&gt; &lt;strong&gt;without a test harness&lt;/strong&gt;.  It works well but in order for me to put a test harness around it, I needed to extract it to a class.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;To get started, let’s take an inventory of what we have to work with.&lt;/p&gt;

&lt;h3 id=&quot;getting-your-toolchain-in-place&quot;&gt;Getting your toolchain in place&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;The makefile and starter source code within &lt;a href=&quot;https://www.pjrc.com/teensy/td_download.html&quot;&gt;Teensyduino&lt;/a&gt; (located at hardware/teensy/avr/cores/teensy3). &lt;em&gt;Make sure your computer’s teensy buildchain is correctly setup by running &lt;strong&gt;make&lt;/strong&gt; within this folder and seeing blinky running on your device&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The teensy loader should pop-up automatically&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_loader.png&quot; alt=&quot;teensy_loader_interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The programming error bar should as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_programming.png&quot; alt=&quot;teensy_programming_dialog&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keep an eye out for both of these as you are progressing through the test-suite&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The rakefile and starter source code within &lt;a href=&quot;http://www.throwtheswitch.org/unity&quot;&gt;example 3 of Unity&lt;/a&gt; (located at examples/examples3). &lt;em&gt;Make sure your computer’s ruby buildchain is correctly setup by running &lt;strong&gt;rake&lt;/strong&gt; within this folder.  Unity should report a couple tested modules; each with some successful, failed and ignored tests&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;setting-up-a-new-project&quot;&gt;Setting up a new project&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;After cloning the &lt;a href=&quot;&quot;&gt;teensy_tdd_rake repo&lt;/a&gt;, run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to set-up rake and rspec/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Copy the teensy3 folder into the root folder&lt;/li&gt;
  &lt;li&gt;Copy the unity.framework folder into the root folder. &lt;em&gt;you may want to include it as a git submodule&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that, you should now have the following folder tree:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_rake_folders.png&quot; alt=&quot;teensy_rake folder layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To test the buildchain, We are going to run first run with teensy disconnected, then with it connected.&lt;/p&gt;

&lt;h4 id=&quot;1-disconnect-the-teensy-and-type&quot;&gt;1. Disconnect the teensy and type&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rspec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It should return with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;49 examples and 1 failure&lt;/code&gt;.  What’s the failure?  Well, I’ve started you off on step 1 of the Red-Green-Refactor cycle.   We’ll come back to the failed test a little later..&lt;/p&gt;

&lt;h4 id=&quot;2-connect-the-teensy-and-type&quot;&gt;2. Connect the teensy and type&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rspec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you are running on an ubuntu install, this may work immediately.  However, 
The Rakefile_helper will attempt identify if a device is connected at usb address &lt;em&gt;/dev/ttyACM0&lt;/em&gt; or &lt;em&gt;/dev/ttyACM1&lt;/em&gt;. These are the default usb locations on my linux mint install.  If the addresses on your system are different you can update within the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;system.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If it identifies that a teensy is connected, it will run those tests, otherwise it will skip them.  The teensy tests are a bit slow but it’s the best way I’ve found so far to do an &lt;a href=&quot;https://thoughtbot.com/blog/testing-from-the-outsidein&quot;&gt;outside-in&lt;/a&gt; test of the build.&lt;/p&gt;

&lt;p&gt;If you’ve made it this far, congrats!  You’ve now got an open-source, TDD build system for your teensy to get you going on your way towards TDD and/or multi-targetting.&lt;/p&gt;

&lt;h2 id=&quot;testing-and-iterating&quot;&gt;Testing and Iterating&lt;/h2&gt;

&lt;p&gt;Regardless of what kind of software you are building, there will be some variation of a testing pyramid similar to the picture below.  At the top are the ‘acceptance or feature’ tests which cover all of the important functionalities that your users expect to see.  These are slow to run and require the physical hardware and probably customized bench &amp;amp; field testing programs.  Writing these tests can help to clarify your thinking about what exactly you are expecting your software solution to achieve for your users.&lt;/p&gt;

&lt;p&gt;In the case of our TDD build-system, our interface is the Rakefile.  It will act differently depending on whether a USB is plugged in.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;unit (default)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;prepare_for_tests&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;deploy_teensy&lt;/li&gt;
  &lt;li&gt;prepare_teensy_hex&lt;/li&gt;
  &lt;li&gt;build_for_teensy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since the task ‘unit’ is the default, typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt; is equivalent to typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake unit&lt;/code&gt;. Try it now.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Clearing build directory
Running unit tests
Running system tests...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/TDD_pyramid.png&quot; alt=&quot;The TDD Pyramid&quot; /&gt;
&lt;em&gt;Note: this is not my picture.  the &lt;a href=&quot;https://medium.com/@joatmon08/test-driven-development-techniques-for-infrastructure-a73bd1ab273b&quot;&gt;source is here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-first-build-system-spec&quot;&gt;The first build-system spec.&lt;/h2&gt;

&lt;p&gt;Before going forward, let’s have a look at layout of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spec/&lt;/code&gt; folder&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_rake_spec_folders.png&quot; alt=&quot;teensy_rake spec folder layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are 3 files that defines specs:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Rakefile_spec.rb - As mentioned above, this is the interface for our buildsystem.&lt;/li&gt;
  &lt;li&gt;spec/rakefile_helper_spec.rb - All of the application logic and customization is found in here.&lt;/li&gt;
  &lt;li&gt;spec/helper_methods/helper_methods_spec.rb - These are methods to assist in setting up and tearing down tests.  They mostly perform string and file manipulation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s look at the failing spec:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Rakefile defaults to unit tests
   Failure/Error: expect&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;check_for_file&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;target_exe_filepath&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;.to eq&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   
     expected: &lt;span class=&quot;nb&quot;&gt;true
          &lt;/span&gt;got: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
   
     &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;compared using &lt;span class=&quot;o&quot;&gt;==)&lt;/span&gt;
   
     Diff:
     @@ &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; +1 @@
     &lt;span class=&quot;nt&quot;&gt;-true&lt;/span&gt;
     +false
     
   &lt;span class=&quot;c&quot;&gt;# ./spec/Rakefile_spec.rb:23:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;During this spec, Rspec was told to expect something to be true. Those instructions are located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/spec/Rakefile_spec.rb:23&lt;/code&gt;.  Let’s have a look at that file &amp;amp; line.  We see the offending spec:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'defaults to unit tests'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;target_exe_filepath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TestLedDriver.exe'&lt;/span&gt;
	&lt;span class=&quot;sb&quot;&gt;`rake`&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check_for_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_exe_filepath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In case you are not familiar with Ruby, here’s what the spec is requesting in plain english:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expect to find a file named 'TestLedDriver.exe' inside of the build folder&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&quot;http://www.throwtheswitch.org/build/build-unity&quot;&gt;check this page&lt;/a&gt; for more details about how Unity is built.  For our purposes, we just need to know that the Unity build was triggered rather than the teensy build.  But why did it fail?  Well, this Rakefile instucts Unity to search in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test/&lt;/code&gt; folder for files named TestSomeModule.c.  There is no file like that so the test fails.  We are Red, in the Red-Green-Refactor loop.  Let’s create a blank file with the specified name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TestLedDriver.c&lt;/code&gt; and try again&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Clearing build directory
Running unit tests
Running system tests...

gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ build/TestLedDriver_Runner.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedDriver_Runner.o

gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedDriver.o

&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:1: warning: ISO C forbids an empty translation unit &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wpedantic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/TestLedDriver_Runner.o build/TestLedDriver.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedDriver.exe&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rake successfully recognized the new file! Great!  It began compiling its modules, first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TestLedDriver_Runner.o&lt;/code&gt; and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TestLedDriver.o&lt;/code&gt; before exiting with an error.  New information and new errors is progress in the TDD cycle.&lt;/p&gt;

&lt;p&gt;Here’s the basic structure of a test in unity.  Try adding it to the empty file to see what you get…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;PWMDriver.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_Led_Driver_does_a_thing_and_fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;TEST_FAIL_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Our greatest glory is not in never falling, but in rising every time we fall. - Confucius&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Clearing build directory
Running unit tests
Running system tests...
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ unity.framework/src/unity.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/unity.o
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ build/TestLedDriver_Runner.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedDriver_Runner.o
build/TestLedDriver_Runner.c:5:10: fatal error: PWMDriver.h: No such file or directory
    5 | &lt;span class=&quot;c&quot;&gt;#include &quot;PWMDriver.h&quot;&lt;/span&gt;
      |          ^~~~~~~~~~~~~
compilation terminated.
rake aborted!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, this time it couldn’t find the header file.  For those of you who are still getting used to the difference between source and header files.  One way to think about it is that the header file defines the interface of the module.  So this is a good time to revisit the concept of SOLID and think about what we want this LedDriver.c to do.  Better yet, let’s evaluate how ‘SOLID’ the teensy starter code in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.cpp&lt;/code&gt; is.&lt;/p&gt;

&lt;h3 id=&quot;solidifying-maincpp&quot;&gt;SOLIDifying main.cpp&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;S Single Responsibility Principle&lt;/strong&gt; - What is the responsibility of main.cpp right now?  Well, since it is the only file, it does everything.  Even in this very simple application, there are multiple responsibilities involved.
    &lt;ol&gt;
      &lt;li&gt;Start-up and initialize the board and name important variables&lt;/li&gt;
      &lt;li&gt;Toggle an led ON or OFF&lt;/li&gt;
      &lt;li&gt;Keep track of time and perform an action after a specified amount of time&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;O Open Closed Principle&lt;/strong&gt; - Let’s say you want to add some new functionality, for example a different LED that flashes on a different interval.  How would you do that? Would you extend main.cpp with new details or would you copy and paste the new pin number and interval into main.cpp?  Certainly the easier thing to do is copy/paste main.cpp and that would work fine for this example.  However, in that case you not extending main.cpp and you are modifying it.  So the easy/obvious route is in violation of OCP.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;L Liskov Substitution Principle&lt;/strong&gt; - Liskov substitution principle (LSP) evaluates the interface.  However as a single file monolith, main.cpp does not even have an interface!  So from that perspective, adding an interface is the obvious step to take to make this application more SOLID with a capital ‘L’!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I Interface Segregation Principle&lt;/strong&gt; - So what interfaces do we need?  Well based on the 3 repsonsibilities mentioned in section 1, it would appear that main needs 3 interfaces:
    &lt;ol&gt;
      &lt;li&gt;For initialization and for establishing the important constant and variables needed by the application&lt;/li&gt;
      &lt;li&gt;For reading and writing Led pins&lt;/li&gt;
      &lt;li&gt;For monitoring time and taking action based on that information&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D Dependency Inversion Principle&lt;/strong&gt; - Does the high level code (main.cpp) depend on the lower-level modules? Well, it depends on one interface: Arduino.h.  What does Arduino depend on? Open the file and have a look:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;WProgram.h&quot;
#include &quot;pins_arduino.h&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pins_arduino.h&lt;/code&gt; is almost 300 lines of constant definitions while 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WProgram depends&lt;/code&gt; on 24 different modules.&lt;/p&gt;

&lt;p&gt;If you are preparing to move from teensy to a different board (or vice-versa), be prepared for a LOT of reading, digging and research. I can personally attest to this.  I learned a lot, but it can take a very long time.  Nobody wants to be dealing with those sorts of challenges on a deadline.&lt;/p&gt;

&lt;p&gt;That’s all a lot to take in but let’s take it step by step.&lt;/p&gt;

&lt;h2 id=&quot;adding-a-unity-test&quot;&gt;Adding a unity test&lt;/h2&gt;

&lt;h3 id=&quot;defining-the-interface-with-testleddriverc&quot;&gt;Defining the interface with TestLedDriver.c&lt;/h3&gt;

&lt;p&gt;Looking again at the starter sourcecode for blinky.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Arduino.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;pinMode() makes teensy toggleable.  So thats a good place to start. We want to be able to create an LedDriver with a pin number.&lt;/p&gt;

&lt;p&gt;Let’s create the header now.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// includes/LedDriver.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_LedDriver_H
#define D_LedDriver_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pinNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When we run the tests,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;clearing build directory
Running unit tests
Running system tests...
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ unity.framework/src/unity.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/unity.o
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ build/TestLedDriver_Runner.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedDriver_Runner.o
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedDriver.o
gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/unity.o build/TestLedDriver_Runner.o build/TestLedDriver.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedDriver.exe
build/TestLedDriver.exe
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:14:test_LedDriver_is_off_upon_creation:FAIL: Our greatest glory is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;never falling, but &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;rising every &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;we fall. - Confucius&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok! So we have our first test!  Confucius isn’t telling us anything useful anymore, let’s write a test that describes what the code is (or isn’t doing). For the rest of the code snippets, I’m going to only include the bits that change.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedDriver.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_is_off_upon_creation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;									&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;[1] I find it useful to put in recognizably nonsense numbers or strings in the data of my tests.  It can help you catch your mistakes faster&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/unity.o build/TestLedDriver_Runner.o build/TestLedDriver.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedDriver.exe
/usr/bin/ld: build/TestLedDriver.o: &lt;span class=&quot;k&quot;&gt;in function&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;test_LedDriver_is_off_upon_creation&lt;span class=&quot;s1&quot;&gt;':
TestLedDriver.c:(.text+0x57): undefined reference to `LedDriver_Create'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unity can’t find the function.  Because we haven’t written it yet. So here’s our chance to finally make our code do something.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedDriver.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which returns:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:16:test_LedDriver_is_off_upon_creation:FAIL: Expected 0 Was 64206

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
1 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok! now let’s make it pass&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedDriver.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So there it is, your first passing test on a teensy. Let’s keep going. This test will virtually turn on an Led&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_TurnOn_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unity will complain that it doesn’t know about the new function, as it should.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c: In &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; ‘test_LedDriver_TurnOn_Led_seven’:
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:23:3: warning: implicit declaration of &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; ‘LedDriver_TurnOn’&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; did you mean ‘LedDriver_Create’? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wimplicit-function-declaration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
   23 |   LedDriver_TurnOn&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      |   ^~~~~~~~~~~~~~~~~~~~~~
      |   LedDriver_Create&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A quick note about the function names, at first I was annoyed by developers putting the module name in the front of each method call. Over time though, I came to appreciate that it makes a big difference in keeping things organized.  It might seem weird to readers coming from an object-oriented language but it does really help!&lt;/p&gt;

&lt;p&gt;So next we add LedDriver_TurnOn() to the header file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;TestLedDriver.c:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.text+0xc6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: undefined reference to &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;LedDriver_TurnOn&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We’ve seen this before, time to edit the sourcefile.  If you just add the empty function and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt;, it will fail. Good to see.  You want to see the test failing the way you expect before you implement the desired functionality.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:12:test_LedDriver_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:24:test_LedDriver_TurnOn_Led_seven:FAIL: Expected 1 Was 0

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
2 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, to achieve the desired functionality, we will make a pointer to the address and mark it static so it’s not accessible to outside callers.  To turn it on, we will make an over-simplification.  This is an example of the Agile principle of ‘selecting the simplest design that could possibly work’.&lt;/p&gt;

&lt;p&gt;It’s ok (even encouraged) to oversimplify your solutions during TDD as it is expected to produce a more robust solution than trying to create the complete solution immediately.  These kinds of small, steady, well-tested steps can sometimes help to avoid careless (or rushed) mistakes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This should pass. Congratulations, you can now virtually turn on your light.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:12:test_LedDriver_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:19:test_LedDriver_TurnOn_Led_seven:PASS

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
2 Tests 0 Failures 0 Ignored 
OK&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s also make sure we can turn one off.  Just to say we can.  Also to achieve the same level of function as the infamous ‘sample blinky’.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_TurnOff_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After adding the header definitions and empty functions.  You should be at a failing test.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:12:test_LedDriver_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:19:test_LedDriver_TurnOn_Led_seven:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:33:test_LedDriver_TurnOff_Led_seven:FAIL: Expected 0 Was 1

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
3 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It passes by reversing the command in TurnOn().&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So that brings us to our first refactoring opportunity.  One of the ways codebases get out of hand over time is by writing the same instructions over and over in different parts of your code.  Another of the important tenets of programming is Don’t Repeat Yourself which is apparently attributed to the writers of Pragmatic Programmer who also published Grenning’s book.  You might say that I’ve drank the kool-aid when it comes to this testing stuff.
At any rate, keeping your code DRY means always being on the lookout for opportunities to bring together duplicated statements into a single definition.  Many practitioners advocate for refactoring after the third duplication.  In our case, we now have a statement that occurs in every test.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, our test about of LedDriver_Create() involves a variable declaration beforehand.  So we can’t remove it.  That means we can only remove two of the duplicates but let’s take the opportunity to do it now anyway.  This statement will be required consistenly in upcoming tests anyway so it won’t be two for long:&lt;/p&gt;

&lt;p&gt;Here’s how TestLedDriver.c looks after refactoring&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;LedDriver.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_is_off_upon_creation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_TurnOn_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_TurnOff_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The tests are short and sweet.  That makes a big difference as your codebase &amp;amp; test suite starts to grow.  The faster you can understand what a newly failed test is doing, the more likely you are to identify and fix it quickly as well.&lt;/p&gt;

&lt;h4 id=&quot;start-on-green-end-on-green-with-refactoring&quot;&gt;Start on green, end on green with refactoring&lt;/h4&gt;
&lt;p&gt;Sometimes it can be tempting to refactor out a duplication you find while doing some other task.  Don’t do that. You always want a fully passing codebase before you start refactoring or you can get yourself into all kinds of confusing trouble.&lt;/p&gt;

&lt;h3 id=&quot;turning-on-a-specific-led--a-point-about-binary&quot;&gt;Turning on a specific Led (&amp;amp; a point about binary)&lt;/h3&gt;
&lt;p&gt;Right now the driver will represents all possible pins in a single binary value.  This is clearly not very useful on a board with multiple pins.  In this case, the 16-bit variable &lt;em&gt;ledsAddress&lt;/em&gt; represents 16 pins that represent whether its Led is on (1) or off (0).  So, for example, the binary &lt;em&gt;0000001001000000&lt;/em&gt; is equal to the hex value &lt;em&gt;0x240&lt;/em&gt; which is equal to &lt;em&gt;576&lt;/em&gt; on a decimal scale (the way we are accustomed to counting).  There are lots of binary-hexadecimal-decimal converters available online to help.&lt;/p&gt;

&lt;p&gt;Anyways, it’s time to start toggling different pins. Here’s the test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_TurnOn_MultipleLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The test returns 0x0001 instead of 0x0240, just like we’d coded it earlier.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:15:test_LedDriver_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:22:test_LedDriver_TurnOn_Led_seven:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:28:test_LedDriver_TurnOff_Led_seven:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:39:test_LedDriver_TurnOn_MultipleLeds:FAIL: Expected 0x0180 Was 0x0001

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
4 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Time to fix that with a technique called bit-shifting.  Important in embedded systems so get comfortable with it if you’re not already.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which will make your tests pass. So we can move onto the same case but for turning off a specific Led.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_TurnOff_AnLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It fails with 0x0000 instead of the intended 0x0040. Again this is what we intentionally coded earlier.  You’ll use a different bitwise operate to turn a specific bit to 0.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which brings everything to passing again.  You could consider refactoring the bitshift into a function that is more expressive of the intention.  Your future teammates will probably thank you for that. Make it static and keep it out of the header since there’s no reason an external call would need to use this function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There’s a bit of a nuance to what we’ve done here.  The pins on a teensy can be set to either &lt;a href=&quot;https://www.pjrc.com/teensy/td_digital.html&quot;&gt;read or write&lt;/a&gt;.  This means that a pin set to output (such as an LedDriver) cannot read the actual state of the pin. Instead it has to keep track of the values in its own separate memory location.&lt;/p&gt;

&lt;p&gt;Why is this important? Well, it comes down to the difference between state and action. Many embedded systems will use &lt;a href=&quot;https://www.state-machine.com/fsm/&quot;&gt;finite state machines&lt;/a&gt; in order to carry out their tasks.  If you look to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; function in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main()&lt;/code&gt;, the processor is occupied during the delay and cannot be asked to do any other tasks.  Using a state machine can help to free up system resources while still keeping track of the various peripherals (such as LEDs).&lt;/p&gt;

&lt;p&gt;Let’s look and how to ensure monitoring of state with a test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriver_does_not_read_the_LedMemoryMap_for_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which fails by returning the memory mapped location declared in the test setup&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedDriver.c:54:test_LedDriver_does_not_read_the_LedMemoryMap_for_state:FAIL: Expected 0x0080 Was 0xFFFF&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;note: this particular Rakefile will only recognize functions that start with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&amp;lt;WhateverModule&amp;gt;.c&lt;/code&gt; if you forget to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&lt;/code&gt; at the front of the function, the test will not be run.&lt;/p&gt;

&lt;p&gt;Here’s what the passing code looks like.  I didn’t include the Turn_off() function but it works the same:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;back-to-maincpp&quot;&gt;Back to main.cpp&lt;/h2&gt;

&lt;p&gt;So now we have a tested LedDriver. But it doesn’t actually make any system calls yet.  It’s also not being called by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.cpp&lt;/code&gt;.  How do we fix that?&lt;/p&gt;

&lt;p&gt;Before moving forward, double-check all is working correctly by plugging in the teensy and call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake deploy_teensy&lt;/code&gt;, to make sure it is loading blinky properly.  Since the test suite cleans up its objects after each build, rake is going to need to rebuild the teensy3 modules.  It takes 10 to 15s on my computer.&lt;/p&gt;

&lt;p&gt;first add in the new module to make sure it builds ok. The Rakefile should handle it without complaint.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;LedDriver.h&quot;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note: The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extern &quot;C&quot; {}&lt;/code&gt; wrapper is important here or you will get a linker error when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.cpp&lt;/code&gt; tries to call those functions.&lt;/p&gt;

&lt;h3 id=&quot;moving-the-system-calls-from-main-into-leddriver&quot;&gt;Moving the system calls from main into LedDriver&lt;/h3&gt;

&lt;p&gt;within main, there are 3 system calls:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode(ledNumber, OUTPUT);&lt;/code&gt;   which tells the teensy to treat this pin as an output.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast(ledNumber, HIGH);&lt;/code&gt;  Which applies a high (3.3V) voltage to the pin, causing the connected LED to light.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast(ledNumber, LOW);&lt;/code&gt;  Which applies 0 voltage to the pin, causing the connected LED to go dark.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;let’s try moving the first call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt; to LedDriver.&lt;/p&gt;

&lt;p&gt;LedDriver.c:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;LedDriver.h&quot;
#include &quot;Arduino.h&quot;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//static variables&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;main.cpp:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Arduino.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;LedDriver.h&quot;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// pinMode(ledNumber, OUTPUT);  // NOTE: this has been commented out&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// TeensyLedDriver_TurnOn(ledNumber);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// TeensyLedDriver_TurnOff(13);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Try deploying first with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake deploy_teensy&lt;/code&gt;.  That works! What about the tests with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt;?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/unity.o build/LedDriver.o build/TestLedDriver_Runner.o build/TestLedDriver.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedDriver.exe
/usr/bin/ld: build/LedDriver.o: &lt;span class=&quot;k&quot;&gt;in function&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;LedDriver_Activate&lt;span class=&quot;s1&quot;&gt;':
LedDriver.c:(.text+0xa8): undefined reference to `pinMode'&lt;/span&gt;
collect2: error: ld returned 1 &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;status
rake aborted!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unity is looking for the pinMode() function which is buried in the teensy source code.  The build handles that without complaint but Unity is set-up to only reference the files directly called by the test.  You’ll notice that even if we &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt;, the command will still fail because unity does not attempt to find functions buried in submodules.
The way to handle this is called a ‘link-time spy’.  A spy is an alternative, test-only module that gets allows you to stub a function and give a canned response to it.&lt;/p&gt;

&lt;p&gt;comment out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt; so that it doesn’t bother you while setting up the Spy&lt;/p&gt;

&lt;p&gt;What kind of behaviour might we expect from the LedDriver?  Well, it should be recognized but off if it’s activated. Something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_Unactivated_Led_will_return_LED_if_activated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LIGHT_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which will naturally fail if we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt; since those new functions are unrecognized. Comment out that test while we set-up the spy.&lt;/p&gt;

&lt;p&gt;Ok, so now we will create a new folder called ‘mocks’ where we will place the spy (and it’s tests).
mocks/TestLightDriverSpy.c:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;LedDriverSpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriverSpy_on_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice that in these tests, we are calling methods that would normally belong in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedDriver.c&lt;/code&gt;.  However, by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;LedDriverSpy.h&quot;&lt;/code&gt; we call the same function from a different file instead.  Let’s see what those functions look like within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedDriverSpy.h&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef D_LedDriverSpy_H
#define D_LedDriverSpy_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;LedDriver.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedDriverSpy.c&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;LedDriverSpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can add a couple more functions to Activate, Deactivate, turnOn and turnOff an LED.&lt;/p&gt;

&lt;p&gt;Here are the tests:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriverSpy_off_on_activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriverSpy_unknown_on_deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriverSpy_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedDriverSpy_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the passing code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_Deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedDriver_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//int LedDriverSpy_GetLastId(void)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//int LedDriverSpy_GetLastState(void)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So with a functioning Spy, we can now turn our attention back to LedDriver.&lt;/p&gt;

&lt;p&gt;What else do we expect from the driver?  Well, if we decide to deactivate it, it should not respond to TurnOn() or TurnOff().&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_Unactivated_Led_will_return_unknown_if_deactivated_and_turned_on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_Deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedDriver_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedDriverSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which will fail if we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestLedDriver_WithSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exe&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestLedDriver_WithSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_Unactivated_Led_will_return_LED_if_activated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PASS&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestLedDriver_WithSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_Unactivated_Led_will_return_unknown_if_deactivated_and_turned_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAIL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expected&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFFFF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Was&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x000A&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;This section needs to be rewritten after adjusting for LedController master 8ed22e7&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So now what happens if we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake deploy teensy&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;It compiles fine but fails at the linker because it requires an LedDriver that doesn’t exist yet.  So that will be the next step.&lt;/p&gt;

&lt;h3 id=&quot;verifying-that-returned-to-your-master-code&quot;&gt;Verifying that returned to your master code.&lt;/h3&gt;

&lt;p&gt;Since a Markov Decision Process is a highly attractive model for our planned device, you might be able to convince yourself that this project is going to require some ‘tweaks’ to your otherwise standard build-system.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="open-source" /><category term="embedded" /><category term="teensy" /><summary type="html">What are you getting out of completing this tutorial/exercise?</summary></entry><entry><title type="html">Past, Present and Future of Environmentalism - Presentation for Mapua’s Social Sciences and Education week</title><link href="https://sunetrike.com/presentations/environmentalism/mapua-humanities-presentation-environmentalism-past-present-future/" rel="alternate" type="text/html" title="Past, Present and Future of Environmentalism - Presentation for Mapua’s Social Sciences and Education week" /><published>2021-06-26T01:08:07+08:00</published><updated>2021-06-26T01:08:07+08:00</updated><id>https://sunetrike.com/presentations/environmentalism/mapua-humanities-presentation-environmentalism-past-present-future</id><content type="html" xml:base="https://sunetrike.com/presentations/environmentalism/mapua-humanities-presentation-environmentalism-past-present-future/">&lt;p&gt;As part the week in Social Sciences and Education at &lt;a href=&quot;ssse.mapua.edu.ph&quot;&gt;Mapua University&lt;/a&gt;, I was grateful for the opportunity to share my thoughts about environmentalism with some of the bright, emerging minds of the Philippines.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/pdfs/mapua-ssed-presentation.pdf&quot;&gt;Please click here to access: Past, Present and Future for Environmentalism&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I attempted to share what I felt was a good cross-section of links and references which represent the evolution of my own views since &lt;a href=&quot;https://apps.ualberta.ca/catalogue/course/ren_r/260&quot;&gt;taking a similar course&lt;/a&gt; during my own time spent in university.  I suspect more robust references could be found within the walls of academia.&lt;/p&gt;

&lt;p&gt;My hope is that what I shared will help give some students ideas on how to forge their own path in the world and find the courage to pursue their passion in a field as dynamic and complex as environmental sustainability.&lt;/p&gt;

&lt;p&gt;Readers are asked to please be mindful that the contents of this presentation were delivered with an addtional oral explanation so there is potential to misinterpret the statements.&lt;/p&gt;

&lt;p&gt;I welcome respectful discussion on this and I recognize that some of the topics discussed inside may have alterantive explanations that are also valid.  Meanwhile I will also contend that there are plenty of messages and opinions that we (humanity) have adopted which give a comfortable position from which to continue our destructive tendencies.&lt;/p&gt;

&lt;p&gt;Progress has been made, but we still have lots of work ahead of us.&lt;/p&gt;

&lt;p&gt;Opinions expressed in this presentation should not be considered as representative of the broader sunE team.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mapua/mapua-ssed-poster.jpeg&quot; alt=&quot;Social Sciences and Eduation - Mapua&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="presentations" /><category term="environmentalism" /><summary type="html">As part the week in Social Sciences and Education at Mapua University, I was grateful for the opportunity to share my thoughts about environmentalism with some of the bright, emerging minds of the Philippines. Please click here to access: Past, Present and Future for Environmentalism</summary></entry><entry><title type="html">My Pedal Powered Adventure - An hommage to Piccard’s Epic Voyage</title><link href="https://sunetrike.com/solar-impulse/my-pedal-powered-journey/" rel="alternate" type="text/html" title="My Pedal Powered Adventure - An hommage to Piccard’s Epic Voyage" /><published>2021-04-12T01:08:07+08:00</published><updated>2021-04-12T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/my-pedal-powered-journey</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/my-pedal-powered-journey/">&lt;p&gt;In a salute to the &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;1000 solution milestone&lt;/a&gt; of the Solar Impulse Foundation, This story is a bit of an hommage to the immensely inspiring 2010 TED talk by Captain Bertrand Piccard titled &lt;a href=&quot;https://www.ted.com/talks/bertrand_piccard_my_solar_powered_adventure#t-1046442&quot;&gt;‘My Solar-Powered Adventure’&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This entrepreneurship adventure of ours has had many highs and lows.  His speech has pulled me out of the depths of despair on more than one occasion.  What a great gift to humanity he has given by providing a living embodiment for the &lt;a href=&quot;/assets/images/pedal-power/next_generation.jpg&quot;&gt;Next Generation&lt;/a&gt; to tackle one of the biggest challenges of our time.  The team at sunE couldn’t be prouder to have been accepted onto this ship.&lt;/p&gt;

&lt;h2 id=&quot;so-without-further-ado-onto-the-story&quot;&gt;So without further ado, onto the story&lt;/h2&gt;

&lt;p&gt;The year is 2011, I had just won best presentation award at the 1st Student Research Symposium of the &lt;a href=&quot;http://www.helmholtz-alberta.org/?page_id=109&quot;&gt;Helmholtz Alberta Initiative&lt;/a&gt;.  As the only undergaduate to participate in the event, how exciting it was to be recognized by such accomplished academics for my efforts in trying to understand the nature of the energy tucked away deep below our feet.  I asked of one of these men, the head of an experimental forest in Germany, what is my next step?  His answer was simple:
	&lt;img src=&quot;/assets/images/pedal-power/science_handout.jpg&quot; alt=&quot;Just put your hand out&quot; /&gt;
	“Just put your hand out.”&lt;/p&gt;

&lt;p&gt;This wasn’t the answer I was looking for.  During my studies, I had formed the opinion that if we are going to solve climate change, it will be because we figured out how to make the business work.  Besides, I’d just graduated and spent the last couple months touring around southern British Columbia with one of my best buds Frankie (a master baker, painter and one of the most wonderfully caring souls you’ll ever meet).  I was in adventure mode and keen to bike down to the &lt;a href=&quot;https://www.icenews.is/2011/10/23/geothermal-energy-conference-to-see-participation-from-islandsbanki/&quot;&gt;Geothermal Resources Convention&lt;/a&gt; in California.  With all the volcanoes along the way, I was super excited about all the new things I would discover.&lt;/p&gt;

&lt;p&gt;I had stars in my eyes, I was on cloud-9.  Before I left, I stopped in to see my buddy Frankie, he was not looking so good.  Now that summer was over, he didn’t know how we was gonna make ends meet and didn’t know who to turn to.  He asked for help.&lt;/p&gt;

&lt;p&gt;Here I was, on one side, being given the opportunity to write my dream ticket.  On the other side, with a close friend desperately seeking a hand which I had no idea how to give.  But my bags were packed, I was hitting the road.  I cut the ballast, so to speak.&lt;/p&gt;

&lt;p&gt;So I picked up a ‘commuter’ bike (I was on my way to find a job after all) and a bit of camping gear from Lethbridge, Alberta and hit the road.
This is the picture of my border crossing.  Of course, in earlier times, there was no border and this was known simply as Blackfoot territory.  But I was happy to give a salute to all 3 nations represented at the border that day.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/border.jpg&quot; alt=&quot;Montana border crossing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The leaves and huckleberry pies of Montana in the autumn are a special treat that few know about.  The mountains aren’t as jagged as the peaks to the north in Canada, but the rivers wind through those valleys like the crispest ribbons of silk.&lt;/p&gt;

&lt;p&gt;Less than an hour across the border, BEAR!  BIG F-ING BEAR!  Biggest bloody grizzly bear I’ve ever seen in my life.  Bigger than most pickup trucks, I’m pretty sure with its paws stretched out, it would have spanned the entire 2-lane highway.  Less than 100 meters in front of me and my little commuter. This picture is not the actual bear by the way, I just found it on the internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/grizzly.jpg&quot; alt=&quot;BIG F-ING BEAR!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I grew up in &lt;a href=&quot;http://www.climatehotmap.org/global-warming-locations/british-columbia-canada.html&quot;&gt;Prince George&lt;/a&gt; and I’ve seen some big grizzly bears before.  But this was something else.  I didn’t even know they could get that big!!  But he didn’t stop, so he was gone as quickly as he appeared.&lt;/p&gt;

&lt;p&gt;On I went, into the Snake River Plane..volcano and ice cave territory.  I came upon a geology book with a fascinating theory.  That around 17 million years ago a meteor hit the crust so hard, that it cracked right down to the mantle and up came the volcanic hotspot we now know today as Yellowstone. 
Around the same time, Nevada stared stretching apart like a piece of taffy.  This created all sorts of volcanic goodies like hot springs, geothermal reservoirs and lithium deposits (a bit of gold and copper as well, if you’re into that sort of thing).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/nevada_rifting.png&quot; alt=&quot;Nevada Rifting!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From what I can tell, that particular theory didn’t really &lt;a href=&quot;https://www.latimes.com/archives/la-xpm-1990-03-19-me-477-story.html&quot;&gt;gain acceptance&lt;/a&gt; within the academic community to date.  I’m sure many alternate explanations are also very compelling, but that one has always stuck with me.&lt;/p&gt;

&lt;p&gt;Northern Nevada is a pretty rugged place.  Some like to joke that the only water around is boiling hot. It’s also a place for treasure hunters.  Probably one of the reasons the casinos felt so at home in the early days.&lt;/p&gt;

&lt;p&gt;One morning, after a night spent befriending a group of local bikers at Farpoint Station, I heard them calling out to me.  They were worried but relieved when I came from my camp.  They showed me all of the fresh mountain lion tracks around my bicycle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/cougar_paw.jpg&quot; alt=&quot;My, what big claws you have!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From that day on, I slept wearing my bike helmet, with bike chain around my neck, and buck knife in hand. Thankfully, I made it into California with no more feline encounters and time to spare.  I even got to hop in some top-notch natural hotsprings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/hot_spring.jpg&quot; alt=&quot;Best bath ever!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sadly, at the conference, pretty much everyone told me that I would need to go back to school to find a way into that industry.  I suppose that made sense.  But while speaking to the director of a major power company, I also received what I would now consider my first piece of executive advice:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;“Don’t feel bad being a big fish in a small pond”.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My thesis mentor, Jacek also came out.  He told me about the great priviledge that comes from the attaining of a PhD and that I would probably benefit from the stability that universities can provide.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/jacek.jpg&quot; alt=&quot;me n Jacek&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So then the trip was over, even if I wasn’t going to have my big break into the clean energy industry just yet, I was still supercharged from the experience and I was sure I would do it…somehow.&lt;/p&gt;

&lt;p&gt;On the flight back to Canada, I got a phone call.  Frankie was dead… Just like that, my world changed.  For all of the potential that I could look forward to, I had failed one of my closest friends.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/frankie.jpg&quot; alt=&quot;Frankie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Suicide is a complex issue at the best of times.  Everybody will have their thoughts about what could have been done.  Family &amp;amp; friends will each have different memories. Warning signs. Silent cries for help. 
“Oh, what I would have done if only I’d known.”&lt;/p&gt;

&lt;p&gt;In my case, there cry for help was not silent.  It was the last conversation that I had with him.  I chose not to act and I will carry that with me for the rest of my life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;“This achieving the centre - being grounded in one’s self - is about the highest state a human being can achieve” - Bruce Lee&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we decided to move to the Philippines to start sunE, it was a near-instant decision and we really dived in head first without looking.  We rallied behind a vision to usher in a new era of transportation for a country that has grown accustomed to a reality that was due for replacement more than 50 years ago.  This was along with all of the pollution, discomfort and hidden costs (externalities, in economist speak) that comes with it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/launch_day.jpg&quot; alt=&quot;Launch day&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In our first launch, people were delighted.  This was new, exciting and it improved quality of life in several ways beyond the quiet &amp;amp; ‘smokelessness’ of the vehicles themselves.  We were hitting our target numbers and people were feeling pretty optimistic about where we might go next.&lt;/p&gt;

&lt;p&gt;Contrary to the experience of many early-stage entrepreneurs, I cannot think of a single time that somebody told me that what we are trying to accomplish is impossible.  As foreigners operating in a developing economy, it tends to sound more like:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you can’t make it work, there’s no hope for the rest of us&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I reflect on my life so far, my circumstances have been extrememly fortunate.  I have many talents and have always had plenty of access to opportunity.  The system works well for me.  So I work hard and generally I get good results.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/gilbert.jpg&quot; alt=&quot;Gilbert&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While the modern era likes to promote itself as a champion of equal opportunity, Filipinos have become well-adjusted to a life lived on the margin of that system.&lt;/p&gt;

&lt;p&gt;Frankie’s roots were also much closer to the margin.  As much as he wanted to keep up with his friends (myself included) in their adventures, the cruel realities of his roots would show themselves.&lt;/p&gt;

&lt;p&gt;So here I am again, in the middle to two worlds, to the left is the world that is keen to reward talent and usher in the future as fast as possible. To the right is a world full of people working hard just to keep their head above water and searching frantically for a lifeline.  As the waters rise, the number of frantic swimmers will be only increase.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/maria.jpg&quot; alt=&quot;Maria&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is through knowing our history that we have the best chance of ensuring that this transition we are undertaking will produce a truly better future. I won’t pretend that I know the solution but I am as committed as ever to keep fighting to make this solution work, whatever it takes.&lt;/p&gt;

&lt;p&gt;Captain Piccard is dreaming that humanity will rise to a new level, will trust the winds (and the weathermen) to take us out of the challenges of today.  It is people like him that help me to keep my eyes on the horizon.  To watch for the silver lining.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/sunset.jpg&quot; alt=&quot;Sunset&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="solar-impulse" /><summary type="html">In a salute to the 1000 solution milestone of the Solar Impulse Foundation, This story is a bit of an hommage to the immensely inspiring 2010 TED talk by Captain Bertrand Piccard titled ‘My Solar-Powered Adventure’.</summary></entry><entry><title type="html">SE Asia’s Labelled Solutions for water cleanup.</title><link href="https://sunetrike.com/solar-impulse/se-asias-water-cleanup-solutions/" rel="alternate" type="text/html" title="SE Asia’s Labelled Solutions for water cleanup." /><published>2021-04-12T01:08:07+08:00</published><updated>2021-04-12T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/se-asias-water-cleanup-solutions</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/se-asias-water-cleanup-solutions/">&lt;p&gt;Here we are, one thousand solutions closer to a cleaner planet.  With the &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;#beyond1000solutions&lt;/a&gt; campaign, Solar Impulse is gearing up to bring the forward the next wave of Cleantech into the world.&lt;/p&gt;

&lt;p&gt;To get the ball rolling for the next phase, I’ve put together a short list of some of the solutions getting developed across SE Asia.&lt;/p&gt;

&lt;h2 id=&quot;the-broad-categories&quot;&gt;The broad categories&lt;/h2&gt;

&lt;p&gt;To date, SE Asia sits at 16 labelled solutions.  I’ve broken them down into 3 broad themes (I guess that makes me a lumper, not a splitter):&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Category&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Labelled Solutions&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cleaning up our water&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Getting more efficient&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Better, Cleaner Mobility&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For sure, some will contest my very crude categorizations.  I’d encourage them to also write an article.&lt;/p&gt;

&lt;h2 id=&quot;by-country&quot;&gt;By country&lt;/h2&gt;
&lt;p&gt;By country, it’s probably no surprise to anyone that Singapore leads the pack:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Labelled Solutions&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Singapore&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Hong Kong&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Philippines&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Taiwan&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thailand&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Given the obvious bias that would come along with me trying to pick favourites within a group that our company is active in, I’m only going to talk about my picks from Category 1 &amp;amp; 2.  This article is going to be about water.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;I would consider myself as a capable student of pollution solutions in general.  However, I claim no expertise or specialized knowledge in any of the technologies mentioned below.  I have not reviewed any information beyond what has been made publicy available on Solar Impulse and their own webpage.&lt;/p&gt;

&lt;h1 id=&quot;cleaning-up-our-water&quot;&gt;Cleaning up our water&lt;/h1&gt;

&lt;p&gt;There’s no question that global water resources are deteriorating.  This decline comes from various factors including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;direct chemical pollution&lt;/li&gt;
  &lt;li&gt;micro-plastics overtaking fish&lt;/li&gt;
  &lt;li&gt;fertilizer and erosion runoff killing the world’s coastal ecosystems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We desperately need to improve our track record on hydro-externalities.  The 3 solutions below each endeavour to accomplish that.&lt;/p&gt;

&lt;h2 id=&quot;1-ecoworth&quot;&gt;1. &lt;a href=&quot;http://ecoworth-tech.com/&quot;&gt;EcoWorth&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;solar-impulse-page&quot;&gt;&lt;a href=&quot;https://solarimpulse.com/efficient-solutions/carbon-fibre-aerogel-cfa&quot;&gt;Solar Impulse Page&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;EcoWorth is targeting organics in wastewater.  Organics are a broad category which include most of the contaminants causing bad smells in most of the region’s urban lakes and waterways.&lt;/p&gt;

&lt;p&gt;In the case of this technology, however, the ‘valuable organics’ that they are targeting appear to be some fom of spilled oil.&lt;/p&gt;

&lt;p&gt;You may find the video a little hard to understand, but take note of the oily, yellow film on top of the water.  Absorbent pillows like these are often used in oil spills on the ocean.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/0_ctmxYjVgI&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Because of the many pipelines and other oil-producing facilities across the world, these kinds of absorbent materials definitely have widespread demand.&lt;/p&gt;

&lt;p&gt;The term for a material that strongly repels water is &lt;em&gt;&lt;strong&gt;‘Cat’&lt;/strong&gt;&lt;/em&gt;.  Just kidding, it’s considered a ‘hydrophobic’ material and there are some great video demonstrations like this one out there in the cloud&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/Ls_ISb7lG-I&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-electro-contaminant-removal-system&quot;&gt;2. &lt;a href=&quot;http://www.tridentwater.com.sg/&quot;&gt;Electro-contaminant removal system&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;solar-impulse-page-1&quot;&gt;&lt;a href=&quot;https://solarimpulse.com/efficient-solutions/electro-contaminant-removal-ecr-system&quot;&gt;Solar Impulse Page&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;ECR targets contaminated wastewater by applying electric fields which cause dissolved contaminants to lump together or coagulate (like your blood, when you get cut).  Today, this process is often done using chemicals called floculants.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/yFlrfZK8ErU&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Avoiding chemical usage with this approach, is certainly attractive and I look forward to seeing more.
They are targetting phosphorus, even 10 years ago, concerns were being raised about phosphorus shortages in the coming decades.  Now that phosphorus has become a popular battery material, recovering the material from wastewater should be a high priority going forward.&lt;/p&gt;

&lt;h2 id=&quot;3-plakman&quot;&gt;3. PlakMan&lt;/h2&gt;
&lt;h3 id=&quot;solar-impulse-page-2&quot;&gt;&lt;a href=&quot;https://solarimpulse.com/efficient-solutions/plakman&quot;&gt;Solar Impulse Page&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ocean Plastics is a sector where the &lt;a href=&quot;https://www.researchgate.net/figure/waste-hierarchy-8-Eventually-the-higher-concepts-of-waste-management-such-as-3R-and_fig1_303369997&quot;&gt;Cleaner Production Pyramid&lt;/a&gt; plays a hugely important role.  The shear volume of plastics entering oceans every day is difficult to fathom.  To really make a dent on this issue will require solutions at every level of the pyramid.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/19x7ur_vCv0&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Given that collection/recovery, sits so low on the pyramid, they will probably be categorized as among the most expensive solutions. But that doesn’t mean it’s not necessary.  When PlakMan’s boats hit the water to start sucking up plastic, I hope careful thought will be  given to the location of their initial deployments.&lt;/p&gt;

&lt;p&gt;With all that said, I’m very happy to see new groups coming in to join the effort.  Humanity has had quite the party since first discovering plastics.  The cleanup job is substantial and many hands make lighter work.&lt;/p&gt;

&lt;h1 id=&quot;wrap-up&quot;&gt;Wrap up&lt;/h1&gt;

&lt;p&gt;Hopefully, some of my thoughts above have been helpful in looking at where we might go with these solutions.&lt;/p&gt;

&lt;p&gt;Since you’re here, feel free to look around and learn more about our own solution.  You can check out our &lt;a href=&quot;https://solarimpulse.com/efficient-solutions/sune&quot;&gt;Solar Impulse profile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m very excited to see these projects continue to build steam as we move &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;#beyond1000solutions&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="solar-impulse" /><summary type="html">Here we are, one thousand solutions closer to a cleaner planet. With the #beyond1000solutions campaign, Solar Impulse is gearing up to bring the forward the next wave of Cleantech into the world.</summary></entry><entry><title type="html">My First Lung Fractal</title><link href="https://sunetrike.com/fractals/lungs/dr-geo/first-lung-fractal/" rel="alternate" type="text/html" title="My First Lung Fractal" /><published>2021-01-14T01:08:07+08:00</published><updated>2021-01-14T01:08:07+08:00</updated><id>https://sunetrike.com/fractals/lungs/dr-geo/first-lung-fractal</id><content type="html" xml:base="https://sunetrike.com/fractals/lungs/dr-geo/first-lung-fractal/">&lt;p&gt;Since I first moved to the Philippines, the air pollution has been one of the hardest features to come to grips with.&lt;/p&gt;

&lt;p&gt;I seem to have especially sensitive lungs as I come down with lung infections 2 to 3 times a year and it lingers for several weeks meanwhile nobody around me ever seems to get sick.&lt;/p&gt;

&lt;p&gt;But enough about that, the coronavirus has given people all sorts of reasons to pay more attention to their lungs in 2020 and 2021.&lt;/p&gt;

&lt;p&gt;I also have a thing for fractals and lungs are one of the famous examples of fractals that make an impact on our everyday life. &lt;a href=&quot;https://www.atsjournals.org/doi/full/10.1164/rccm.200308-1107OC&quot;&gt;One study estimated a whopping 480 million alveoli&lt;/a&gt; in the lungs of an average adult.&lt;/p&gt;

&lt;p&gt;At a diametre of 0.2mm across, you need 8 of them to provide 1mm^2 of oxygen:blood interface.  This gives me a total surface are of 60m^2.  While &lt;a href=&quot;https://www.reference.com/science/surface-area-human-lungs-ffc6ae1756c2f2e&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;https://www.bbc.co.uk/bitesize/guides/zwyfxfr/revision/4&quot;&gt;internet&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Pulmonary_alveolus&quot;&gt;sources&lt;/a&gt; yield 50 to 100 m^2; about the size of a tennis court.&lt;/p&gt;

&lt;p&gt;To hit those kinds of numbers from a structure that bifurcates (branches or splits into 2), you need 29 levels of branching.  &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S1474667016387791&quot;&gt;Meanwhile, this study models branching down to 23 levels&lt;/a&gt;.  My computer starts to seriously slow down around 12.  Poor little bugger!&lt;/p&gt;

&lt;p&gt;I recently discovered &lt;a href=&quot;https://www.gnu.org/software/dr-geo/&quot;&gt;Dr Geo&lt;/a&gt;, a pretty cool open-source geometry drawing program with a Smalltalk interface.  This is totally new territory for me but I was able to get a branching fractal to make a crude approximation of a lung structure.&lt;/p&gt;

&lt;p&gt;Give it a shot, windows users will probably need to use &lt;a href=&quot;https://ubuntu.com/tutorials/ubuntu-on-windows#1-overview&quot;&gt;Ubuntu in Windows&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-smalltalk&quot; data-lang=&quot;smalltalk&quot;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; figure angle alpha beta strand centre edge &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DrGeoFigure&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;freeValue:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;degreesToRadians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;beta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;freeValue:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;360&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;degreesToRadians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;centre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;point:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;point:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;strand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; p1 p2 p3  seg &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;middleOf:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;and:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;center:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;angle:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;p3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;center:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;angle:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;seg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segment:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ifTrue:&lt;/span&gt; 
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;seg&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;large&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
		&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ifTrue:&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;strand&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p2&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;strand&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p3&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ifTrue:&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segment:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segment:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
		 &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;strand&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;centre&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;edge&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="fractals" /><category term="lungs" /><category term="dr-geo" /><summary type="html">Since I first moved to the Philippines, the air pollution has been one of the hardest features to come to grips with.</summary></entry><entry><title type="html">Supercapacitors for LSEVs</title><link href="https://sunetrike.com/supercapacitors/supercapacitors-for-lsevs/" rel="alternate" type="text/html" title="Supercapacitors for LSEVs" /><published>2021-01-09T01:08:07+08:00</published><updated>2021-01-09T01:08:07+08:00</updated><id>https://sunetrike.com/supercapacitors/supercapacitors-for-lsevs</id><content type="html" xml:base="https://sunetrike.com/supercapacitors/supercapacitors-for-lsevs/">&lt;p&gt;Supercapacitors increase battery efficiency by protecting the battery and other system components from excessive stress, and they enable onboard energy capture to reduce the energy cost for vehicle operation. Combining supercapacitors, batteries and onboard energy harvesting improves overall system operation efficiency and allows the vehicle to travel further on a single charge, compared to the battery alone.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Lois Gray</name></author><category term="supercapacitors" /><summary type="html">Supercapacitors increase battery efficiency by protecting the battery and other system components from excessive stress, and they enable onboard energy capture to reduce the energy cost for vehicle operation. Combining supercapacitors, batteries and onboard energy harvesting improves overall system operation efficiency and allows the vehicle to travel further on a single charge, compared to the battery alone.</summary></entry><entry><title type="html">The role of technology in bringing us to a Carbon-neutral Future - Presentation for CUNY’s Administration of Global Institutions class</title><link href="https://sunetrike.com/presentations/carbon-neutral/cuny-global-institutions-presentation-he-role-of-technology-in-bringing-us-to-a-carbon-neutral-future/" rel="alternate" type="text/html" title="The role of technology in bringing us to a Carbon-neutral Future - Presentation for CUNY’s Administration of Global Institutions class" /><published>2020-04-18T01:08:07+08:00</published><updated>2020-04-18T01:08:07+08:00</updated><id>https://sunetrike.com/presentations/carbon-neutral/cuny-global-institutions-presentation--he-role-of-technology-in-bringing-us-to-a-carbon-neutral-future</id><content type="html" xml:base="https://sunetrike.com/presentations/carbon-neutral/cuny-global-institutions-presentation-he-role-of-technology-in-bringing-us-to-a-carbon-neutral-future/">&lt;p&gt;As the new school year came along, I got the chance to come in for another of Professor Binda’s classes on Administration of Global Institutions at the City University of New York (CUNY).  Once again they were discussing the ASEAN zone but our exciting news this time was getting accepted as SE Asia’s first labelled solution of the Solar Impulse Foundation.  Very exciting&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/pdfs/sunE-cuny-presentation-apr-2020.pdf&quot;&gt;Please click here to access: The role of technology in bringing us to a Carbon-neutral Future&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that some of them will be able to approach their future posts equipped with some insights about the positive possibilities that a carbon market can create.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="presentations" /><category term="carbon-neutral" /><summary type="html">As the new school year came along, I got the chance to come in for another of Professor Binda’s classes on Administration of Global Institutions at the City University of New York (CUNY). Once again they were discussing the ASEAN zone but our exciting news this time was getting accepted as SE Asia’s first labelled solution of the Solar Impulse Foundation. Very exciting Please click here to access: The role of technology in bringing us to a Carbon-neutral Future</summary></entry><entry><title type="html">sunE is now a Solar Impulse Efficient Solution</title><link href="https://sunetrike.com/solar-impulse/sune-is-now-a-solar-impulse-label/" rel="alternate" type="text/html" title="sunE is now a Solar Impulse Efficient Solution" /><published>2019-07-11T01:08:07+08:00</published><updated>2019-07-11T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/sune-is-now-a-solar-impulse-label</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/sune-is-now-a-solar-impulse-label/">&lt;p&gt;&lt;img src=&quot;/assets/images/SIF_LABEL.png&quot; alt=&quot;Solar Impulse label&quot; /&gt;&lt;/p&gt;

&lt;p&gt;sunE has been named by the Solar Impulse World Alliance as one of their 1000 efficient solutions. As part of the Solar Impulse World Alliance of Efficient Solutions, sunE will showcase our solution to innovators, investors and decision makers around the world. The official announcement will happen by solar impulse in the coming months.&lt;/p&gt;

&lt;p&gt;The Solar Impulse organization is spearheaded by renowned Swiss explorer Betrand Piccard who flew around the world in a solar-powered plane without using a single drop of fossil fuel. He set out on that mission to prove that today’s clean technologies can compete with conventional fossil fuels.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/piccard-with-solar-impulse.jpeg&quot; alt=&quot;Capt Bertrand Piccard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Piccard is bringing together 1000 of the world’s most promising clean technology innovations and connect them to investors, and leaders from around the globe. The Solar Impulse purpose is to bridge the gap between those building the solutions and the decision makers who will implement them.&lt;/p&gt;

&lt;p&gt;The sunE solution was assessed by a panel of international experts for its technological feasibility, environmental, socio-economic benefits, and economic profitability. We are proud to announce that we scored top marks in all 3 categories!&lt;/p&gt;

&lt;p&gt;Being selected as a Solar Impulse Solution is a great honour for sunE and a significant step onto the public stage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sunE-w-solar-impulse-label.png&quot; alt=&quot;sunE Labelled Solution&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Phil Gray</name></author><category term="solar-impulse" /><summary type="html"></summary></entry><entry><title type="html">Tales from Trying to Improve Transportation in the Philippines - Presentation for CUNY’s Administration of Global Institutions class</title><link href="https://sunetrike.com/presentations/tranportation/cuny-global-institutions-presentation-tales-of-trying-to-improve-transportation-in-the-philippines/" rel="alternate" type="text/html" title="Tales from Trying to Improve Transportation in the Philippines - Presentation for CUNY’s Administration of Global Institutions class" /><published>2018-11-03T01:08:07+08:00</published><updated>2018-11-03T01:08:07+08:00</updated><id>https://sunetrike.com/presentations/tranportation/cuny-global-institutions-presentation-tales-of-trying-to-improve-transportation-in-the-philippines</id><content type="html" xml:base="https://sunetrike.com/presentations/tranportation/cuny-global-institutions-presentation-tales-of-trying-to-improve-transportation-in-the-philippines/">&lt;p&gt;As a follow-on to our participation in the 2018 Smart Infrastructure Challenge, I got the very cool opportunity to share some of my experiences with Professor Binda’s class on Administration of Global Institutions at the City University of New York (CUNY).  They were reviewing the ASEAN zone and so I talked a bit about my experiences with entrepreneurship in SE Asia.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/pdfs/sunE-cuny-presentation-nov-2018.pdf&quot;&gt;Please click here to access: Tales from Trying to Improve Transportation in the Philippines&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Given the focus of the class, it was a good opportunity to summarize &amp;amp; synthesize some of the research I’d done on Public-Private Partnerships (P3) during the Smart Infrastructure Challenge.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="presentations" /><category term="tranportation" /><summary type="html">As a follow-on to our participation in the 2018 Smart Infrastructure Challenge, I got the very cool opportunity to share some of my experiences with Professor Binda’s class on Administration of Global Institutions at the City University of New York (CUNY). They were reviewing the ASEAN zone and so I talked a bit about my experiences with entrepreneurship in SE Asia. Please click here to access: Tales from Trying to Improve Transportation in the Philippines</summary></entry></feed>