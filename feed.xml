<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://sunetrike.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sunetrike.com/" rel="alternate" type="text/html" /><updated>2023-01-03T06:43:40+08:00</updated><id>https://sunetrike.com/feed.xml</id><title type="html">sunE</title><subtitle>Wake up to the world that solar and Low Speed Electric Vehicles (LSEVs) can offer the Philippines</subtitle><author><name>Allan Gray</name></author><entry><title type="html">Press Release - International Research Collaboration for energy harvesting vehicle suspension</title><link href="https://sunetrike.com/energy-harvester/announcements/sune-energy-harvester-research-grant/" rel="alternate" type="text/html" title="Press Release - International Research Collaboration for energy harvesting vehicle suspension" /><published>2021-11-24T01:08:07+08:00</published><updated>2021-11-24T01:08:07+08:00</updated><id>https://sunetrike.com/energy-harvester/announcements/sune-energy-harvester-research-grant</id><content type="html" xml:base="https://sunetrike.com/energy-harvester/announcements/sune-energy-harvester-research-grant/">&lt;p&gt;sunE is pleased to announce the undertaking of a new international research collaboration around energy harvesting suspencsion systems for low-speed electric vehicles.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/pdfs/2021-11-24_harvester-pr.pdf&quot;&gt;Please click here to view the Nov 2021 Energy Harvester project press release&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="energy-harvester" /><category term="announcements" /><summary type="html">sunE is pleased to announce the undertaking of a new international research collaboration around energy harvesting suspencsion systems for low-speed electric vehicles.</summary></entry><entry><title type="html">A TDD rake based build-system for multi-targeting Arm Cortex-M - using the teensy 3.6 as an example</title><link href="https://sunetrike.com/open-source/embedded/teensy/a-test-drive-build-system-for-teensy/" rel="alternate" type="text/html" title="A TDD rake based build-system for multi-targeting Arm Cortex-M - using the teensy 3.6 as an example" /><published>2021-10-22T01:08:07+08:00</published><updated>2021-10-22T01:08:07+08:00</updated><id>https://sunetrike.com/open-source/embedded/teensy/a-test-drive-build-system-for-teensy</id><content type="html" xml:base="https://sunetrike.com/open-source/embedded/teensy/a-test-drive-build-system-for-teensy/">&lt;p&gt;&lt;strong&gt;Learn how to create modular code for embedded systems using a Test Driven Development approach&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;intro-and-background&quot;&gt;Intro and background&lt;/h2&gt;

&lt;p&gt;Want to dig deeper into developing with Arm Cortex MCUs?  Interested in seeing how embedded systems are tested or developing some TDD skills for Arduino projects?  Have a go at this tutorial!&lt;/p&gt;

&lt;p&gt;We at sunEtrike have big dreams for our software development.  While I did take one CompSci course during my first year of college/uni, beyond that I’ve had to learn everything else as I went.&lt;/p&gt;

&lt;p&gt;One of the things I hated most about coding was tracking down bugs.  For us to one day grow into a professional software team, we have to have strong systems in place for catching bugs and ensuring quality.&lt;/p&gt;

&lt;p&gt;Test Driven Development has gone up and down of favour over the years but I think by now it’s well understood in the industry understands that code needs to be well tested before it goes out to users.&lt;/p&gt;

&lt;p&gt;An automated testing suite is a very important piece of that process, especially for devops oriented teams.
With this tutorial, I have finally managed to combine my learnings into a test suite that builds on a real board.&lt;/p&gt;

&lt;h2 id=&quot;what-are-you-getting-out-of-completing-this-tutorialexercise--a-modularized-tdd-example-of-blinky-using-minimalist-tools&quot;&gt;What are you getting out of completing this tutorial/exercise?  A modularized TDD example of blinky using minimalist tools&lt;/h2&gt;

&lt;p&gt;This article will build for the open source &lt;a href=&quot;https://www.pjrc.com/store/teensy36.html&quot;&gt;teensy3.6&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then in the follow on article we will add the &lt;a href=&quot;https://www.nxp.com/part/FRDM-KL25Z&quot;&gt;FRDM-KL25Z&lt;/a&gt; a development board by NXG with lots of interesting peripherals included.  The FRDM SDK is more low level compared to the teensy so that one will be shorter but more technical.&lt;/p&gt;

&lt;p&gt;This tutorial may be worthwhile for you to try if:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;You are an Arduino developer who hasn’t yet built an app outside of a single file Arduino sketch and are interested in upping your coding skills and learning how to use TDD to make your code more modular and portable.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are a TDD-inclined Ruby developer interested in getting into embedded systems and IoT.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At the end of this tutorial, You will have a test driven version of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blinky&lt;/code&gt; module that often plays the role of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; for embedded systems/Arduino projects.&lt;/p&gt;

&lt;p&gt;Basically, this article is my attempt to distill what I’ve learned about embedded testing to date and hopefully give a starting point to anybody who is interested in trying automated testing/Test Driven Development (TDD) within the world of open-source &amp;amp; embedded systems.&lt;/p&gt;

&lt;p&gt;You can browse the &lt;a href=&quot;https://github.com/graial/teensy_rake&quot;&gt;github repo&lt;/a&gt; to have a look.  It is a &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt; based build using &lt;a href=&quot;https://www.throwtheswitch.org&quot;&gt;Unity&lt;/a&gt; as the testing framework.  After getting the toolchain set-up, we’ll use TDD to refactor teensy’s starter blinky code into its own module and add an abstraction layer to the interface.&lt;/p&gt;

&lt;p&gt;This Rakefile was developed and tested using a Linux system and GCC11.  I am pretty rusty with Windows these days but I realize it’s still super common for embedded systems developer to use Windows so don’t worry if that’s you.  Here’s an NXP tutorial for setting up the &lt;a href=&quot;https://www.nxp.com/document/guide/get-started-with-the-frdm-kl25z:NGS-FRDM-KL25Z#0&quot;&gt;GCC toolchain on  Windows via MingW&lt;/a&gt;. 
 Alternatively, if you dont have Linux on your CPU you can also try &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/install&quot;&gt;Windows Subsystem Linux&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;why-bother-with-automated-testing-for-embedded-systems&quot;&gt;Why bother with automated testing for embedded systems?&lt;/h2&gt;

&lt;p&gt;I’m a big fan of automated testing.  As somebody who is always juggling a lot of balls in the air.  It gives me a lot of comfort to revisit an area of my codebase that I haven’t seen in 6-8 months and allow the tests to remind me how it works.&lt;/p&gt;

&lt;h3 id=&quot;dual-targeting-and-even-multi-targeting&quot;&gt;Dual-targeting and even multi-targeting&lt;/h3&gt;

&lt;p&gt;There has been a lot of news lately about a global shortage in microcontrollers and semiconductors.  So the ability to write an embedded application that can build on multiple devices may mean the difference of whether or not your protoypes make it into production.  TDD forces you to decouple your application layer from the underlying hardware which, generally makes for better portability to other devices &amp;amp; systems.&lt;/p&gt;

&lt;h3 id=&quot;solid-flexible-and-testable-designs&quot;&gt;SOLID, Flexible, and Testable Designs&lt;/h3&gt;

&lt;p&gt;The term ‘spaghetti code’ gets thrown around a lot in the software world.  Codebases that have long, complicated functions, nested ifs, etc can become a nightmare to tweak &amp;amp; maintain over time.  As a codebase progresses and matures, these types of interwoven dependencies can significantly slow down progress and new releases.&lt;br /&gt;
One of the main benefits of TDD is the way it forces you to think about the design and structures of your code.  Grenning identifies the SOLID framework, originally attributed to “Uncle” Bob Martin in &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1002/pfi.21408&quot;&gt;“Agile Software Development: Principles, Patterns, and Practices”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The C-language is not object oriented which means that these principles are implemented at the module level.&lt;/p&gt;

&lt;p&gt;There are plenty of articles on the internet which describe SOLID in different contexts so I’m only going to briefly describe how I understand these principles to apply to the embedded context.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;S Single Responsibility Principle&lt;/strong&gt; - The name says it all here; a module should have one job.  This often leads to very descriptive module names.  A module called &lt;strong&gt;LEDdriver.c&lt;/strong&gt; is expected to turn the LEDs on and off.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;O Open-Closed Principle&lt;/strong&gt; - ‘Open for extension, Closed for modification’. For example, The LedDriver.c module may leverage a separate &lt;strong&gt;BaseLedDriver.c&lt;/strong&gt; module in order to trigger the specific actions for the teensy.  If you now want to add support for a new device (Netduino, for example), You would create a &lt;strong&gt;NetduinoLedDriver.c&lt;/strong&gt; which also calls &lt;strong&gt;BaseLedDriver&lt;/strong&gt;. Both devices would then interact with the rest of the application in the same way even if their underlying implementations are different.  As a developer, you do not need to modify &lt;strong&gt;BaseLedDriver.c&lt;/strong&gt; to add a new target board.  We will dig into this when we abstract our teensy code to handle a second device.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;L Liskov Substitution Principle&lt;/strong&gt; - In the LEDdriver example, you might create a data structure that encompasses the basic information of an LedDriver.  This is what permits you to substitute in a mock interface during testing.  By doing this, any other module (an &lt;strong&gt;LedScheduler.c&lt;/strong&gt;, for example) that wants to trigger an Led, will use the same function call. The calling module does not care about the implemenation details.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;I Interface Segregation Principle&lt;/strong&gt; - The interface of a module should be limited to a single concept.  An &lt;strong&gt;LedDriver.c&lt;/strong&gt; is basically a light-switch.  It wouldn’t make sense for you to check the time by looking at a light switch.  Time and Light “Status” are very different concepts.  If you find yourself asking about both of those concepts within the same interface, function call, etc) Then the interfae of your module is probably not well segregated.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;D Dependency Inversion Principle&lt;/strong&gt; - Dependencies between modules create problems both for testing and for changing over time.  It’s can be very challenging to debug embedded systems especially since the physical world can do something unexpected (up to and including cosmically-induced bit-flips) which suddenly place the device in &lt;em&gt;no man’s land&lt;/em&gt; as far as your code is concerned.  While these issues will always challenge even the most battle-hardened software vets who are operating down near the bare-metal, the ability to reduce dependencies can help to simplify the problem of how to escape from an unknown state-space.&lt;br /&gt;
Putting this into practice in testing will often involve turning your module into a ‘black-box’.  Where the caller makes an abstracted call such as &lt;strong&gt;‘is Led #5 on?’&lt;/strong&gt; or &lt;strong&gt;‘turn the blue led off’&lt;/strong&gt;.  The internal details of how the serving module makes that call is hidden from the caller.  In embedded TDD, function pointers are often used in order to allow testing of these abstracted interfaces.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-i-found-big-challenges-in-learning-automated-testing-for-embedded-systems&quot;&gt;Where I found big challenges in learning automated testing for embedded systems&lt;/h2&gt;

&lt;p&gt;As I’ve been diving deeper into the world of embedded systems and mirocontrollers, I wanted to make sure that I had a handle on how to apply TDD in the world of C cross-compiling.  So I picked up copy of James Grenning’s book &lt;a href=&quot;https://pragprog.com/titles/jgade/test-driven-development-for-embedded-c/&quot;&gt;TDD for Embedded Systems&lt;/a&gt;.  Among the two testing frameworks he demonstrated, I preferred &lt;a href=&quot;http://www.throwtheswitch.org/unity&quot;&gt;Unity&lt;/a&gt; this is mainly because I am still a relative novice in C and I’d prefer to avoid mixing languages at this time.  The other option &lt;a href=&quot;http://cpputest.org/&quot;&gt;CppUTest&lt;/a&gt; is written in C++.&lt;/p&gt;

&lt;p&gt;One complication to this is that the library supplied by the teensy is a mix of c &amp;amp; C++.  Even in this tutorial we will encounter a C++ module and learn how to deal with it from our application code.&lt;/p&gt;

&lt;p&gt;As a relative novice in c-programming, just getting Grenning’s examples to build took a pretty big effort.  Eventually I got through and voila, my reward was a suite of passing tests that &lt;strong&gt;could NOT&lt;/strong&gt; be built on any particular device.  While it makes sense within the scope of his book, I found myself floundering a bit in trying to figure out how to get this well-tested &amp;amp; decoupled book code to deploy onto an actual device.&lt;/p&gt;

&lt;p&gt;Embedded TDD tries to offer its practitioner the promise of development without hardware.  It’s an attractive but rather lofty goal for a small team. At the end of the day, if well-tested code doesn’t perform as expected on the board, then the whole effort is wasted.&lt;/p&gt;

&lt;p&gt;The open-source &lt;a href=&quot;https://www.pjrc.com/teensy&quot;&gt;Teensy&lt;/a&gt; boards serve as a good starting point for Arduino developers learning how to get into ARM Cortex.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.pjrc.com/teensy/td_download.html&quot;&gt;Teensyduino&lt;/a&gt; package contains a starter makefile and blinky source code.  To ensure the necessary toolchain is set-up on your computer, please make sure you can build and run it before attempting to use this code.&lt;/p&gt;

&lt;h2 id=&quot;rake-vs-make-for-embedded-development&quot;&gt;Rake vs Make for embedded development&lt;/h2&gt;

&lt;p&gt;Slowly but surely, I’m learning to navigate makefiles, they are quite cryptic to read and learn but I as far as I can tell, they are still pretty much industry standard.  From a TDD &amp;amp; multitargeting perspective, they suffer from a couple important drawbacks:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;They are a domain-specific language that is super hard to read for the uninitiated&lt;/li&gt;
  &lt;li&gt;They don’t have a way to test and protect against regressions &lt;strong&gt;Most important&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While scripting languages often suffer speed wise, in this case, I feel that having a fully object-oriented language more than makes up for it and I’m very fond of &lt;a href=&quot;https://rspec.info/&quot;&gt;RSpec&lt;/a&gt; for its expressiveness and readability.  As the ruby version of Make, Rake does a lot of the heavy lifting for us on this job.  If you are curious to learn more about Rake, I pulled a lot from &lt;a href=&quot;https://avdi.codes/rake-part-1-basics/&quot;&gt;this blog&lt;/a&gt; while learning how rake handle dependencies and filetypes.  I leaned heavily on ElectronVector’s blog post on using &lt;a href=&quot;http://www.electronvector.com/blog/using-gcc-for-automatic-c-language-dependency-management-with-rake&quot;&gt;rake to drive GCC&lt;/a&gt;.  This example is basically a TDD version of that rakefile.&lt;/p&gt;

&lt;p&gt;Unity provides a &lt;a href=&quot;https://github.com/ThrowTheSwitch/Unity/tree/master/examples/example_3&quot;&gt;starter rakefile&lt;/a&gt; &lt;strong&gt;without a test harness&lt;/strong&gt;.  It works well but in order for me to put a test harness around it, I needed to extract it to a class.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;To get started, let’s take an inventory of what we have to work with.&lt;br /&gt;
If you mainly use arduino studio you may not have used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make&lt;/code&gt; very much&lt;/p&gt;

&lt;h3 id=&quot;getting-your-toolchain-in-place&quot;&gt;Getting your toolchain in place&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;The makefile and starter source code can be found at &lt;a href=&quot;https://www.pjrc.com/teensy/td_download.html&quot;&gt;Teensyduino&lt;/a&gt;. For my Teensy 3.6, the makefile is located at &lt;strong&gt;hardware/teensy/avr/cores/teensy3&lt;/strong&gt;.  If you have a Teensy4, it will be at &lt;strong&gt;cores/teensy4&lt;/strong&gt; and so on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;IMPORTANT: Make sure your computer’s teensy buildchain is correctly setup by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make&lt;/code&gt; within this folder and seeing blinky running on your device&lt;/em&gt;.  Windows users can get &lt;em&gt;make&lt;/em&gt; by installing &lt;a href=&quot;https://osdn.net/projects/mingw/downloads/68260/mingw-get-setup.exe/&quot;&gt;MingW&lt;/a&gt; (core, C++ &amp;amp; msys) which has a helpful little &lt;a href=&quot;https://nerdyelectronics.com/install-mingw-on-windows-for-make/&quot;&gt;walkthrough for embedded developers here&lt;/a&gt;.  If you prefer a package manager, there is also a &lt;a href=&quot;https://community.chocolatey.org/packages/make&quot;&gt;Chocolatey package&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The teensy loader should pop-up automatically.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_loader.png&quot; alt=&quot;teensy_loader_interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The programming status bar should pop-up as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_programming.png&quot; alt=&quot;teensy_programming_dialog&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keep an eye out for both of these as you are progressing through the test-suite&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The rakefile and starter source code within &lt;a href=&quot;http://www.throwtheswitch.org/unity&quot;&gt;example 3 of Unity&lt;/a&gt; (located at examples/examples3). &lt;em&gt;Make sure your computer’s ruby buildchain is correctly setup by running &lt;strong&gt;rake&lt;/strong&gt; within this folder.  Unity should report a couple tested modules; each with some successful, failed and ignored tests&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;setting-up-a-new-project&quot;&gt;Setting up a new project&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;After cloning the &lt;a href=&quot;&quot;&gt;teensy_tdd_rake repo&lt;/a&gt;, run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to set-up rake and rspec/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Copy the teensy3 folder into the root folder&lt;/li&gt;
  &lt;li&gt;Copy the unity.framework folder into the root folder. &lt;em&gt;you may want to include it as a git submodule using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git submodule add https://github.com/ThrowTheSwitch/Unity&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that, you should now have the following folder tree:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_rake_folders.png&quot; alt=&quot;teensy_rake folder layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To test the buildchain, We are going to run first run with teensy disconnected, then with it connected.&lt;/p&gt;

&lt;h4 id=&quot;1-disconnect-the-teensy-and-type&quot;&gt;1. Disconnect the teensy and type&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rspec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It should return with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XX examples and 1 failure&lt;/code&gt;.  What’s the failure?  Well, I’ve started you off on step 1 of the Red-Green-Refactor cycle.   We’ll come back to the failed test a little later..&lt;/p&gt;

&lt;h4 id=&quot;2-connect-the-teensy-and-type&quot;&gt;2. Connect the teensy and type&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rspec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you are running on an ubuntu install, this may work immediately.  However, 
The Rakefile_helper will attempt identify if a device is connected at usb address &lt;em&gt;/dev/ttyACM0&lt;/em&gt; or &lt;em&gt;/dev/ttyACM1&lt;/em&gt;. These are the default usb locations on both my Linux Mint &amp;amp; ArchLinux installs.  If the addresses on your system are different you can update within the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;system.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If it identifies that a teensy is connected, it will run those tests, otherwise it will skip them.  The teensy tests are a bit slow but it’s the best way I’ve found so far to do an &lt;a href=&quot;https://thoughtbot.com/blog/testing-from-the-outsidein&quot;&gt;outside-in&lt;/a&gt; test of the build.&lt;/p&gt;

&lt;p&gt;If you’ve made it this far, congrats!  You’ve now got an open-source, TDD build system for your teensy to get you going on your way towards TDD and/or multi-targetting.&lt;/p&gt;

&lt;h2 id=&quot;testing-and-iterating&quot;&gt;Testing and Iterating&lt;/h2&gt;

&lt;p&gt;Regardless of what kind of software you are building, there will be some variation of a testing pyramid similar to the picture below.  At the top are the ‘acceptance or feature’ tests which cover all of the important functionalities that your users expect to see.  These are slow to run and require the physical hardware and probably customized bench &amp;amp; field testing programs.  Writing these tests can help to clarify your thinking about what exactly you are expecting your software solution to achieve for your users.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/TDD_pyramid.png&quot; alt=&quot;The TDD Pyramid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: this is not my picture.  the &lt;a href=&quot;https://medium.com/@joatmon08/test-driven-development-techniques-for-infrastructure-a73bd1ab273b&quot;&gt;source is here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the case of our TDD build-system, our interface is the Rakefile.  The following commands are defined:&lt;/p&gt;

&lt;p&gt;For testing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prepare_for_tests&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unit&lt;/code&gt; (the default, will run on the basic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt; command)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For deployment:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy&lt;/code&gt;  Loads the binary to the target via USB&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prepare_binary&lt;/code&gt;  Links the compiled source code and converts the binary into a hex ready for upload&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_main&lt;/code&gt;  compiles your application code&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_target&lt;/code&gt; compiles all sources provided by the target into a static library that can be linked in at a later stage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since the task ‘unit’ is the default, typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt; is equivalent to typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake unit&lt;/code&gt;. Try it now if you need any convincing.&lt;/p&gt;

&lt;p&gt;Before&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Clearing build directory
Running unit tests
Running system tests...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-first-build-system-spec&quot;&gt;The first build-system spec.&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 9393d17&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pro tip: If you cloned the github project above, you can check your progress against these commit using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git diff &amp;lt;commit_id&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/em&gt;
&lt;em&gt;For example.  If you are working on the file &lt;strong&gt;src/LedController.c&lt;/strong&gt; and cant seem to get the same result as me, try typing git &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diff 9393d17 src/LedController.c&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before going forward, let’s have a look at layout of the &lt;strong&gt;spec/&lt;/strong&gt; folder&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/teensy_rake/teensy_rake_spec_folders.png&quot; alt=&quot;teensy_rake spec folder layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are 3 files that defines specs:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Rakefile_spec.rb&lt;/strong&gt; - As mentioned above, this is the interface for our buildsystem.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;spec/rakefile_helper_spec.rb&lt;/strong&gt; - All of the application logic and customization is found in here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;spec/helper_methods/helper_methods_spec.rb&lt;/strong&gt; - These are methods to assist in setting up and tearing down tests.  They mostly perform string and file manipulation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s look again at the failing spec by hitting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rspec&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Rakefile defaults to unit tests
   Failure/Error: expect&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;check_for_file&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;target_exe_filepath&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;.to eq&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   
     expected: &lt;span class=&quot;nb&quot;&gt;true
          &lt;/span&gt;got: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
   
     &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;compared using &lt;span class=&quot;o&quot;&gt;==)&lt;/span&gt;
   
     Diff:
     @@ &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; +1 @@
     &lt;span class=&quot;nt&quot;&gt;-true&lt;/span&gt;
     +false
     
   &lt;span class=&quot;c&quot;&gt;# ./spec/Rakefile_spec.rb:43:in `block (2 levels) in &amp;lt;top (required)&amp;gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;During this spec, Rspec was told to expect something to be true. Those instructions are located at &lt;strong&gt;/spec/Rakefile_spec.rb:43&lt;/strong&gt;.  Let’s have a look at that file &amp;amp; line.  We see the offending spec:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;defaults to unit tests&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;target_exe_filepath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;TestLedController.exe&apos;&lt;/span&gt;
	&lt;span class=&quot;sb&quot;&gt;`rake`&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check_for_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_exe_filepath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In case you are not familiar with Ruby, here’s what the spec is requesting in plain english:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expect to find a file named &apos;TestLedController.exe&apos; inside of the build folder&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&quot;http://www.throwtheswitch.org/build/build-unity&quot;&gt;check this page&lt;/a&gt; for more details about how Unity is built.  For our purposes, we just need to know that the Unity build was triggered rather than the teensy build.  But why did it fail?  Well, this Rakefile instucts Unity to search in the &lt;strong&gt;test/&lt;/strong&gt; folder for files named &lt;strong&gt;TestSomeModule.c&lt;/strong&gt;.  There is no file like that so the test fails.  We are Red, in the Red-Green-Refactor loop.  Let’s create a blank file with the specified name &lt;strong&gt;TestLedController.c&lt;/strong&gt; and try again&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Clearing build directory
Running unit tests
Running system tests...

gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ build/TestLedController_Runner.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedController_Runner.o

gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedController.o

&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:1: warning: ISO C forbids an empty translation unit &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wpedantic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/TestLedController_Runner.o build/TestLedController.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedController.exe&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rake successfully recognized the new file! Great!  It began compiling its modules, first &lt;strong&gt;TestLedController_Runner.o&lt;/strong&gt; and then &lt;strong&gt;TestLedController.o&lt;/strong&gt; before exiting with an error.  New information and new errors is progress in the TDD cycle.&lt;/p&gt;

&lt;p&gt;Here’s the basic structure of a test in unity.  Try adding it to the empty file to see what you get…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;LedController.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_Led_Controller_does_a_thing_and_fails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;TEST_FAIL_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Our greatest glory is not in never falling, but in rising every time we fall. - Confucius&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Clearing build directory
Running unit tests
Running system tests...
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ unity.framework/src/unity.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/unity.o
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ build/LedController_Runner.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedController_Runner.o
build/TestLedController_Runner.c:5:10: fatal error: LedController.h: No such file or directory
    5 | &lt;span class=&quot;c&quot;&gt;#include &quot;LedController.h&quot;&lt;/span&gt;
      |          ^~~~~~~~~~~~~
compilation terminated.
rake aborted!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, this time it couldn’t find the header file.  For those of you who are still getting used to the difference between source and header files.  One way to think about it is that the header file defines the interface of the module.  So this is a good time to revisit the concept of SOLID and think about what we want this LedController.c to do.  Better yet, let’s evaluate how ‘SOLID’ the teensy starter code in &lt;strong&gt;main.cpp&lt;/strong&gt; is.&lt;/p&gt;

&lt;h3 id=&quot;solidifying-maincpp&quot;&gt;SOLIDifying main.cpp&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;S Single Responsibility Principle&lt;/strong&gt; - What is the responsibility of main.cpp right now?  Well, since it is the only file, it does everything.  Even in this very simple application, there are multiple responsibilities involved.
    &lt;ol&gt;
      &lt;li&gt;Start-up and initialize the board and name important variables&lt;/li&gt;
      &lt;li&gt;Toggle an led ON or OFF&lt;/li&gt;
      &lt;li&gt;Keep track of time and perform an action after a specified amount of time&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;O Open Closed Principle&lt;/strong&gt; - Let’s say you want to add some new functionality, for example a different LED that flashes on a different interval.  How would you do that? Would you extend main.cpp with new details or would you copy and paste the new pin number and interval into &lt;strong&gt;main.cpp&lt;/strong&gt;?  Certainly the easier thing to do is copy/paste main.cpp and that would work fine for this example.  However, in that case you are not extending main.cpp and you are modifying it.  So the easy/obvious route is offside of OCP.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;L Liskov Substitution Principle&lt;/strong&gt; - Liskov substitution principle (LSP) evaluates the interface.  However as a single file monolith, main.cpp does not even have an interface!  So from that perspective, adding an interface is the obvious step to take to make this application more SOLID with a capital ‘L’!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I Interface Segregation Principle&lt;/strong&gt; - So what interfaces do we need?  Well based on the 3 repsonsibilities mentioned in section 1, it would appear that main needs 3 interfaces:
    &lt;ol&gt;
      &lt;li&gt;For initialization and for establishing the important constant and variables needed by the application&lt;/li&gt;
      &lt;li&gt;For reading and writing Led pins&lt;/li&gt;
      &lt;li&gt;For monitoring time and taking action based on that information&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D Dependency Inversion Principle&lt;/strong&gt; - Does the high level code (&lt;strong&gt;main.cpp&lt;/strong&gt;) depend on the lower-level modules? Well, it depends on one interface: &lt;strong&gt;Arduino.h&lt;/strong&gt;.  What does Arduino depend on? Open the file and have a look:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;WProgram.h&quot;
#include &quot;pins_arduino.h&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;pins_arduino.h&lt;/strong&gt; is almost 300 lines of constant definitions while 
&lt;strong&gt;WProgram&lt;/strong&gt; depends on 24 different modules.&lt;/p&gt;

&lt;p&gt;If you are preparing to move from teensy to a different board (or vice-versa), be prepared for a LOT of reading, digging and research. I can personally attest to this.  I learned a lot, but it can take a very long time.  Nobody wants to be dealing with those sorts of challenges on a deadline.&lt;/p&gt;

&lt;p&gt;That’s all a lot to take in but let’s take it step by step.&lt;/p&gt;

&lt;h2 id=&quot;adding-a-unity-test&quot;&gt;Adding a unity test&lt;/h2&gt;

&lt;h3 id=&quot;defining-the-interface-with-testledcontrollerc&quot;&gt;Defining the interface with TestLedController.c&lt;/h3&gt;

&lt;p&gt;Looking again at the starter sourcecode for blinky.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/main.cpp&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Arduino.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt; makes teensy toggleable.  So thats a good place to start. We want to be able to create an &lt;strong&gt;LedController&lt;/strong&gt; with a pin number.&lt;/p&gt;

&lt;p&gt;Let’s create the header now.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// includes/LedController.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_LedController_H
#define D_LedController_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pinNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When we run the tests,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;clearing build directory
Running unit tests
Running system tests...
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ unity.framework/src/unity.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/unity.o
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ build/TestLedController_Runner.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedController_Runner.o
gcc &lt;span class=&quot;nt&quot;&gt;-DUNITY_INCLUDE_DOUBLE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DUNITY_SUPPORT_TEST_CASES&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D__MK66FX1M0__&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DF_CPU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48000000 &lt;span class=&quot;nt&quot;&gt;-DTEST&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wall&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wno-address&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pedantic&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Isrc&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iunity&lt;/span&gt;.framework/src/ &lt;span class=&quot;nt&quot;&gt;-Itest&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iincludes&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Imocks&lt;/span&gt;/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/avr/ &lt;span class=&quot;nt&quot;&gt;-Iteensy3&lt;/span&gt;/util/ &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c &lt;span class=&quot;nt&quot;&gt;-obuild&lt;/span&gt;/TestLedController.o
gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/unity.o build/TestLedController_Runner.o build/TestLedController.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedController.exe
build/TestLedController.exe
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:14:test_LedController_is_off_upon_creation:FAIL: Our greatest glory is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;never falling, but &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;rising every &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;we fall. - Confucius&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok! So we have our first test!  Confucius isn’t telling us anything useful anymore, let’s write a test that describes what the code is (or isn’t doing). For the rest of the code snippets, I’m going to only include the bits that change.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedController.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_is_off_upon_creation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;									&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;[1] I find it useful to put in recognizably nonsense numbers or strings in the data of my tests.  It can help you catch your mistakes faster&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/unity.o build/TestLedController_Runner.o build/TestLedController.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedController.exe
/usr/bin/ld: build/TestLedController.o: &lt;span class=&quot;k&quot;&gt;in function&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;test_LedController_is_off_upon_creation&lt;span class=&quot;s1&quot;&gt;&apos;:
TestLedController.c:(.text+0x57): undefined reference to `LedController_Create&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unity can’t find the function.  Because we haven’t written it yet. So here’s our chance to finally make our code do something.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;LedController.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which returns:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:16:test_LedController_is_off_upon_creation:FAIL: Expected 0 Was 0xFACE

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
1 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok! now let’s make it pass&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So there it is, your first passing test on a teensy. Let’s keep going. This test will virtually turn on an Led&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//test/TestLedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_TurnOn_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unity will complain that it doesn’t know about the new function, as it should.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c: In &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; ‘test_LedController_TurnOn_Led_seven’:
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:23:3: warning: implicit declaration of &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; ‘LedController_TurnOn’&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; did you mean ‘LedController_Create’? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wimplicit-function-declaration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
   23 |   LedController_TurnOn&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      |   ^~~~~~~~~~~~~~~~~~~~~~
      |   LedController_Create&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A quick note about the function names, at first I was annoyed by developers putting the module name in the front of each method call. Over time though, I came to appreciate that it makes a big difference in keeping things organized.  It might seem weird to readers coming from an object-oriented language but it does really help!&lt;/p&gt;

&lt;p&gt;So next we add &lt;strong&gt;LedController_TurnOn()&lt;/strong&gt; to the header file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;TestLedController.c:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.text+0xc6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: undefined reference to &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;LedController_TurnOn&lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We’ve seen this before, time to edit the sourcefile.  If you just add the empty function and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt;, it will fail. Good to see.  You want to see the test failing the way you expect before you implement the desired functionality.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:12:test_LedController_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:24:test_LedController_TurnOn_Led_seven:FAIL: Expected 1 Was 0

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
2 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, to achieve the desired functionality, we will make a pointer to the address and mark it static so it’s not accessible to outside callers.  To turn it on, we will make an over-simplification.  This is an example of the Agile principle of ‘selecting the simplest design that could possibly work’.&lt;/p&gt;

&lt;p&gt;It’s ok (even encouraged) to oversimplify your solutions during TDD as it is expected to produce a more robust solution than trying to create the complete solution immediately.  These kinds of small, steady, well-tested steps can sometimes help to avoid careless (or rushed) mistakes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This should pass. Congratulations, you can now ‘virtually’ turn on your light.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:12:test_LedController_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:19:test_LedDriver_TurnOn_Led_seven:PASS

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
2 Tests 0 Failures 0 Ignored 
OK&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s also make sure we can turn one off.  Just to say we can.  Also to achieve the same level of function as the infamous ‘sample blinky’.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_TurnOff_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After adding the header definitions and empty functions.  You should be at a failing test.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:12:test_LedController_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:19:test_LedController_TurnOn_Led_seven:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:33:test_LedController_TurnOff_Led_seven:FAIL: Expected 0 Was 1

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
3 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It passes by reversing the command in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TurnOn()&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 38d4ee4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So that brings us to our first refactoring opportunity.  One of the ways codebases get out of hand over time is by writing the same instructions over and over in different parts of your code.  Another of the important tenets of programming is &lt;strong&gt;Don’t Repeat Yourself&lt;/strong&gt; which is apparently attributed to the writers of Pragmatic Programmer who also published Grenning’s book.  You might say that I’ve drank the kool-aid when it comes to this testing stuff.&lt;/p&gt;

&lt;p&gt;At any rate, keeping your code DRY means always being on the lookout for opportunities to bring together duplicated statements into a single definition.  Many practitioners advocate for refactoring after the third duplication.  In our case, we now have a statement that occurs in every test.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, our test about of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedController_Create()&lt;/code&gt; involves a variable declaration beforehand.  So we can’t remove it.  That means we can only remove two of the duplicates but let’s take the opportunity to do it now anyway.  This statement will be required consistenly in upcoming tests anyway so it won’t be two for long:&lt;/p&gt;

&lt;p&gt;Here’s how &lt;strong&gt;TestLedController.c&lt;/strong&gt; looks after refactoring&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;LedController.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_is_off_upon_creation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_TurnOn_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_TurnOff_Led_seven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The tests are short and sweet.  That makes a big difference as your codebase &amp;amp; test suite starts to grow.  The faster you can understand what a newly failed test is doing, the more likely you are to identify and fix it quickly as well.&lt;/p&gt;

&lt;h4 id=&quot;start-on-green-end-on-green-with-refactoring&quot;&gt;Start on green, end on green with refactoring&lt;/h4&gt;
&lt;p&gt;Sometimes it can be tempting to refactor out a duplication you find while doing some other task.  Don’t do that. You always want a fully passing codebase before you start refactoring or you can get yourself into all kinds of confusing trouble.&lt;/p&gt;

&lt;h3 id=&quot;turning-on-a-specific-led--a-point-about-binary&quot;&gt;Turning on a specific Led (&amp;amp; a point about binary)&lt;/h3&gt;
&lt;p&gt;Right now the driver will represents all possible pins in a single binary value.  This is clearly not very useful on a board with multiple pins.  In this case, the 16-bit variable &lt;em&gt;ledsAddress&lt;/em&gt; represents 16 pins that represent whether its Led is on (1) or off (0).  So, for example, the binary &lt;em&gt;0000001001000000&lt;/em&gt; is equal to the hex value &lt;em&gt;0x240&lt;/em&gt; which is equal to &lt;em&gt;576&lt;/em&gt; on a decimal scale (the way we are accustomed to counting).  There are lots of binary-hexadecimal-decimal converters available online to help.&lt;/p&gt;

&lt;p&gt;Anyways, it’s time to start toggling different pins. Here’s the test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//test/TestLedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_TurnOn_MultipleLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x240&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The test returns &lt;em&gt;0x0001&lt;/em&gt; instead of &lt;em&gt;0x0240&lt;/em&gt;, just like we’d coded it earlier.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:15:test_LedController_is_off_upon_creation:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:22:test_LedController_TurnOn_Led_seven:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:28:test_LedController_TurnOff_Led_seven:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:39:test_LedController_TurnOn_MultipleLeds:FAIL: Expected 0x0180 Was 0x0001

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
4 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Time to fix that with a technique called bit-shifting.  This is important in embedded systems so get comfortable with it if you’re not already.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which will make your tests pass. So we can move onto the same case but for turning off a specific Led.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_TurnOff_AnLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It fails with &lt;em&gt;0x0000&lt;/em&gt; instead of the intended &lt;em&gt;0x0040&lt;/em&gt;. Again this is what we intentionally coded earlier.  You’ll use a different bitwise operate to turn a specific bit to 0.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which brings everything to passing again.  You could consider refactoring the bitshift into a function that is more expressive of the intention.  Your future teammates will probably thank you for that. Make it static and keep it out of the header since there’s no reason an external call would need to use this function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There’s a bit of a nuance to what we’ve done here.  The pins on a teensy can be set to either &lt;a href=&quot;https://www.pjrc.com/teensy/td_digital.html&quot;&gt;read or write&lt;/a&gt;.  This means that a pin set to output (such as an &lt;strong&gt;LedController&lt;/strong&gt;) cannot read the actual state of the pin. Instead it has to keep track of the values in its own separate memory location.&lt;/p&gt;

&lt;p&gt;Why is this important? Well, it comes down to the difference between state and action. Many embedded systems will use &lt;a href=&quot;https://www.state-machine.com/fsm/&quot;&gt;finite state machines&lt;/a&gt; in order to carry out their tasks.  If you look to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; function in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main()&lt;/code&gt;, the processor is occupied during the delay and cannot be asked to do any other tasks.  Using a state machine can help to free up system resources while still keeping track of the various peripherals (such as LEDs).&lt;/p&gt;

&lt;p&gt;Let’s look and how to ensure monitoring of state with a test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/LedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_does_not_read_the_LedMemoryMap_for_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which fails by returning the memory mapped location declared in the test setup&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedController.c:54:test_LedController_does_not_read_the_LedMemoryMap_for_state:FAIL: Expected 0x0080 Was 0xFFFF&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;note: this particular Rakefile will only recognize functions that start with &lt;strong&gt;test_&amp;lt; WhateverModule &amp;gt;.c&lt;/strong&gt; if you forget to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&lt;/code&gt; at the front of the function, the test will not be run.&lt;/p&gt;

&lt;p&gt;Here’s what the passing code looks like.  I didn’t include the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turn_off()&lt;/code&gt; function but it works the same:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;back-to-maincpp&quot;&gt;Back to main.cpp&lt;/h2&gt;

&lt;p&gt;So now we have a tested &lt;strong&gt;LedDriver&lt;/strong&gt;. But it doesn’t actually make any system calls yet.  It’s also not being called by &lt;strong&gt;main.cpp&lt;/strong&gt;.  How do we fix that?&lt;/p&gt;

&lt;p&gt;Before moving forward, double-check all is working correctly by plugging in the teensy and call&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake clean&lt;/code&gt; and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAKE_TARGET=teensy rake deploy&lt;/code&gt;, to make sure it is loading blinky properly.  Since the test suite cleans up its objects after each build, rake is going to need to rebuild the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teensy3&lt;/code&gt; modules.  It takes 10 to 15s on my computer.&lt;/p&gt;

&lt;p&gt;first add in the new module to make sure it builds ok. The Rakefile should handle it without complaint.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/main.cpp&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;LedController.h&quot;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rest&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note: The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extern &quot;C&quot; {}&lt;/code&gt; wrapper is important here or you will get a linker error when &lt;strong&gt;main.cpp&lt;/strong&gt; tries to call those functions.  NOTE: This kills our ability to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Serial.println()&lt;/code&gt; for debugging but we do still have GDB.&lt;/p&gt;

&lt;h3 id=&quot;moving-the-system-calls-from-main-into-ledcontroller&quot;&gt;Moving the system calls from main into LedController&lt;/h3&gt;

&lt;p&gt;within main, there are 3 system calls:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode(ledNumber, OUTPUT);&lt;/code&gt;   which tells the teensy to treat this pin as an output.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast(ledNumber, HIGH);&lt;/code&gt;  Which applies a high (3.3V) voltage to the pin, causing the connected LED to light.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast(ledNumber, LOW);&lt;/code&gt;  Which applies 0 voltage to the pin, causing the connected LED to go dark.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;let’s try moving the first call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt; to &lt;strong&gt;LedController&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LedController.c&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;LedController.h&quot;
#include &quot;Arduino.h&quot;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//static variables&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;main.cpp:&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Arduino.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;LedController.h&quot;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// pinMode(ledNumber, OUTPUT);  // NOTE: this has been commented out&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Try deploying first with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake deploy_teensy&lt;/code&gt;.  That works! What about the tests with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt;?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/unity.o build/LedController.o build/TestLedController_Runner.o build/TestLedController.o &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedController.exe
/usr/bin/ld: build/LedController.o: &lt;span class=&quot;k&quot;&gt;in function&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;LedController_Activate&lt;span class=&quot;s1&quot;&gt;&apos;:
LedController.c:(.text+0xa8): undefined reference to `pinMode&apos;&lt;/span&gt;
collect2: error: ld returned 1 &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;status
rake aborted!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unity is looking for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt; function which is buried in the teensy source code.  The build handles that without complaint but Unity is set-up to only reference the files directly called by the test.  You’ll notice that even if we &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt;, the command will still fail because unity does not attempt to find functions buried in submodules.
The way to handle this is called a ‘link-time spy’.  A spy is an alternative, test-only module that allows you to stub a function and give a canned response to it.&lt;/p&gt;

&lt;p&gt;comment out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt; so that they don’t bother you while setting up the Spy&lt;/p&gt;

&lt;p&gt;What kind of behaviour might we expect from the Teensy?  Well, it should be recognized but off if it’s activated. Something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_Unactivated_Led_will_return_LED_if_activated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which will naturally fail if we run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake&lt;/code&gt; since those new functions are unrecognized. Comment out that test while we set-up the spy.&lt;/p&gt;

&lt;p&gt;Ok, so now we will create a new folder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mocks&lt;/code&gt; where we will place the spy (and it’s tests).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestTeensySpy.c:&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;TeensySpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TeensySpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_on_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nothing fancy here, a simple Create function to get started. Then a couple functions to store the result that was passed: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetLastId&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetLastState&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s see what those functions look like within &lt;strong&gt;TeensySpy.h&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TeensySpy.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_TeensySpy_H
#define D_TeensySpy_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and then the source:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TeesnySpy.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;TeensySpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can start to ‘stub out’ the methods that are tucked away in &lt;strong&gt;Arduino.h&lt;/strong&gt;.  The one we are focusing on is &lt;em&gt;pinMode()&lt;/em&gt; so let’s first create a test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestTeensySpy.c&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;unity.h&quot;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;TeensySpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_set_pinMode_to_Output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and then add the function itself:&lt;/p&gt;

&lt;p&gt;And then &lt;strong&gt;TeensySpy.c&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LIGHT_ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;LIGHT_OFF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;                       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;These&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Symbols&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tests&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Since&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;they&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reside&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;they&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unknown&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;production&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Make sure to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TeensySpy.h&lt;/code&gt; header file as well!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The tests should pass.&lt;/p&gt;

&lt;p&gt;So if we turn our attention back to the &lt;strong&gt;LedController&lt;/strong&gt;, we can now uncomment &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode()&lt;/code&gt;.  This breaks the tests because there is no &lt;strong&gt;Arduino.h&lt;/strong&gt; in the test environment.
If we create an empty header file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/Arduino.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_Arduino_H
#define D_Arduino_H
#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We end up with a new failure,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;src/LedController.c:18:22: error: &lt;span class=&quot;s1&quot;&gt;&apos;OUTPUT&apos;&lt;/span&gt; undeclared &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;first use &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   18 |   pinMode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ledNumber, OUTPUT&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That output enum comes from within the teensy library that we’ve stubbed out.  So we can just add a simple enum to satisfy the linker:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/Arduino.h&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Give it a try with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake clean&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAKE_TARGET=teensy rake deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is a good place to commit your work.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 25077e5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The LED should be blinking.  From here we can extract the rest of the Led functions into &lt;strong&gt;LedController&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here’s the while loop in &lt;strong&gt;main.cpp&lt;/strong&gt; with the &lt;strong&gt;LedController&lt;/strong&gt; calls added:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and the pin toggle functions added to &lt;strong&gt;LedController&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Naturally, this breaks the tests.  So let’s comment out the digitalWriteFast in &lt;strong&gt;LedController&lt;/strong&gt; and then create some stubbed functions for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast()&lt;/code&gt;, within the spy.  We’ll add the tests first of course.&lt;br /&gt;
There is an adage in TDD, ‘make it work for none, then make it work for one, then make it work for many’.  What does that mean?
Well, our teensy wouldn’t allow us to toggle a pin on/off if it hadn’t already been set to output would it?  So we shouldn’t allow our Spy to either.  Here’s what that means in a test;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestTeensySpy.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_wont_respond_to_digitalWriteFast_if_no_pinMode_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_set_a_pin_to_HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s a simple if clause that’ll check if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinMode(OUTPUT)&lt;/code&gt; was called for the correct pin, if not, the Spy resets its values, if yes, it proceeds with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast&lt;/code&gt; function call.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TeensySpy.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEVEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEVEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We’ll need to add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HIGH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LOW&lt;/code&gt; definitions to our mock &lt;strong&gt;Arduino&lt;/strong&gt; header.  The complete file will look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef D_Arduino_H
#define D_Arduino_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The compiler will now complain that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OUTPUT&lt;/code&gt; has been declared twice since it’s already in &lt;strong&gt;TeensySpy.h&lt;/strong&gt;. We can resolve that by removing it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OUTPUT&lt;/code&gt; from the spy.  Now &lt;strong&gt;TestTeensySpy&lt;/strong&gt; will complain because that function is now missing.  That is resolved by adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt; to &amp;amp; &lt;strong&gt;TestTeensySpy&lt;/strong&gt; &amp;amp; &lt;strong&gt;TestLedController&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;All tests passing? A similar test can/should be written for setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast(LOW)&lt;/code&gt;, since it doesn’t require a change to the logic, it’s good practice to change the code slightly to make the test fail.  For example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;digitalWriteFast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEVEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEVEL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;will cause the last 2 tests to fail like this&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTeensySpy.c:13:test_TeensySpy_on_create:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTeensySpy.c:19:test_TeensySpy_set_pinMode_to_Output:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTeensySpy.c:26:test_TeensySpy_wont_respond_to_digitalWriteFast_if_no_pinMode_call:PASS
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTeensySpy.c:41:test_TeensySpy_set_a_pin_to_HIGH:FAIL: Expected 0x0001 Was 0x0002
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTeensySpy.c:50:test_TeensySpy_set_a_pin_to_LOW:FAIL: Expected 0x0000 Was 0x0001&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So the tests are indeed checking that the code produces the expected result.  Great!  Remove the ‘+ 1’ and lets get back to &lt;strong&gt;LedController&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;At that point, the tests should pass and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake deploy_teensy&lt;/code&gt; also succeeds.&lt;/p&gt;

&lt;p&gt;This is a good time to commit your work.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git add &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-am&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;finish extracting led functions into LedController&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So now if you uncomment the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digitalWriteFast()&lt;/code&gt; calls, the led blinks and the tests pass.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 146254c&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;extracting-time-functions&quot;&gt;Extracting time functions&lt;/h3&gt;

&lt;p&gt;So where are we at now?&lt;br /&gt;
 if we look at &lt;strong&gt;main.cpp&lt;/strong&gt;, we see that there is still a function call to the &lt;strong&gt;Arduino.h&lt;/strong&gt; library&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay(milliseconds)&lt;/code&gt; function causes the board to freeze for the specified time in milliseconds.  Scheduling and timing is a very important function in micro-controllers that are constantly switching between different tasks on specified intervals.
But that poses certain special challenges for testing.  For example.  If you had a task that only repeats once a day, are you going to wait around for that time?  What if you need to support daylight savings time or leap years?  Clearly you need a way to control the internal clock of the device from your test harness.  Grenning’s book used a scheduler to accomplish this.  We are going to mimic this approach although it is arguably overkill to just replace a simple delay function.
Let’s get started.&lt;/p&gt;

&lt;h3 id=&quot;the-scheduler&quot;&gt;The Scheduler&lt;/h3&gt;

&lt;p&gt;So the way this is going to work, is that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main()&lt;/code&gt; will start a module called &lt;strong&gt;LightScheduler&lt;/strong&gt; and give it the variables necessary to function.  The &lt;strong&gt;LightScheduler&lt;/strong&gt; will then constantly check the time via callbacks.  When the reported time matches the desired time, &lt;strong&gt;LedScheduler&lt;/strong&gt; will call &lt;strong&gt;LedController&lt;/strong&gt; to toggle the desired pin.&lt;/p&gt;

&lt;p&gt;Let’s use a test to show the different components/function calls.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//test/TestLedScheduler.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;LedScheduler.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedScheduler_ScheduledDelay_didnt_arrive_yet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;499&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What the test is saying is that our &lt;strong&gt;LedScheduler&lt;/strong&gt; will create a delay of 500ms, then we will use a fake timer to advance to just before the delay (499ms), and confirm that &lt;strong&gt;LedScheduler&lt;/strong&gt; didnt turn on any Leds yet.&lt;br /&gt;
We will create an &lt;strong&gt;LedControllerSpy&lt;/strong&gt; to watch for the calls of &lt;strong&gt;LedScheduler&lt;/strong&gt;. It will be quite similar to the &lt;strong&gt;TeensySpy&lt;/strong&gt; we implemented for the &lt;strong&gt;LedController&lt;/strong&gt; tests.&lt;/p&gt;

&lt;p&gt;This is too much functionality to implement all at once though so we will just comment it out and hold onto it as a reference for now.&lt;/p&gt;

&lt;p&gt;Even still, we’ll need to add an empty header to make sure the test suite still compiles:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// includes/LedScheduler.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_LedScheduler_H
#define D_LedScheduler_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s a much simpler test to get started with.  It requires us to setup a new spy which we’ll call &lt;strong&gt;LedControllerSpy&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedScheduler.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;LedControllerSpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedScheduler_No_Lights_On_Initialization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virtualPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We’ll also comment that out and now start out with a test of the &lt;strong&gt;LedControllerSpy&lt;/strong&gt; itself.  It’s going to be quite similar to &lt;strong&gt;TeensySpy&lt;/strong&gt; that we wrote earlier.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestLedControllerSpy.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;LedControllerSpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedControllerSpy_on_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which is satisfied by the following header:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/LedControllerSpy.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_LedControllerSpy_H
#define D_LedControllerSpy_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
#include &quot;LedController.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedControllerSpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and sourcefile:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/LedControllerSpy.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;LedControllerSpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So now if we uncomment the test within &lt;strong&gt;testLedScheduler.c&lt;/strong&gt; we get a failure:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedScheduler.c:26:test_LedScheduler_No_Lights_On_Initialization:
FAIL: Expected 0xFFFF Was 0x0000&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can solve that by creating the spy in the test &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setUp&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestLedControllerSpy.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Great! Now let’s turn on a light.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//mocks/TestLedControllerSpy.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedControllerSpy_remembers_light_after_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And make it pass by adding the function to &lt;strong&gt;LedControllerSpy&lt;/strong&gt;. Note we don’t need to add it to the header file since it is already defined in &lt;strong&gt;LedController.h&lt;/strong&gt; which is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#included&lt;/code&gt; in &lt;strong&gt;LedControllerSpy.h&lt;/strong&gt;.  This makes sure that the real functions being called by our spy is consistent with the production code.&lt;/p&gt;

&lt;p&gt;The test to test for turning an Led off is identical so I won’t repeat it here but you should definitiely write it!  We can now move on to the time aspect of our still commented test in &lt;strong&gt;LedSchedulerTest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 0a032ac&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;faking-time&quot;&gt;Faking Time&lt;/h2&gt;
&lt;p&gt;Depending on your application, time management may be hugely important and embedded systems face all sorts of challenges with handling time.  For our tests, we need to be able to fake the time on our board to create all of the different hypothetical situations we might need it to respond to.&lt;/p&gt;

&lt;p&gt;In our little example here, we just need to make sure that &lt;strong&gt;LedScheduler&lt;/strong&gt; correctly implements the delay function.  So we need to fake that delay.  We’ll start by adding the tests to &lt;strong&gt;mocks/FakeTimeServiceTest.c&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestFakeTimeService.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;FakeTimeService.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_FakeTimeService_on_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MILLISECONDS_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_FakeTimeService_sets_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The header &lt;strong&gt;FakeTimeService.h&lt;/strong&gt; will look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/FakeTimeService.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_FakeTimeService_H
#define D_FakeTimeService_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;TimeService.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MILLISECONDS_UNKNOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which will fail because it can’t find &lt;strong&gt;TimeService.h&lt;/strong&gt;. The real &lt;strong&gt;TimeService.c&lt;/strong&gt; is where we will put our teensy specific delay function a little later.  But we will need to create the header now:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// includes/TimeService.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_TimeService_H
#define D_TimeService_H
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_Destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#endif &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typedefs&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;structs&lt;/code&gt; in &lt;strong&gt;c&lt;/strong&gt; is something that I’m still getting a hang of but using it for our Time abstraction is helpful since it allows us to add other types of time that might be relevant to the system at a later date (day, minute, etc).  However, all we need right now is milliseconds so this header might seem a little overkill.&lt;/p&gt;

&lt;p&gt;This is the passing code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/FakeTimeService.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;FakeTimeService.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fakeTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fakeTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MILLISECONDS_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_Destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fakeTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fakeTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tests pass, sweet, now we can move back to the &lt;strong&gt;TestLedScheduler&lt;/strong&gt;.  Using the ‘make it work for none, then one, then many’ methodology, we will gradually add the scheduling, test by test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestLedScheduler.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;FakeTimeService.h&quot; //add this to the top
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedScheduler_No_Schedule_No_Action_Taken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;we’ll need to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedScheduler_WakeUp();&lt;/code&gt; to the &lt;strong&gt;LedScheduler.h&lt;/strong&gt; and just an empty function in &lt;strong&gt;src/LedScheduler.c&lt;/strong&gt; will be sufficient to make the test pass.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedScheduler.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;LedScheduler.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From here we are finally ready to uncomment the test from the beginning of this section. Here it is again:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedScheduler.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedScheduler_ScheduledDelay_didnt_arrive_yet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;499&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, an empty function will cause the test to pass:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And now, finally, we hit the point where we can turn on the Led:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedScheduler.c&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedScheduler_ScheduledDelay_just_arrived&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sure enough, it fails:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedScheduler.c:50:test_LedScheduler_ScheduledDelay_just_arrived:FAIL: Expected 0x0004 Was 0xFFFF

&lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;
4 Tests 1 Failures 0 Ignored 
FAIL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Like we did with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Time&lt;/code&gt;, we are going to use a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typedef struct&lt;/code&gt; to house the information of the scheduled event.  This will allow us to create multiple scheduled events and easily add extra parameters later if necessary.  Here’s how it looks:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedScheduler.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;TimeService.h&quot;
#include &quot;LedScheduler.h&quot;
#include &quot;LedController.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ScheduledLedEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ScheduledLedEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This triggers a new failure in a previous test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestLedScheduler.c:19:test_LedScheduler_No_Schedule_No_Action_Taken:FAIL: Expected 0xFFFF Was 0x0000&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Our tests have caught another bug for us.  This is why we write them!  We need to initialize &lt;strong&gt;LedScheduler&lt;/strong&gt; in an unused state and add a guard to check if a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScheduledEvent&lt;/code&gt; has been created.&lt;/p&gt;

&lt;p&gt;First add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create&lt;/code&gt; function to the test setUp and header:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedScheduler.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedControllerSpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then add the function and test to &lt;strong&gt;LedScheduler&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedScheduler.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UNUSED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNUSED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNUSED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which passes.  So we are now calling &lt;strong&gt;TimeService&lt;/strong&gt; and comparing the value to our specified delay in order to trigger the Led.
Let’s add a test for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TurnOff&lt;/code&gt; for good measure:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedScheuduler.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedScheduler_ScheduledDelay_just_arrived_Led_is_on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;FakeTimeService_SetMilliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LedControllerSpy_GetLastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To make this pass is a matter of checking whether the Led is &lt;em&gt;on&lt;/em&gt; or &lt;em&gt;off&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedScheduler.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Since this is a new function for &lt;strong&gt;LedController&lt;/strong&gt;, we’ll first write a test for it. This requires adding a test to and passing method to &lt;strong&gt;TestLedController&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestLedController.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_LedController_knows_if_an_Led_is_On&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s The passing code for that test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedController.c&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledsAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBitLocationFromLedNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Note: We’ve added some constants, BOOL, TRUE, FALSE, that don’t exist in the standard libraries but can make C a bit easier to read.  To incorporate these constant, we can create a new includes &lt;strong&gt;common.h&lt;/strong&gt; with the following.  It will need to be included in &lt;strong&gt;LedController.h&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// includes/common.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_Common_H
#define D_Common_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifndef BOOL
#define BOOL int
#endif
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifndef TRUE
#define TRUE 1
#endif
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifndef FALSE
#define FALSE 0
#endif
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, back to &lt;strong&gt;LedScheduler&lt;/strong&gt;.  Hmmm it has an error.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/objs/TestLedScheduler.o build/objs/TestLedScheduler_Runner.o build/objs/unity.o build/objs/LedScheduler.o build/objs/LedControllerSpy.o build/objs/FakeTimeService.o  &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedScheduler.exe  &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt;
/usr/bin/ld: build/objs/LedScheduler.o: &lt;span class=&quot;k&quot;&gt;in function&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;LedScheduler_WakeUp&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;:
LedScheduler.c:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.text+0xab&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: undefined reference to &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;LedController_IsOn&lt;span class=&quot;s1&quot;&gt;&apos;
collect2: error: ld returned 1 exit status
rake aborted!
ABORT RakefileHelper error: error during linking&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We usually see this when a function hasn’t been added yet.  What caused this issue?
Well, this is an opportunity to explain a concept that took me ages to wrap my head around: the way the Unity uses the gcc linker to prepare the test files.  Let’s look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc&lt;/code&gt; call that triggered the failure:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; build/objs/TestLedScheduler.o 
build/objs/TestLedScheduler_Runner.o 
build/objs/unity.o 
build/objs/LedScheduler.o 
build/objs/LedControllerSpy.o 
build/objs/FakeTimeService.o  
&lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; build/TestLedScheduler.exe  &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;each of the files starting with &lt;em&gt;build/objs&lt;/em&gt; will get linked together in order to run the test.  So what’s the issue?  Well, we just edited &lt;strong&gt;LedController.c&lt;/strong&gt; which isn’t mentioned in that list.  What we actually needed to do was adjust &lt;strong&gt;LedControllerSpy.c&lt;/strong&gt; in order to get the test passing.&lt;br /&gt;
I jumped the gun a bit.  But since I wrote a test before implementing the function, it should still be safe.  Let’s adjust the spy now.  We can get away with cruder logic here (don’t forget to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;common.h&quot;&lt;/code&gt;).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/LedControllerSpy.c&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ledNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And with that, we are back to passing tests!  We could keep going and add logic to incorporate additional &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ScheduledEvents&lt;/code&gt;, but that’s not necessary for us just to replace Teensy’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay&lt;/code&gt; function. So we’re gonna move on from here.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 3a1312b&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;hooking-ledscheduler-into-the-teensy&quot;&gt;Hooking LedScheduler into the Teensy&lt;/h1&gt;

&lt;p&gt;Ok, so now we are ready to actually displace the delay call.  How shall we start?  First let’s convince ourselve we haven’t broken anything (yet) with a&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake clean &amp;amp;&amp;amp; RAKE_TARGET=teensy rake deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Still flashing? On we go.&lt;/p&gt;

&lt;p&gt;As mentioned above, we are going to move &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; into a newly created &lt;strong&gt;TimeService.cpp&lt;/strong&gt;.  Like this:&lt;/p&gt;

&lt;p&gt;First, we’ll add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//src/TimeService.cpp&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;TimeService.h&quot;
#include &quot;Arduino.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_cpp_delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeService_Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_cpp_delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;NOTE: Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; is a .cpp function, it needs to be called from within a cpp file.  However, &lt;strong&gt;LedScheduler.c&lt;/strong&gt; will only recognize function defintions declared from within an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extern &quot;C&quot;&lt;/code&gt; wrapper.  Going forward, anything calling functions or types from the teensy library should be called from outside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extern &quot;C&quot;&lt;/code&gt; wrapper. Anything called from our own .c files should be inside the wrapper.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From there, we can move the looping logic from &lt;strong&gt;main.cpp&lt;/strong&gt;, into &lt;strong&gt;LedScheduler&lt;/strong&gt; like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/main.cpp&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;#include &quot;LedController.h&quot;
&lt;/span&gt;  &lt;span class=&quot;cp&quot;&gt;#include &quot;LedScheduler.h&quot;
&lt;/span&gt;  &lt;span class=&quot;cp&quot;&gt;#include &quot;TimeService.h&quot;
&lt;/span&gt;  
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedScheduler_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What’s more, we’ve now removed all of the cpp function calls from main.  If you follow Jack Ganssle of the &lt;a href=&quot;http://www.ganssle.com/tem-subunsub.html&quot;&gt;Embedded Muse&lt;/a&gt;, you will probably read multiple criticisms about using cpp in embedded sysems.&lt;br /&gt;
Im not going to try to wade into that argument as I still have a lot to learn just in C.
So now we are going to refactor it into a .c file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/main.c  *RENAMED*&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;LedController.h&quot;
#include &quot;LedScheduler.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activeLeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedController_Activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;LedScheduler_ScheduleDelay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardLed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, we’ll briefly add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeService_Delay()&lt;/code&gt; into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedScheduler_WakeUp()&lt;/code&gt;.  This is a temporary measure just to convince ourselves that we can deploy to the teensy.  We’ll comment out all of the logic which involves time checking:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedScheduler.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Time time;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// TimeService_GetTime(&amp;amp;time);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// if (scheduledEvent.id == UNUSED)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//  return;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// if (time.milliseconds != scheduledEvent.milliseconds)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//  return;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;TimeService_Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, we’ll also need to add header guards to &lt;strong&gt;TimeServce.h&lt;/strong&gt; to or the compiler will get confused that sometimes it is being included in the compilation of a C file and other times for a C++ file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#ifdef __cplusplus
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif 
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeService_Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeService_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeService_Destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifdef __cplusplus
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With that, you should have blinky fully functioning within the modules.  But what about the tests?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/bin/ld: build/objs/LedScheduler.o: &lt;span class=&quot;k&quot;&gt;in function&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;LedScheduler_WakeUp&lt;span class=&quot;s1&quot;&gt;&apos;:
LedScheduler.c:(.text+0xb5): undefined reference to `TimeService_Delay&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So we need to add a stub in the &lt;strong&gt;FakeTimeService&lt;/strong&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeService_Delay()&lt;/code&gt;. An empty function is fine since we aren’t actually calling it within our tests.  From here, a couple of our tests fail because of the commented out code.&lt;/p&gt;

&lt;p&gt;At this point, we can begin implementing the actual functions in &lt;strong&gt;TimeService&lt;/strong&gt;.  What should our first test look like?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestTimeService.c&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;unity.h&quot;
#include &quot;TimeService.h&quot;
#include &quot;TeensySpy.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TeensySpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TimeService_GetTime_0_on_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which initially fails because there is no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; function within the scope of this test (ie the 2 headers we’ve declared: &lt;strong&gt;Timeservice.h&lt;/strong&gt; and &lt;strong&gt;TeensySpy.c&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We could add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; to our mock header &lt;strong&gt;mocks/Arduino.h&lt;/strong&gt;.  But that would reuire us to also generate a fake or mock delay function. 
It’s not obvious to me how to write a test for it and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; is not a great function to use anyways since your board isn’t able to do anything else while &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay&lt;/code&gt; is executing.&lt;/p&gt;

&lt;p&gt;So with that in mind, we are actually going to discard &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay()&lt;/code&gt; from here in favour of &lt;a href=&quot;https://www.pjrc.com/teensy/td_timing_elaspedMillis.html&quot;&gt;ElapsedMillis&lt;/a&gt; which you can read more about if you’d like.&lt;/p&gt;

&lt;p&gt;On that note, go ahead and comment out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delay&lt;/code&gt; now. While you are at it, add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;stdint.h&amp;gt;&lt;/code&gt; to &lt;strong&gt;mocks/Arduino.h&lt;/strong&gt; since &lt;strong&gt;TimeService.cpp&lt;/strong&gt; will otherwise get it from the teensy library`&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/TimeService.cpp&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// delay(milliseconds);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From here, we end up with a missing function in &lt;strong&gt;TimeService&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;TestTimeService.c:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.text+0x43&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: undefined reference to &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;TimeService_GetTime&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We already have the function prototype in &lt;strong&gt;TimeService.h&lt;/strong&gt; so we can just copy it in as an empty function to get past this error.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTimeService.c:18:test_TimeService_GetTime_0_on_init:FAIL: Expected 0x0000 Was 0x9488&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So we need to stub in the behaviour via &lt;strong&gt;TeensySpy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For now, let’s comment out that test and drop one level down the stack to &lt;strong&gt;TestTeensySpy&lt;/strong&gt; to add a couple stubs and tests.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestTeensySpy.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_stubs_0_elapsedMillis_on_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To get this passing, we’ll need to declare and initialize our stubbed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elapsedMillis&lt;/code&gt; (named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;timeCounter&lt;/code&gt;);&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TeensySpy.c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_ID_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lastState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_STATE_UNKNOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_GetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elapsedMillis&lt;/code&gt;?  Well, if we look in the teensy supplied source files, namely &lt;strong&gt;teensy3/elapsedMillis.h&lt;/strong&gt;, we’ll see a class that is only defined if compiled using C++.  That’s an implementation detail we need to be aware of, but the other important item we need is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unsigned long&lt;/code&gt; type.  The real &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elapsedMillis&lt;/code&gt; provides a rich functionality but for our purposes right now, we just need to declare our own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elapsedMillis&lt;/code&gt; type within our mock header&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/Arduino.h&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;Arduino.h&quot;&lt;/code&gt; to &lt;strong&gt;TeensySpy.h&lt;/strong&gt; (which will allow us to remove the call to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;stdint.h&amp;gt;&lt;/code&gt;, by the way), this should pass.  Now let’s create the ability to advance &amp;amp; reset &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elapsedMillis&lt;/code&gt; within the spy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TestTeensySpy.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_stubs_can_advance_elapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TeensySpy_AdvanceElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TeensySpy_stubs_can_reset_elapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TeensySpy_AdvanceElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TeensySpy_ResetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;which passes with the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TeensySpy.c&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_AdvanceElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TeensySpy_ResetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From here, we can turn our attention back to &lt;strong&gt;TestTimeService&lt;/strong&gt; which is still failing, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeService_GetTime()&lt;/code&gt; needs to call on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elapsedMillis&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/TimeService.cpp&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which gives us a passing test (though we still have 2 failing in &lt;strong&gt;TestLedScheduler&lt;/strong&gt;, we’ll get there soon.  How about if we advance the stubbed time?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//test/TestTimeService.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TimeService_GetTime_after_advancing_spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TeensySpy_AdvanceElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It fails with no result.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/TestTimeService.c:26:test_TimeService_GetTime_after_advancing_spy:FAIL: Expected 0x0055 Was 0x0000&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;TimeService&lt;/strong&gt; is not seeing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;timeCounter&lt;/code&gt; that is being produced by &lt;strong&gt;TeensySpy&lt;/strong&gt;.  We’ll need to move the declaration into the &lt;strong&gt;TeensySpy.h&lt;/strong&gt; header file in order for it to be visible to external caller modules.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// mocks/TeensySpy.h&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifndef D_TeensySpy_H
#define D_TeensySpy_H
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &quot;Arduino.h&quot;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;GOTCHA: When I attempted this tutorial on ArchLinux, I suddenly got hung up on this step for a couple solid days on a multiple definition error.  ArchLinux uses GCC 11 while Linux Mint (the distro I originally wrote this on uses GCC 9.
Turns our that declaring timeCounter in both &lt;strong&gt;TimeService&lt;/strong&gt; and &lt;strong&gt;TeensySpy&lt;/strong&gt; passes the default GCC linker options in Mint but not Arch.  I don’t know about MingW/Windows or other distros.&lt;/em&gt;
The error is cleared by adding the linker flag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;z muldefs&lt;/code&gt; to &lt;strong&gt;target_testing.yml&lt;/strong&gt; like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;linker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lm&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;m32&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;z muldefs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;NOTE: Preventing multiple definitions appears to be more up to date with best practices.  So it seems as though I should indeed by using stubbed functions via a mocked &lt;strong&gt;mocks/Arduino.c&lt;/strong&gt; (rather than using &lt;strong&gt;TeensySpy&lt;/strong&gt; to change the time during testing.  I may pursue this route in a future revision after I’ve done some more research.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And with that, both &lt;strong&gt;TimeService&lt;/strong&gt; tests are passing.  We can also uncomment the logic within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LedScheduler_WakeUp()&lt;/code&gt; to get those tests passing again.&lt;/p&gt;

&lt;p&gt;Do we dare uncomment the tested code? Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake clean &amp;amp;&amp;amp; rake deploy_teensy&lt;/code&gt; first to make sure your blinky is still running and deploying. Then let’s go for it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// src/LedScheduler.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LedScheduler_WakeUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimeService_GetTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNUSED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LedController_IsOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LedController_TurnOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scheduledEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// TimeService_Delay(scheduledEvent.milliseconds);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It waits the proper delay time, flashes on and then stays on. How about the tests? They are compiling and passing. So what’s the deal with the flashing?&lt;/p&gt;

&lt;p&gt;Well, the callback is working correctly, but it’s not being reset after triggering the toggle switch.  That’s an easy fix, here’s a test:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test/TestTimeService.c&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_TimeService_Reset_sets_timeCounter_back_to_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;TeensySpy_AdvanceElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;TimeService_Reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;TEST_ASSERT_EQUAL_HEX16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TeensySpy_GetElapsedMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which we can make pass by adding the following to &lt;strong&gt;TimeService.cpp&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TimeService_Reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;timeCounter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If we now replace the commented out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeService_Delay()&lt;/code&gt; with our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeService_Reset()&lt;/code&gt;, then we are back to blinky again!&lt;/p&gt;

&lt;p&gt;We will need to stub a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeService_Reset()&lt;/code&gt; call into &lt;strong&gt;FakeTimeService&lt;/strong&gt; in order to get our test suite fully passing.  It can be empty since we aren’t changing any functionality with this.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit 2bbd6b0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So there we have it.  A blinky program for Teensy via TDD.&lt;/p&gt;

&lt;p&gt;Hope you feel that the effort was worth it.  Testing can be a thankless pursuit in a development effort when timelines and budgets are tight.  The up front effort can make a big difference in keeping a codebase clean and well structured.  Making later changes less painful.&lt;/p&gt;

&lt;p&gt;In the next article, we’ll add a second board from a different vendor and see how we can further abstract the interface to handle both.&lt;/p&gt;

&lt;p&gt;Happy prototyping!!&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="open-source" /><category term="embedded" /><category term="teensy" /><summary type="html">Learn how to create modular code for embedded systems using a Test Driven Development approach</summary></entry><entry><title type="html">In flight, I attain a higher consciousness. Fear disappears - Translation of Bertrand Piccard’s interview on La Croix</title><link href="https://sunetrike.com/solar-impulse/in-flight-i-attain-a-higher-consciousness/" rel="alternate" type="text/html" title="In flight, I attain a higher consciousness. Fear disappears - Translation of Bertrand Piccard’s interview on La Croix" /><published>2021-09-23T01:08:07+08:00</published><updated>2021-09-23T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/in-flight-i-attain-a-higher-consciousness</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/in-flight-i-attain-a-higher-consciousness/">&lt;p&gt;In April, Capt Piccard sat down with the Malo Tresca and the podcast &lt;em&gt;Place des Religions&lt;/em&gt; for a discussion about exploration, consciousness and how the &lt;a href=&quot;https://solarimpulse.com/efficient-solutions&quot;&gt;Solar Impulse Network of 1000 Solutions&lt;/a&gt; can contribute to the great existential challenge of the 21st century.  I decided to do a translation into English.  I opted to do this for a few reasons:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Just for fun and French practice&lt;/li&gt;
  &lt;li&gt;To reflect more on where Solar Impulse might be heading with its newest initiative and tagline &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;Ecology as driving force for economy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really want to see this initiative succeed&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Merci à &lt;a href=&quot;https://www.lmgconsultancy.com/&quot;&gt;LMG Consultancy&lt;/a&gt; for double-checking my work! I was reminded that I still have a long road ahead of me on my journey to francophony  :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.la-croix.com/Religion/PODCAST-Bertrand-Piccard-En-vol-jatteins-degre-conscience-peur-disparait-2021-04-14-1201150811&quot;&gt;Here is the link to the podcast&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;00:29 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;D’habitude, tout le monde me parle de mon père et de mon grand-père, qui sont des explorateurs qui ont apporté énormément au 20ème siècle, mais c’est vrai qu’avoir une mère qui vous prend au sérieux comme enfant dans votre recherche de compréhension de la vie, de la mort, de Dieu et des autres, c’est extraordinaire.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“Usually everyone talks to me about my father and grandfather, who were explorers that contributed enormously to the 20th century. But it’s really my mother takes you seriously as a child in searching to understand life, death, God and others. It’s extraordinary.”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;00:33 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;L’aéronaute suisse, Bertrand Piccard, a réalisé, avec ses coéquipiers, deux tours du monde inédits. L’un à bord d’un ballon, poussé par les vents et l’autre aux commandes de l’avion Solar Impulse, alimenté grâce à l’énergie solaire.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Aviator Bertrand Piccard, together with his team, accomplished two 2 unprecedented trips around the wind: in a balloon pushed along by the winds.  On board the airplane Solar Impulse, fed graciously by solar energy.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;00:46 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pour lui, ces expériences ont été des défis techniques, mais aussi de grands voyages intérieurs. Bertrand Piccard se consacre désormais à un nouveau projet, celui de réunir 1000 solutions rentables pour protéger l’environnement, qu’il compte ensuite soumettre aux grandes instances décisionnaires mondiales. Une idée qu’il a expliqué au pape François, lors d’une entrevue au Vatican en février 2020.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For him, These experiences were technical challenges but also great voyages inwards.  Bertrand Piccard has now established a new project. This time to assemble a roster of 1000 profitable solutions for protecting the environment. He plans to submit them to the world’s great decision making bodies.  An idea which he explained to Pope Francis at the Vatican last February.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;01:12 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Je m’appelle Malo Tresca, je suis journaliste à La Croix et j’ai rencontré Bertrand Piccard à Lausanne. Dans ce podcast, des personnalités qui ont fait l’expérience du danger, nous confient leurs grands questionnements spirituels. Vous écoutez la troisième saison de « place des religions ».&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I am Malo Tresca, I’m a journalist at La Croix and I’m meeting Bertrand Piccard in Lausanne. In this podcast, are the people who have experienced the face of danger and discuss with us their great spiritual questions. You are listening to the third season de place des Religions.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;01:35 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bonjour Bertrand Piccard.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hi Bertrand Piccard.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;01:36 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bonjour&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hi,&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;01:42 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous nous faites aujourd’hui voyager à Lausanne, au siège de la Fondation Solar Impulse, dont vous êtes l’initiateur et le président. Le thème de l’aviation est partout dans la pièce où nous nous trouvons, dans ses tableaux, dans ses sculptures. Est-ce que vous pourriez nous redire un peu ce que représente pour vous aujourd’hui ce lieu.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We are joining you today in Lausanne, at the HQ of the Solar Impulse Fondation, of which you are founder and president. The aviation theme is everywhere in this room, On the tables and sculptures.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;01:54 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Est ce que vous pourriez nous redire un peu ce que représente pour vous aujourd’hui ce lieu?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Can you tell us a bit about what this place represents for you today?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;01:58 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;C’est le lieu où je reçois les membres de mon équipe, les journalistes, les invités, simplement ma salle de réunion, de rencontre. Il y a forcément l’histoire de l’aviation parce que j’ai une certaine nostalgie de cette histoire incroyable où des pionniers ont ouvert la voie au risque de leur vie. Et puis, il y a quand même l’autre partie qui est celle de la spiritualité orientale, avec des objets tibétains, birmans, thaïlandais qui sont plus du monde intérieur que du monde extérieur de l’aviation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s the place where I meet with my team, journalists and guests, simply my meeting room. I had to incorporate the history of aviation because I have a certain nostalgia about this incredible story where these pioneers have paved the way while risking their lives. Also, there is the other part which is the Oriental Spirituality, with Tibetan, Burmese, Thai objects which are more about the internal world than the exterior world of aviation.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;02:23 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Passionné d’exploration depuis l’enfance, vous aviez de qui tenir avec vos aïeux. Vous êtes devenu l’un des pionniers du vol libre en delta-plane et de l’UL dans les années 1970. Qu’est ce qui vous attirait particulièrement dans cette voie des airs?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Passion for exploration since childhood, which you had to keep up with your ancestors. You’ve become the first of the pioneers to fly delta-wing and UL (gliders) in the 1970s. What is it that attracted you to this type of flying?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;02:35 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;J’ai eu des « role models », des inspirateurs dans le monde de l’aviation. Des astronautes, Charles Lindberg, tous ces pionniers que j’ai eu la chance de rencontrer quand j’étais enfant. J’habitais aux Etats-unis, j’ai assisté à six décollages d’Apollo, rencontré presque tous les astronautes de la NASA et des pionniers de l’histoire de l’aviation et je les rencontrais après avoir lu dans des livres toutes leurs histoires. Et ça a, pour moi, abolit toute frontière entre le rêve et la réalité. Je rêvais de ça et je les rencontrais.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’ve had several role models in the world of aviation. The astronauts, Charles Lindberg, all the pioneers that I got the opportunity to meet when I was a child. I was living in the United States. I helped out on six Apollo launches and met all the NASA astronauts and other pioneers of the history of aviation and then also came across them in the books about all of their stories. So that, for me, demolished all boundaries between dream and reality. I was dreaming about it and I met them.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;03:10 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Je voyais qu’ils réalisaient l’impossible. Et pour moi, ça a été une immense source d’inspiration. Je me suis dit que j’aimerais être explorateur. J’aimerais aller me confronter à l’inconnu, faire des choses que personne n’a jamais faites. Et j’ai acquis une certaine boussole dans mon cœur qui montrait non pas le Nord, mais qui montrait l’inconnu, tout ce qui n’avait encore jamais été fait. Et quand j’avais 16 ans, j’ai vu voler une des premières ailes Delta qui étaient apparues en Europe et je me suis dit, bien ça, c’est nouveau, ça c’est pour moi.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I had seen them realize the impossible. For me, that’s a huge source of inspiration. I told myself that I would like to be an explorer. I would like to go confront the unknown, do the things that no one has ever done. I’ve developed a certain compass in my heart that directs me, not to the North, but to the unknown, everything which has not already been done. Then when I was 16 years old, I saw the flight of one of the first hang-gliders that appeared in Europe and I told myself ‘Ah, this is new, this is for me’.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;03:28 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ça c’est de nouveau quelque chose à explorer qui n’a pas encore été fait. Et c’est comme ça que j’ai commencé à voler. A 16 ans, je volais sous un triangle de toile, quelques tubes d’aluminium, à plusieurs milliers de mètres d’altitude. Et ce qui était fascinant là dedans, ce n’était pas simplement le fait de découvrir le vol, c’était de se découvrir soi-même. J’étais plutôt timoré à l’époque, je voulais être explorateur, mais en même temps, j’avais peur de monter dans un arbre.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is the new thing to explore which hasn’t already been done. So just like that I started to fly. At 16 years old, I flew under a triangle of canvass, some tubes of aluminum, at several thousand metres altitude. And what was fascinating, was not just the act of learning to fly, it was also about discovering yourself. I was rather fearful at the time. I wanted to be an explorer, but at the same time, I was scared to climb a tree.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;04:05 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Puis, tout à coup, je me retrouvais en aile delta, confronté à moi-même, avec la responsabilité de ma vie entre les mains. Et ça, c’est des moments qui développent une conscience de soi qui est extraordinaire. Et quand on est en relation avec soi-même, quand on se sent vivre à l’intérieur de son corps, on développe une performance insoupçonnée. Et tout à coup, je me suis dit que je suis capable de faire beaucoup, beaucoup plus de choses que ce que je pensais.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then suddenly, I found myself in a hang-glider, confronting myself, with the responsibility for my life in my hands. It’s these moments that develop a self consciousness that is extraordinary. And when one is in touch with their own self, when one feels alive to the core of their body, one develops unexpected performance. And suddenly, I tell myself I am capable of doing a lot.  A lot more things than I can imagine.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;04:30 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et l’aile delta, pour moi, c’était vraiment de l’initiation au monde de l’exploration, de l’aventure, mais aussi de la spiritualité, parce que je parlais beaucoup de spiritualité avec ma mère. C’était quelque chose de très théorique, puis tout à coup, je voyais à quel point on pouvait avoir ces flashs de conscience, à quel point on pouvait être en parfaite possession de toutes ces ressources dans l’instant présent. Et ça, c’était une révélation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And the hang glider, For me, it’s really the entry into the world, of exploration, of adventure, but also of spirituality. Because I was talking often about spirituality with my mother. It was something very theoretical and suddenly, I was flying and I saw how we can get these flashes of consciousness. How much we can be in perfect possession of all these resources in the present instant. And that, it was a revelation.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;04:53 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous avez fait beaucoup de chemin depuis, en 1999, après deux échecs, vous avez bouclé le premier tour du monde en ballon sans escale avec l’Anglais Brian Jones. 19 jours et 21 heures de vol, une odyssée qui a été considérée comme la dernière grande aventure du 20ème  siècle. Qu’est-ce qui vous a vraiment porté à croire, envers et contre tout, que vous pouviez aller au bout de ce rêve impossible?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You’ve come a long way since 1999 after two failures. You have accomplished the first non-stop round the world flight in a balloon with Englishman Brian Jones. 19 jours and 21 hours, an odyssey which was considered the last great adventure of the 20th century. What really made you believe, to everybody’s disbelief, that you could complete this impossible dream?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;05:14 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Parce que la seule manière de réussir, c’est d’essayer. C’est vrai que je n’avais pas forcément beaucoup de chances a priori de réussir. Je venais du monde de l’aile delta de l’ULM, c’est vrai que j’avais gagné la course transatlantique en ballon avec un pilote belge, Thomas Straton, qui m’avait invité, donc, m’avait initié au ballon. Mais en même temps, les grands milliardaires qui voulaient être les premiers à faire le tour du monde en ballon avaient déjà construit leurs ballons et ils avaient déjà fait des tentatives, Richard Branson, Steve Fossett, pour en nommer que deux.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Because the only way to succeed, is to try. It’s true that I wasn’t necessarily having good a priori odds of success. I was coming from the world of delta-wing and UL gliding. It’s true that I had won the transatlantic balloon race with Belgian pilot, Thomas Straton, who had invited me. Therefore, I had been initiated in balloon. But at the same time, the big billionaires who wanted to be the first to make the balloon world-trip had already constructed their balloons and they had already made the attempts Richard Branson, Steve Fossett, to name just two.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;05:45 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Puis moi, je me suis dit, mais, pourquoi pas moi finalement. Qu’est-ce que j’ai à perdre, si ce n’est d’essayer pour rien. Et finalement, la troisième tentative, j’ai réussi et j’ai fait le premier tour. Mais, pour moi, c’était vraiment une leçon de persévérance, d’apprentissage, de mener des très, très grands projets que tout le monde considérait impossible. Parce que c’est fou, vous vous confrontez à des gens qui se moquent de vous parce que vous ratez la première fois, qui vous disent que c’est de toute façon impossible, que vous n’y arriverez pas.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But me, I told myself why not me really? I asked myself what do I have to lose, if not to try for nothing? And then, the third attempt, I succeeded and I completed the first circumnavigation. But for me, it’s really a lesson of perseverance, of learning, of carrying very very big projects that everyone considered impossible. Because it’s crazy you come across people who mock you because you failed the first time and they tell you that it’s in every way impossible and that you won’t make it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;06:14 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et c’est là que vous voyez finalement les gens qui sont des vrais pionniers et qui vous accompagnent. Et puis, tous ceux qui ont peur d’essayer quoi que ce soit et pour qui vous êtes une menace si vous réussissez.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s then that you finally see the the people who are the true pioneers and who will accompany you. As well as all those who are scared to try anything and who will see you as a threat if you succeed.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;06:35 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Je crois que le souvenir le plus extraordinaire c’est le moment qu’il y a entre le décollage et l’atterrissage, c’est à dire les 20 jours eux-mêmes. Ça fait un tout, ça fait une espèce de rêve, ça fait un grand flash émotionnel, qui est teinté de toutes les couleurs qu’on a vues, de tous les paysages qu’on a vus. De tous les gens à qui on a parlé par radio. C’était vraiment un contact exceptionnel avec la planète et cela n’a pas été drôle tous les jours. Il y a eu des moments où c’était assez effrayants. Quand nous étions au-dessus du Pacifique, on s’approchait de l’Équateur et que nous n’avions presque plus de vent. Nous nous sommes perdus aussi dans le golfe du Mexique avec des vents qui étaient tout à fait défavorables pour nous. Et puis, chaque fois, il y a comme une main mystérieuse et invisible qui nous a remi dans la bonne direction et la bonne altitude pour permettre enfin de boucler ce tour.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I the most extraordinary souvenir is the moment between the takeoff and the landing. The 20 days themselves.  It makes complete, it makes a space for dreaming, it causes a great flash of emotion which is tinted with all the colours we saw, of all the landscapes that we saw. Of all the people I was speaking to on the radio. It was really an exceptional contact with the planet and it hasn’t been funny everyday. There were moments that were quite frightening. While over the Pacific, approaching the equator and there was very little wind. We were lost as well in the Gulf of Mexico with the winds that were all unfavorable for us. Then, each time, there is like a mysterious, invisible hand which sets us in the right direction and the right altitude allowing us to finally complete the journey.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;07:25 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Il y a quelque chose de l’ordre du lâcher prise, de l’abandon profond aux éléments dans cette expérience de tour du monde en ballon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Qu’est ce qu’on ressent profondément, intimement, dans ces moments-là?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There is something about the act of letting go, about the deep helplessness to the elements during this experience of circling the world by balloon.&lt;/p&gt;

&lt;p&gt;What is it that you feel deeply, intimately in moments like this?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;07:37 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sur le plan technique, vous êtes dans un ballon qui doit voler trois semaines. Vous ne savez pas si le ballon va voler aussi longtemps, si vous avez assez de réserves de gaz. Si le vent va vous pousser dans la bonne direction pendant ces trois semaines. Mais en même temps, ce qui est magnifique, c’est que vous êtes poussés par les forces de la nature. Il n’y a pas de moteur, il n’y a pas de gouvernail. Vous êtes poussés par le vent.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On a technical level, you are in a balloon that must fly three weeks. You don’t know if the balloon is going to fly that long, or if you have enough gas reserves remaining. If the wind is going to push you in the right direction during these three week as well. But at the same time, what is wonderful, is that you are pushed by the forces of nature. There is no motor, no rudder. You are propelled by the wind.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;07:55 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et puis, vous partez. Vous savez que vous avez 45 000 kilomètres en face de vous. Puis, peu à peu, vous arrivez à vous diriger et comment vous vous dirigez. Ce qui est extraordinaire, c’est que vous vous dirigez en changeant d’altitude parce que l’atmosphère est faite de couches météorologiques très différentes qui ont toutes une autre direction et une autre vitesse. Donc, si vous montez ou vous descendez, vous partez plus à gauche ou plus à droite et vous apprenez comme ça à utiliser ce changement d’altitude pour trouver la meilleure direction.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then you depart. You know that you have 45 000 kilometers in front of you. Well, little by little, you begin to gain control of yourself and your direction. What’s extraordinary, is that you manage your direction by changing altitude because the atmosphère is made of very different weather layers that all have different directions and speeds. Therefore, if you ascend or descend, you move more to the left or more to the right and you learn how to use the changing of altitude to find the best direction.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;08:22 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et pour changer d’altitude, vous devez lâcher du lest, lâcher du poids. et finalement, c’est une métaphore de la vie. C’est pour ça que j’aime le ballon. Le ballon, ce n’est pas un sport. Pour moi, c’est une philosophie de vie. Parce que dans la vie, vous êtes aussi poussé par les vents de la vie, par tout ce que vous ne pouvez pas contrôler, tout ce qui arrive, qui est en dehors de votre volonté souvent. Et vous devez lâcher du lest de vos certitudes, de vos habitudes, de vos dogmes, de vos croyances, de manière à pouvoir changer d’altitude et capter d’autres influences, d’autres directions dans laquelle la vie vous poussera.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And to change the altitude, you need to let go of the ballast, to cast off the weight.  Finally, it’s a metaphor of life. It’s for this that I love the balloon. Ballooning is not a sport. For me, it’s a philosophy for life. Because in life, you are also pushed by the winds of life, all of which you cannot control, all of which arrive, which are outside of your will usually. And you need to let go of the ballast of your certainties, of your habits, of your dogmas, of your beliefs, in order to be able to change the attitude and pick up other influences, other directions in which life will push you.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;09:05 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et puis, en 2003, vous vous êtes lancé dans le nouveau grand projet de votre existence avec la construction de Solar Impulse. Cet avion solaire capable de voler jour et nuit sans carburant. C’est à son bord que vous avez fait le tour du monde, de mars 2015 à juillet 2016. En vous relayant avec le pilote André Borschberg. Que cherchiez vous alors à prouver à vous-même et au monde?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And then, in 2003, you throw yourself into the next big project of your life with the construction of Solar Impulse. That solar airplane capable of flying day and night without fuel. It’s on board that you made the world tour, from March 2015 to July 2016. You along with the pilot André Borschberg, what were you seeking to prove to yourself and to the world?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;09:26 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quand j’ai atterri avec « Breitling Orbiter 3 » après le tour du monde en ballon, il restait 40 kilos de gaz liquide sur les 3700 kilos du départ.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I landed with Breitling Orbiter 3 after the world tour by balloon, It only had 40 kilos of liquid gas from the 3700 kilos on departure.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;09:32 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous étiez vraiment sur le fil?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You were really on the edge?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;09:34 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On était vraiment sur le fil.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Really on the edge.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;09:36 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;C’est là que j’ai vu que quand on dit : « le ciel est la limite », « the sky is the limit », ce n’est pas vrai, c’est le carburant qui est la limite. Vous ne pouvez juste pas aller plus loin.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Après trois semaines, il restait deux heures d’autonomie, et c’est là que j’ai commencé à rêver d’une possibilité de faire un tour du monde sans carburant et d’utiliser ça pour montrer ce qu’on peut faire en libérant du pétrole, ce qu’on peut faire avec des technologies propres, ce qu’on peut faire avec des énergies renouvables en termes d’exploits a priori impossibles. 
C’était ça qui me motivait alors dans Solar Impulse. Donc ce n’était pas de dire que tout le monde allait voler avec des avions solaires prochainement mais que cet avion pouvait être un messager, un ambassadeur des énergies renouvelables et montrer que si on pouvait le faire en vol, là où c’est le plus difficile, et bien forcément, on peut le faire au sol aussi.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s there that I saw that when they say ‘the sky that is the limit’ it’s not true.  It’s the fuel that is the limit.   You just can’t go further.
After 3 weeks, what remained was two hours of runnning. and it’s there that I started to dream of the possibility to make a world tour without fuel and using that to show what can be done free from petroleum.  What can be done with renewable energy and what  we can do with renewable energies in terms of a priori exploits.&lt;/p&gt;

&lt;p&gt;It’s that which motivated me towards Solar Impulse at that time.  It wasn’t to claim that everybody is going to fly with solar airplanes soon, but that this airplane can be a messenger and an ambassador of renewable energy and show what can be done in flight where it’s more difficult so it can be done on the ground as well.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;10:25 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous aviez eu peur pendant ce moment-là?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We’re you scared at that time?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;10:26 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Je n’ai jamais eu peur en vol. Parce qu’en vol, on est tellement connecté à soi-même, on est dans un tel niveau de performance, de conscience qu’on a l’impression qu’on arrive à résoudre les différents problèmes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Par contre, j’ai eu très souvent peur au sol, de ne pas pouvoir voler, de ne pas aboutir avec cette aventure, on était plusieurs fois à deux mois de la faillite parce que c’était quand-même une aventure où il fallait payer une centaine de personnes en moyenne tous les mois.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Donc il fallait des sponsors, des partenaires, pour que ça marche. Il fallait que l’avion vol bien, on avait des problèmes météo, des problèmes techniques, énormément de problèmes administratifs et bureaucratiques, terribles. Donc, tout ça c’était très lourd et je dois dire que c’était fatigant, c’était pénible. il fallait beaucoup de résilience, heureusement il y avait les moments de vol qui eux étaient extraordinaires.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’ve never been scared in flight.  Because in flight, I am so connected to myself and am in such a level of peformance and awareness that I’m ready to resolve various problems.&lt;/p&gt;

&lt;p&gt;On the other hand, I was often afraid on the ground, of not being able to fly, of not being able to complete this adventure.  There were several times we were two months  from bankruptcy because it was still an venture which needed to pay a hundred people on average each month.&lt;/p&gt;

&lt;p&gt;Therefore we needed sponsors &amp;amp; partners to proceed. We needed a plane that flies well.  There were weather problems, technical problems large administrative and bureaucratic problems.  Therefore it was all very onerous and I must say, it was tiring and painful.  It took a lot of resilience.  Fortunately, there were moments in my flight that were extraordinary.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;11:15 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous pourriez nous raconter un petit peu ces moments-là?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Can you tell us a little bit about these moments?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;11:18 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous êtes aligné sur une piste de décollage dans un aéroport, quel qu’il soit, en Chine, en Birmanie, aux États-Unis. Vous avez toute votre équipe autour de l’avion, les membres de l’équipe tiennent les ailes, vous avez une partie des ingénieurs à Monaco qui communiquent par téléphone satellite avec vous.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous êtes comme dans un lancement de fusée, pratiquement, et puis tout à coup, vous avez la tour de contrôle qui vous dit: « Solar Impulse 2 vous êtes autorisés au décollage ». Et là vous mettez des manettes des moteurs à fond, il n’y a pas bruit, un tout petit sifflement. Vous avez l’avion qui commence à avancer et au bout de 150 mètres vous êtes en l’air. Alors, ça ne monte pas comme une fusée, ca monte très doucement&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You are lined up at any takeoff runway in China, Burma, US.  You have all your aircraft team around the plane. The members of the team hold the wings.  You have a party of engineers in monaco who communicate with you via satellite phone.&lt;/p&gt;

&lt;p&gt;It’s like launching a rocket really. The suddenly you have the control tower which tells you: “Solar Impulse 2 that you are cleared to take-off”.  Then you apply the full throttle to the motors, there is no sound, just a small whistle. You have the plane beginning to advance until after 150m, you are in the air. So it doesn’t climb like a rocket, it climbs very slowly.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;12:00 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mais il n’y a pas bruit, il n’y a pas de carburant, il n’y a pas de pollution, et vous êtes dans un avion totalement unique au monde, et vous vous dites:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;« Et bien voilà, j’ai décollé. Maintenant, j’ai l’Atlantique devant moi, j’ai le Pacifique devant moi, j’ai la Chine devant moi »;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;que vous savez que vous allez rester en vol plusieurs jours et plusieurs nuits, et que vous êtes au milieu de l’inconnue, au milieu des doutes, au milieu de tas choses qui vont peut-être ne pas se passer comme vous voulez, et vous devez réussir. Moi, je me rappelle très bien quand j’ai laissé la cote de Hawaii derrière mois et que j’avais 4000 kilomètres d’eau jusqu’à San Francisco, c’est extraordinaire comme moment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But there’s no noise and there’s no fuel and no pollution. You are in a plane that is totally unique in the world and you to yourself:&lt;/p&gt;

&lt;p&gt;“Voila, I’ve launched.  Now, I have the Atlantic in front of me, I have the Pacific in front of me.  I have China in front of me.“&lt;/p&gt;

&lt;p&gt;that you know that you are going to stay in flight many days and nights.  and you are in a milieu of thoughts, of doubts, of many things that may not happen the way you want and you must succeed. Me, I remember very well when I left the coast of Hawaii behind me and I had 4000 kms of water until San Francisco. It was an extraordinary moment.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;12:38 - Reporter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dans le ciel, seules quelques lumières trouent l’obscurité. En silence, Solar Impulse 2 est apparu au-dessus de l’aéroport d’Abou Dabi. L’avion solaire, se pose très lentement. Sur le tarmac, André Borschberg accueille son coéquipier Bertrand Piccard, ils se congratulent. Leur pari insensé est gagné.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the sky, just a few lights pierce the darkness.  In silence, Solar Impulse II appears over Abu Dhabi airort.  The solar plane lands very slowly. On the tarmac, Andre Bourgberg embraces his teammate Bertrand Piccard. The congratulate each other.  The insane bet is won.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;13:04 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Je voudrais vous faire lire un petit passage d’une de vos citations qui résume votre conception enthousiaste et métaphysique de l’aventure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;alors c’est celle-ci&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’d like you to read a small passage of one of your quotes that summarizes your enthusiastic and metaphysical concept of adventure.&lt;/p&gt;

&lt;p&gt;This is it here&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;13:17 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;L’aventure est un état d’esprit vis-à-vis de l’inconnu une façon de concevoir notre existence comme un chant expérimental dans lequel nous sommes obligés de développer une ressource intérieure, de gravir le chemin de l’évolution personnelle et d’assimiler les valeurs éthiques et spirituelles dont nous avons besoin comme compagnon de voyage.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Adventure is a spiritual state facing the unknown. A manner of conceiving our existence like an experimental song in which we are required to develop an interior resource, of climbing the path of personal evolution and of assimilating the ethics and spiritual values within that we need like a travelling companion.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;13:44 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Est-ce que vous pourriez me dire un peu comment ont évolué, justement, ces ressources intérieures que vous avez su mobiliser depuis vos premières expériences de vol en delta-plane à aujourd’hui.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Could you tell me a bit on exactly how these interior resources that you have mobilized since your first experiences before with hang-gliding have evolved until today?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;13:55 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Au début c’était le courage et c’est devenu la confiance. Le courage c’est quand vous arrivez à faire quelque chose même si vous avez peur. Mais ce n’est pas suffisant. Moi ce que je remarque, c’est que ce qui important c’est la confiance. Et c’est ce que j’ai prouvé quand j’étais avec Breitling Orbiter 3, entre terre et ciel, avec Solar Impulse 2, au milieu d’un océan, vous êtes tout seul, vous êtes là, même de nuit, à des milliers de kilomètres de toute possibilité de secours et vous vous sentez mieux que dans tous les moments de votre vie normale.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;First, it was the courage and then came the confidence.  The courage is when you will proceed to do something even if you are scared.  But that’s not enough.  What I noticed, is that what matters is confidence and that’s what I proved when I with Brietling Orbiter 3, between earth and sky, and with Solar Impulse 2.  Within the vastness of the ocean, you are all alone, even at night and thousands of kilometers away from all possibilities of relief and you feel better than at any time in your normal life.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;14:28 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et ça au début, c’était vraiment un point d’interrogation, je me disais, mais comment c’est possible, je suis complètement fou, je suis dans une situation qui empêcherait tout le monde de dormir et moi je me sent mieux que dans n’importe quel moment de ma vie. 
Et en fait, je crois que c’est vraiment le fait que quand on se met en rupture par rapport à toutes nos habitudes tout notre conditionnement qu’on est catapulté en dehors de sa zone de confort en est obligé de se retrouver à l’intérieur de soi-même et d’aller puiser les ressources qu’il vous faut au fond de soi-même. Et quand vous trouvez les ressources qu’il vous faut en vous, ça donne une confiance immense dans l’être humain, dans la vie, dans le monde, dans tout ce qui nous guide, parce qu’on voit qu’on a en soi ce qu’il faut pour avancer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And at the beginning, it was really a question mark.  I was telling myself, but how is it possible, I’m completely crazy.  I am in a situation that would prevent everyone from sleeping and I feel better than any time in my life. 
In effect, I believe that it’s really the fact that when we break from all our conditioning, that we are catapulted out of our comfort zone, we are forced to find our true selves and when we find the resources that we need within ourselves, it gives an immense confidence in humanity; in life; in the world; in all that guides us because we see in ourselves everything that is needed to move forward.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;15:10 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mais est-ce que vous appréhendez les atterrissages, la manière de se réacclimater au monde au sol&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But do you prepared yourself for the landing, the way to reacclimatize to the world on the ground?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;15:15 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;L’avantage c’est que quand vous êtes vraiment dans ces moments de grâce, quand vous voyez à quel point vous pouvez fonctionner mieux que d’habitude, quand vous revenez dans la vie normale, la vie n’est plus totalement normale. Vous arrivez à en extraire beaucoup plus de l’essentiel. Vous arrivez à donner beaucoup plus de valeur aux relations humaines, au destin, à la spiritualité, à tous les événements de la vie. Vous voyez qu’en fait l’aventure elle n’est pas que « en l’air », l’aventure elle est aussi au sol. Elle est dans votre vie de tous les jours dans tout ce qui guide vos pas à la recherche de ce que vous cherchez.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The great thing is that when you are really in these moments of grace, when you see at what point you can function better than usual. When you return to normal life, life is no longer completely normal. You come to get a lot more out of the essentials. You come to place a lot more value on human relationships, to fate, to spirituality, to all the stages in life.  You see that in fact the deventure is not just in the air.  The adventure is also on the ground.  It is in your everyday life and in everything that guides you towards what you are seeking.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;16:04 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Une autre facette de votre vie que nous n’avons pas encore explorée, mais vous avez donc décidé de faire des études de médecine avec une double spécialisation en psychiatrie et psychothérapie, qu’est-ce que vous avez tiré de tous ces apprentissages sur les mondes intérieurs?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Another aspect of your life that we haven’t already explored, you have done decided to study medicine with a double specialization in psychiatry and psychotherapy.  What have you pulled from all these studies about the interior world?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;16:18 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;J’ai vu à quel point les gens souffrent et se sentent mal dans leur vie. Au moment où ils oublient leur racine spirituelle, au moment où ils ont perdu le sens du contexte dans lequel ils vivent. Beaucoup de gens veulent se rassurer avec des repères extérieurs, très matériels, s’appuient sur des gens qu’ils aiment mais qui peuvent mourir, sur de l’argent qui peut disparaître, et finalement je pense qu’il y a énormément de gens qui sont angoissés parce qu’ils vivent en équilibre instable sur des repères qui peuvent s’effondrer à n’importe quel moment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I saw to what point people suffer and feel bad in their lives. At the time they forget their spiritual roots. At the moment where they have lost the sense of context in which they live.  Many people want to comfort themselves with external, very material fixes/benchmarks.  To rely on people they love but who can die or over money which can disappear. Finally I think that there are many people who are disoriented because they live in unstable equilibrium based on landmarks that could collapse at any time.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;17:00 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ce qui est fondamental, c’est de développer le sens de l’essentiel. C’est à dire Revenir à pourquoi on vit, et se dire que peut-être qu’on vient de quelque part, mais on ne sait pas où. On va quelque part, et on ne sait pas où. On ne sait pas très bien pourquoi on est là. Et au lieu d’avoir des réponses toutes faites, on peut se permettre d’avoir des questions ouvertes. Et quand on a des questions ouvertes, on devient un explorateur.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What’s fundamental, is to develop a sence of the essential. I mean to return to the why of life and say to ourselves that maybe we come from somewhere, but we don’t know where.  We are going somewhere, but we don’t know where We don’t really know why we are here.  So instead of having answers for everything, we can allow for open questions. and when you have open questions, you become an explorer.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;17:24 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mais est-ce que ce n’est pas épuisant d’être sans cesse dans ce mouvement de renouvellement, de grand questionnement existentiel?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But isn’t it exhausting to be constantly in this movement of renewal? Of great existential questioning?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;17:29 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alors, moi je trouve que c’est ça qui nourrit, c’est ça qui donne l’énergie. Ce qui est épuisant c’est l’équilibre instable, se disant je ne sais pas pourquoi je vis, je ne sais pas ce que je fais là, mais il faut que je sois le plus heureux possible. Puis ensuite on fait comment pour être le plus heureux possible?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alors, on essaie d’acquérir des biens matériels, d’être amoureux de quelqu’un qui n’est peut-être pas amoureux de vous. Enfin, il y a plein de choses qui ne dépendent plus de nous, alors que notre sécurité intérieure et notre quête, elles dépendent de nous. Et ça recadre complètement les événements qui arrivent.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Les événements de la vie ne sont peut-être pas là pour vous détruire, les événements de la vie sont peut-être là pour vous stimuler à lâcher des certitudes, lâcher des habitudes, lâcher des croyances, vous ouvrir à d’autres dimensions et trouver d’autres influences qui vont vous emmener dans d’autres directions de votre vie.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Actually, I find that it’s what nourishes.  It’s that which gives the energy.  What is exhausting, is the unstable equilibrium.  If I don’t know why I’m alive, I don’t know what I’m doing here. But I should be as happy as possible.  So what can be done to be as happy as possible?&lt;/p&gt;

&lt;p&gt;So we try to acquire material goods, to be in love with someone who is not in love with you. Finally, there are plenty of things that don’t depend on us anymore.  And they completely reframe the events that come along.&lt;/p&gt;

&lt;p&gt;Maybe life events don’t happen to destroy you.  Maybe life events happen to stimulate you to release the certainties, to release the habits, release the beliefs, to open up other dimensions and find influences that will take your life in new directions.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;18:16 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et vous trouvez que la société est réceptive à ce discours-là ? On voit qu’il y a un changement de paradigme et une prise de conscience de ça aujourd’hui?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And do you find that society is receptive to this discours? Does there appear to be a paradigm shift and consciousness like that today?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;18:22 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Moi j’ai toujours observé que l’évolution elle se faisait beaucoup plus à titre individuel que collectivement. Je n’ai pas l’impression que c’est la société qui évolue dans cette direction-là. Ce sont les individus isolément qui tout à coup trouvent quelque chose là-dedans qui leur permet d’avancer. On ne vit pas dans une société qui s’intéresse à l’essentiel.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Me, I have always observed that the evolution more individually than collectively.  I don’t have the impression that society is developing in this direction. It’s these isolated individuals who have suddenly found something that gives them the ability to advance.  We don’t live in a society that is interested in the essentials.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;18:50 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous l’avez brièvement évoqué tout à l’heure, mais vous avez grandi dans une famille aussi très portée sur la spiritualité avec une grand-mère maternelle pasteure. Votre mère aussi qui vous a fait part de ses études sur le bouddhisme sur le taoïsme. Comment est-ce que ça a nourri votre parcours?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You briefly mentioned it earlier. But you grew up in a family that was very spiritual with a maternal grandmother who was a pastor. Your mother as well who imparted you with her studies of buddhism and Taoism.  How has this nourished your journey?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;19:04 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;C’est un aspect fondamental, et d’habitude, tout le monde me parle de mon père et de mon grand-père, qui sont des explorateurs qui ont apporté énormément au 20ème siècle, mais c’est vrai qu’avoir une mère qui vous prend au sérieux comme enfant, dans votre recherche de compréhension de la vie, de la mort, de Dieu, des autres, c’est extraordinaire.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;J’ai passé des heures et des heures à me promener avec ma mère dans la forêt, dans la montagne, un peu partout, déjà quand j’avais 6 ans, 7 ans, et puis je lui posais toutes les questions que je pouvais pour essayer de comprendre pourquoi j’étais là, à quoi ça sert tout ce qu’on fait, tout ce qu’on voit, on vient d’où, on va où, et cetera.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Puis elle m’expliquait tout ce qu’elle avait compris dans toutes ses recherches. Que ce soit dans le christianisme, dans le bouddhisme, dans l’hindouisme, dans tous les groupes de développement personnel, et cetera. Et puis de temps en temps elle me disait : « ha bah ça, je ne sais pas ». Mais c’est extraordinaire comme cadeau quand un adulte dit à un enfant : « je ne sais pas ».&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s a fundamental aspect and usually everyone talks to me about my father and grandfather, who were explorers that contributed alot to the 20th century. But it’s really my mother who  takes you seriously as a child in attempting to understand life, death, God, others. It’s extraordinary.&lt;/p&gt;

&lt;p&gt;I spent hours and hours walking with my mother in the forest, in the mountains everywhere. Already when I was 6 to 7 years old, I would ask all these questions that I could. Trying To try and understand why I was there, what is the point of everything we do, everything we see, we come from where, we go where, etc.&lt;/p&gt;

&lt;p&gt;Then she explained to me all that she understood from her research.  Whether in Christianity, in Buddhism, in Hinduism in different personal development groups. And sometimes she would say to me: “I don’t know”. But it’s an amazing gift to a child when an adult says: “I don’t know”.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;20:02 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Oui, l’honnêteté de savoir avouer ses limites aussi.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes, the honesty of knowing how to admit your limits as well&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;20:06 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mais totalement, l’honnêteté absolue et puis en plus la stimulation pour l’enfant de se dire : « Mes parents ne savent pas, mais moi je vais peut-être essayer de comprendre et essayer de trouver. » Donc ça donne envie d’aller plus loin, ce ne sont plus seulement des questions, ça devient une quête. Alors j’avais la quête de comprendre le monde intérieur avec ma mère, de comprendre le monde extérieur avec mon père, et c’est en fait la synthèse des deux qui m’a animé toute ma vie.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ya totally, absolute honesty and then on top of that the stimulation for the child. To say to themself, “My parents don’t know but me i’m going to try to understand and try to find out”.  It’s more than just questions now. It has become a quest.  So I had the quest to understand the interior world with my mother and the exterior world with my father.  and it is really the synthesis of both that has animated me all my life.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;20:28 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On comprend pourquoi vous êtes aussi, comme un équilibriste, toujours entre ces deux grands domaines de recherche. Vous-même, est-ce qu’aujourd’hui vous vous définiriez comme croyant, je crois que vous avez éduqué vos filles dans la religion catholique.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We understanding why you are also, like a balancing artist, always in between these two great areas of research.  You are, today, what you would define as a believer.  I believe that you have educated your daughter in the Catholic religion.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;20:40 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Oui, alors croyant, cela dépend en quoi. Moi, je ne crois pas dans le dieu que les hommes ont fabriqué pour se rassurer de leur peur de la mort. Par contre, je crois en un dieu qui a créé l’être humain. Et qui, pour une raison qu’on ne connait pas très bien, a manifesté toute cette création, je pense qu’il y a un créateur à tout ça, je pense qu’il y a quelque chose qui donne un sens.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Donc ce qui m’intéresse le plus c’est la notion de transcendance. C’est la notion d’une force supérieure, d’une énergie supérieure qui donne un sens à ce qu’on vit. Mais effectivement, on ne le comprend pas parce qu’on n’est pas à ce niveau, et je pense que l’être humain ne peux pas mettre un visage à Dieu, attribuer des émotions ou des volontés à Dieu, c’est horriblement présomptueux et arrogant de dire Dieu est comme si, Dieu est comme ça. On n’en sait rien, on doit être Dieu pour comprendre Dieu. C’est déjà difficile de connaître les hommes quand on est homme. Donc vous voyez…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes, on believing, it depends on what.  Me, I don’t believe in the God that people have fabricated in order to reassure themselves about their fear of death.  On the contrary, I believe in one God who created the human being.  Who, for some reason that we don’t understand well, manifested all of creation.  I believe that there is a creator behind it all. I think there’s something that makes sense.&lt;/p&gt;

&lt;p&gt;Therefore what interests me most is the notion of transcendence.  It’s the notion of a higher force, a higher energy that gives a meaning to what we experience as life. But effectively, it’s incomprehensible because it’s on a different level and I think that humans cannot put a face to God, attribute emotions or wills to God, It’s horribly presumptuous and arrogant to say God is like this or God is like that. It’s already hard to understand people when you are a person. So you see…&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;21:44 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;L’an dernier, vous avez aussi rencontré le pape François au Vatican. Est-ce que vous pourriez nous raconter cette rencontre?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Last year you also met Pope Francis at the Vatican.  Could you tell us about that meeting?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;21:50 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Moi j’avais envie de rencontrer le pape François parce que… en fait c’est le premier pape que j’avais envie de rencontrer. Parce que j’ai l’impression que c’est le premier que s’est vraiment occupé des grands problèmes de notre monde : la pauvreté, l’environnement, le respect entre les êtres humains ; et qui essaie d’améliorer la qualité de vie sur Terre, indépendamment de toute politique.
Et puis j’avais lu le « laudato si » qui est cette encyclique sur l’environnement. Et j’avais envie de lui en parler parce qu’en fait, ce « laudato si », il très intéressant pour ceux qui arrivent à le compredre. Mais quand on parle essentiellement de respect pour l’environnement, d’amour pour le prochain et de reconnaissance pour la création divine, on va toucher une certaine partie des gens et ceux qu’on touche ne sont pas ceux qui détruisent l’environnement.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I wanted to meet with Pope Francis because, actually he is the first Pope I wanted to meet.  Because I have the impression that he’s the first who is really occupied with the great problems of our world like poverty, environment, respect between people; and who is trying to improve the quality of life on Earth independently of politics.
And then I read the Laudato Si which is the encyclical about the environment. and I had wanted to talk because really that Laudato Si is very interesting for those who manage to understand it.  But when we mainly speak about respect for the environment, love for thy neighbour and gratitude for divine creation, it will touch a certain group of people and those it touches are not those who destroy the environment.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;22:35 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ce n’est pas ceux qui tuent, torturent et massacrent leurs semblables.  Par conséquent, j’avais envie de lui dire, mais quel est la language qu’il faut pour convaincre ceux qui ne sont pas encore convaincus. Et moi j’avais envie d’aborder avec lui ce… C’est de ça qu’on a parlé, de toutes les solutions technologiques qui sont financièrement rentables et qui peuvent protéger l’environnement. Même quand on est égoïste, même quand on n’est pas spirituel ou religieux, même quand on a aucun respect pour les autres, mais peut-être qu’on peut faire du bien quand même parce qu’on y trouve un avantage soi-même.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s not those who kill, torture and massacre their fellow human beings. That’s why I had wanted to speak with him but what is the language that can convince those who aren’t already convinced? I wanted to approach this with him. That’s what we talked about, all of these technological solutions that are financially profitable and can protect the environment.  Even when you are selfish, even when you are not spiritual or religious even if you have no respect for others but maybe you can still do good because there is an advantage for your own self.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;23:10 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous pensez la technologie pourrait sauver le monde?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Do you think technology can save the world?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;23:13 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;La technologie, ça dépend ce qu’on en fait. On peut détruire le monde avec la technologie, on peut sauver le monde avec la technologie. Mais aujourd’hui, c’est clair qu’il y a des technologies propres qui permettent à l’être humain d’être beaucoup plus efficient, d’économiser de l’énergie, d’économiser des ressources naturelles, économiser de la nourriture, valoriser les déchets, fonctionner nettement mieux et aujourd’hui vous avez en tout cas la moitié du problème qui resolvable totalement grâce à la technologie : technologies propres et énergies renouvelables. 
L’autre moitié nécessitera forcément des aménagements économiques, des aménagements d’attitude, de comportement humain, mais il ne faut pas commencer par le comportement humain, parce que si vous dites aux gens de faire des sacrifices, ils vont prendre l’écologie en grippe. Si vous leur dites, vous pouvez continuer à faire la même chose mais vous pouvez avoir un impact divisé par dix sur l’environnement parce que vous serez plus efficients, les technologies modernes vous permettront de protéger l’environnement. Et bien ils vont adorer l’écologie. Par conséquent, il faut commencer par faire tout ce qu’on peut sur le plan technologique, et puis ensuite, si on doit aller plus loin, à ce moment-là, on peut peut-être demander aux gens de changer les attitudes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Technology depends on how it is used.  We can destroy the world with technology and we can save the world with technology.  But today it’s clear that there is the right technology to permit humanity to be a lot more efficient. More energy efficiency, efficiency of natural resources, food efficiency and increasing the value of waste that function better and today you have in any cases half of the problems that can be solved thanks to technology: Clean technology and renewable energy.&lt;br /&gt;
The other half requires economic adjustments, as well as adjustment to attitudes and human behaviours. But it shouldn’t start with human behaviour because when you are asking people to make sacrifices.  They are going to take ecology into consideration.  If you tell them, you  can continue doing the same thing but you can have 10% of the environmental impact because you are more efficient, modern technologies permit you to protect the environment. Then they are going to love the ecology. Therefore we should start by doing everything we can with technology. Then if we must go further, perhaps we can people to change their attitudes.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;24:20 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et le pape François été réceptif à votre discours pendant votre rencontre?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And Pope Francis was receptive to your speech during your meeting?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;24:24 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On a dit qu’on allait se revoir, mais c’était un mois avant le début de la pandémie quand je l’ai rencontré. Donc c’est vrai qu’on n’a pas pu se revoir. On a gardé des contacts épistolaires, notamment avec le cardinal Turkson qui dirige cette partie-là du Vatican. Je me réjouis de pouvoir aller lui amener les milles solutions rentables pour protéger l’environnement que la fondation Solar Impulse saura trouver d’ici le mois d’avril et de pouvoir lui montrer qu’il y a énormément de technologies qui peuvent motiver, dans la protection de l’environnement, ceux qui ne sont pas sensibles à son « laudato si ».&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We said that we would meet again. But it was a month before the start of the epidemic when we met. So really we haven’t had the chance to meet again.  We’ve kept in written contact, especially with Cardinal Turkson who directs that part of the Vatican.  I’m thrilled to be able to bring him the 1000 profitable solutions to protect the environment that the Solar Impulse Foundation will be able to find by April and to be able to show him that there are many technologies that can motivate, towards protection of the environment, those who are not sensitive to his Laudato Si.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;24:58 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Comment est-ce que vous vous situez par rapport à une certaine écologie catastrophiste et millénariste?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;How do you position yourself in relation to a certain catastrophist and millenarian ecology.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;25:05 - BP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pour que les gens adoptent de nouvelles solutions, adoptent de nouvelles technologies, passent du pétrole au solaire, passent du chauffage inefficient à la pompe à chaleur, passent d’une voiture diesel à une voiture électrique. En fait, il faut un choc, parce que sinon, il n’y a pas grand monde qui a l’esprit de pionnier et qui est intéressé spontanément par le changement. Et ce choc, les écologistes le donnent, les catastrophistes le donnent, Greta Thunnberg le donne, et c’est bien, parce qu’il faut que les gens voient que s’ils ne font rien, on court tous à la catastrophe. Et la catastrophe va venir beaucoup plus vite qu’on ne le croit et de manière beaucoup plus grave qu’on ne le croit.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Par contre, il y a des solutions pour éviter cette catastrophe. Et si on a peur de la catastrophe, on va se mobiliser beaucoup plus pour utiliser des solutions et changer le cours des choses.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For people to adopt new solutions, adopt new technologies, switch from petrol to solar, switch from inefficient heating to heat pumps switch from a diesel car to an electric.  In fact, requires a shock.  Because otherwise not many people are pioneering and spontaneously interested in changing.  It’s this shock the ecologists give, that the catastrophits give, that Greta Thornburg gives. It’s good because people have to see that if they do nothing, everyone is headed for a disaster and the disaster will come a lot more quickly and seriously than most believe.&lt;/p&gt;

&lt;p&gt;On the other hand, there are solutions for avoiding the catastrophe.  If we are afraid of the catastrophes, and if we are afraid of the disaster, we will mobilize much more to use these solutions to change the course of things&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;25:58 - MT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vous venez d’écouter un épisode de la troisième saison de « Place des Religions ». S’il vous a intéressé, n’hésitez pas à le partager et à vous abonner à notre podcast. « Place des Religions » est à écouter sur toutes les plateformes, sur le site et l’appli « La Croix ».&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You have just listened to an episode of the third season of “Place des Religions”. If it interested you, feel free to share it and subscribe to our podcast. “Place des Religions” can be listened to on all platforms, on the “La Croix” website and app.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo Credit: &lt;a href=&quot;houseofswitzerland.org/sites/default/files/story/gallery/2014_10_28_18th_Flight_Pizzolante_Solar_Impulse_2_8_web.jpg&quot;&gt;houseofswitzerland.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="solar-impulse" /><summary type="html">In April, Capt Piccard sat down with the Malo Tresca and the podcast Place des Religions for a discussion about exploration, consciousness and how the Solar Impulse Network of 1000 Solutions can contribute to the great existential challenge of the 21st century. I decided to do a translation into English. I opted to do this for a few reasons: Just for fun and French practice To reflect more on where Solar Impulse might be heading with its newest initiative and tagline Ecology as driving force for economy I really want to see this initiative succeed</summary></entry><entry><title type="html">sunE declares intention to achieve Net-Zero across its supply chain by 2025.</title><link href="https://sunetrike.com/announcements/declaration-to-achieve-net-zero/" rel="alternate" type="text/html" title="sunE declares intention to achieve Net-Zero across its supply chain by 2025." /><published>2021-08-24T01:08:07+08:00</published><updated>2021-08-24T01:08:07+08:00</updated><id>https://sunetrike.com/announcements/declaration-to-achieve-net-zero</id><content type="html" xml:base="https://sunetrike.com/announcements/declaration-to-achieve-net-zero/">&lt;p&gt;We are pleased to announce a minor (but important) change in compass-heading for the sunE Venture.  Please see our declaration to achieve net-zero &lt;a href=&quot;/sunE-net-zero-declaration/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="announcements" /><summary type="html">We are pleased to announce a minor (but important) change in compass-heading for the sunE Venture. Please see our declaration to achieve net-zero here</summary></entry><entry><title type="html">Past, Present and Future of Environmentalism - Presentation for Mapua’s Social Sciences and Education week</title><link href="https://sunetrike.com/presentations/environmentalism/mapua-humanities-presentation-environmentalism-past-present-future/" rel="alternate" type="text/html" title="Past, Present and Future of Environmentalism - Presentation for Mapua’s Social Sciences and Education week" /><published>2021-06-26T01:08:07+08:00</published><updated>2021-06-26T01:08:07+08:00</updated><id>https://sunetrike.com/presentations/environmentalism/mapua-humanities-presentation-environmentalism-past-present-future</id><content type="html" xml:base="https://sunetrike.com/presentations/environmentalism/mapua-humanities-presentation-environmentalism-past-present-future/">&lt;p&gt;As part the week in Social Sciences and Education at &lt;a href=&quot;ssse.mapua.edu.ph&quot;&gt;Mapua University&lt;/a&gt;, I was grateful for the opportunity to share my thoughts about environmentalism with some of the bright, emerging minds of the Philippines.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/pdfs/mapua-ssed-presentation.pdf&quot;&gt;Please click here to access: Past, Present and Future for Environmentalism&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I attempted to share what I felt was a good cross-section of links and references which represent the evolution of my own views since &lt;a href=&quot;https://apps.ualberta.ca/catalogue/course/ren_r/260&quot;&gt;taking a similar course&lt;/a&gt; during my own time spent in university.  I suspect more robust references could be found within the walls of academia.&lt;/p&gt;

&lt;p&gt;My hope is that what I shared will help give some students ideas on how to forge their own path in the world and find the courage to pursue their passion in a field as dynamic and complex as environmental sustainability.&lt;/p&gt;

&lt;p&gt;Readers are asked to please be mindful that the contents of this presentation were delivered with an addtional oral explanation so there is potential to misinterpret the statements.&lt;/p&gt;

&lt;p&gt;I welcome respectful discussion on this and I recognize that some of the topics discussed inside may have alterantive explanations that are also valid.  Meanwhile I will also contend that there are plenty of messages and opinions that we (humanity) have adopted which give a comfortable position from which to continue our destructive tendencies.&lt;/p&gt;

&lt;p&gt;Progress has been made, but we still have lots of work ahead of us.&lt;/p&gt;

&lt;p&gt;Opinions expressed in this presentation should not be considered as representative of the broader sunE team.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mapua/mapua-ssed-poster.jpeg&quot; alt=&quot;Social Sciences and Eduation - Mapua&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="presentations" /><category term="environmentalism" /><summary type="html">As part the week in Social Sciences and Education at Mapua University, I was grateful for the opportunity to share my thoughts about environmentalism with some of the bright, emerging minds of the Philippines. Please click here to access: Past, Present and Future for Environmentalism</summary></entry><entry><title type="html">My Pedal Powered Adventure - An hommage to Piccard’s Epic Voyage</title><link href="https://sunetrike.com/solar-impulse/my-pedal-powered-journey/" rel="alternate" type="text/html" title="My Pedal Powered Adventure - An hommage to Piccard’s Epic Voyage" /><published>2021-04-12T01:08:07+08:00</published><updated>2021-04-12T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/my-pedal-powered-journey</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/my-pedal-powered-journey/">&lt;p&gt;In a salute to the &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;1000 solution milestone&lt;/a&gt; of the Solar Impulse Foundation, This story is a bit of an hommage to the immensely inspiring 2010 TED talk by Captain Bertrand Piccard titled &lt;a href=&quot;https://www.ted.com/talks/bertrand_piccard_my_solar_powered_adventure#t-1046442&quot;&gt;‘My Solar-Powered Adventure’&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This entrepreneurship adventure of ours has had many highs and lows.  His speech has pulled me out of the depths of despair on more than one occasion.  What a great gift to humanity he has given by providing a living embodiment for the &lt;a href=&quot;/assets/images/pedal-power/next_generation.jpg&quot;&gt;Next Generation&lt;/a&gt; to tackle one of the biggest challenges of our time.  The team at sunE couldn’t be prouder to have been accepted onto this ship.&lt;/p&gt;

&lt;h2 id=&quot;so-without-further-ado-onto-the-story&quot;&gt;So without further ado, onto the story&lt;/h2&gt;

&lt;p&gt;The year is 2011, I had just won best presentation award at the 1st Student Research Symposium of the &lt;a href=&quot;http://www.helmholtz-alberta.org/?page_id=109&quot;&gt;Helmholtz Alberta Initiative&lt;/a&gt;.  As the only undergaduate to participate in the event, how exciting it was to be recognized by such accomplished academics for my efforts in trying to understand the nature of the energy tucked away deep below our feet.  I asked of one of these men, the head of an experimental forest in Germany, what is my next step?  His answer was simple:
	&lt;img src=&quot;/assets/images/pedal-power/science_handout.jpg&quot; alt=&quot;Just put your hand out&quot; /&gt;
	“Just put your hand out.”&lt;/p&gt;

&lt;p&gt;This wasn’t the answer I was looking for.  During my studies, I had formed the opinion that if we are going to solve climate change, it will be because we figured out how to make the business work.  Besides, I’d just graduated and spent the last couple months touring around southern British Columbia with one of my best buds Frankie (a master baker, painter and one of the most wonderfully caring souls you’ll ever meet).  I was in adventure mode and keen to bike down to the &lt;a href=&quot;https://www.icenews.is/2011/10/23/geothermal-energy-conference-to-see-participation-from-islandsbanki/&quot;&gt;Geothermal Resources Convention&lt;/a&gt; in California.  With all the volcanoes along the way, I was super excited about all the new things I would discover.&lt;/p&gt;

&lt;p&gt;I had stars in my eyes, I was on cloud-9.  Before I left, I stopped in to see my buddy Frankie, he was not looking so good.  Now that summer was over, he didn’t know how we was gonna make ends meet and didn’t know who to turn to.  He asked for help.&lt;/p&gt;

&lt;p&gt;Here I was, on one side, being given the opportunity to write my dream ticket.  On the other side, with a close friend desperately seeking a hand which I had no idea how to give.  But my bags were packed, I was hitting the road.  I cut the ballast, so to speak.&lt;/p&gt;

&lt;p&gt;So I picked up a ‘commuter’ bike (I was on my way to find a job after all) and a bit of camping gear from Lethbridge, Alberta and hit the road.
This is the picture of my border crossing.  Of course, in earlier times, there was no border and this was known simply as Blackfoot territory.  But I was happy to give a salute to all 3 nations represented at the border that day.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/border.jpg&quot; alt=&quot;Montana border crossing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The leaves and huckleberry pies of Montana in the autumn are a special treat that few know about.  The mountains aren’t as jagged as the peaks to the north in Canada, but the rivers wind through those valleys like the crispest ribbons of silk.&lt;/p&gt;

&lt;p&gt;Less than an hour across the border, BEAR!  BIG F-ING BEAR!  Biggest bloody grizzly bear I’ve ever seen in my life.  Bigger than most pickup trucks, I’m pretty sure with its paws stretched out, it would have spanned the entire 2-lane highway.  Less than 100 meters in front of me and my little commuter. This picture is not the actual bear by the way, I just found it on the internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/grizzly.jpg&quot; alt=&quot;BIG F-ING BEAR!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I grew up in &lt;a href=&quot;http://www.climatehotmap.org/global-warming-locations/british-columbia-canada.html&quot;&gt;Prince George&lt;/a&gt; and I’ve seen some big grizzly bears before.  But this was something else.  I didn’t even know they could get that big!!  But he didn’t stop, so he was gone as quickly as he appeared.&lt;/p&gt;

&lt;p&gt;On I went, into the Snake River Plane..volcano and ice cave territory.  I came upon a geology book with a fascinating theory.  That around 17 million years ago a meteor hit the crust so hard, that it cracked right down to the mantle and up came the volcanic hotspot we now know today as Yellowstone. 
Around the same time, Nevada stared stretching apart like a piece of taffy.  This created all sorts of volcanic goodies like hot springs, geothermal reservoirs and lithium deposits (a bit of gold and copper as well, if you’re into that sort of thing).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/nevada_rifting.png&quot; alt=&quot;Nevada Rifting!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From what I can tell, that particular theory didn’t really &lt;a href=&quot;https://www.latimes.com/archives/la-xpm-1990-03-19-me-477-story.html&quot;&gt;gain acceptance&lt;/a&gt; within the academic community to date.  I’m sure many alternate explanations are also very compelling, but that one has always stuck with me.&lt;/p&gt;

&lt;p&gt;Northern Nevada is a pretty rugged place.  Some like to joke that the only water around is boiling hot. It’s also a place for treasure hunters.  Probably one of the reasons the casinos felt so at home in the early days.&lt;/p&gt;

&lt;p&gt;One morning, after a night spent befriending a group of local bikers at Farpoint Station, I heard them calling out to me.  They were worried but relieved when I came from my camp.  They showed me all of the fresh mountain lion tracks around my bicycle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/cougar_paw.jpg&quot; alt=&quot;My, what big claws you have!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From that day on, I slept wearing my bike helmet, with bike chain around my neck, and buck knife in hand. Thankfully, I made it into California with no more feline encounters and time to spare.  I even got to hop in some top-notch natural hotsprings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/hot_spring.jpg&quot; alt=&quot;Best bath ever!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sadly, at the conference, pretty much everyone told me that I would need to go back to school to find a way into that industry.  I suppose that made sense.  But while speaking to the director of a major power company, I also received what I would now consider my first piece of executive advice:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;“Don’t feel bad being a big fish in a small pond”.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My thesis mentor, Jacek also came out.  He told me about the great priviledge that comes from the attaining of a PhD and that I would probably benefit from the stability that universities can provide.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/jacek.jpg&quot; alt=&quot;me n Jacek&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So then the trip was over, even if I wasn’t going to have my big break into the clean energy industry just yet, I was still supercharged from the experience and I was sure I would do it…somehow.&lt;/p&gt;

&lt;p&gt;On the flight back to Canada, I got a phone call.  Frankie was dead… Just like that, my world changed.  For all of the potential that I could look forward to, I had failed one of my closest friends.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/frankie.jpg&quot; alt=&quot;Frankie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Suicide is a complex issue at the best of times.  Everybody will have their thoughts about what could have been done.  Family &amp;amp; friends will each have different memories. Warning signs. Silent cries for help. 
“Oh, what I would have done if only I’d known.”&lt;/p&gt;

&lt;p&gt;In my case, there cry for help was not silent.  It was the last conversation that I had with him.  I chose not to act and I will carry that with me for the rest of my life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;“This achieving the centre - being grounded in one’s self - is about the highest state a human being can achieve” - Bruce Lee&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we decided to move to the Philippines to start sunE, it was a near-instant decision and we really dived in head first without looking.  We rallied behind a vision to usher in a new era of transportation for a country that has grown accustomed to a reality that was due for replacement more than 50 years ago.  This was along with all of the pollution, discomfort and hidden costs (externalities, in economist speak) that comes with it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/launch_day.jpg&quot; alt=&quot;Launch day&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In our first launch, people were delighted.  This was new, exciting and it improved quality of life in several ways beyond the quiet &amp;amp; ‘smokelessness’ of the vehicles themselves.  We were hitting our target numbers and people were feeling pretty optimistic about where we might go next.&lt;/p&gt;

&lt;p&gt;Contrary to the experience of many early-stage entrepreneurs, I cannot think of a single time that somebody told me that what we are trying to accomplish is impossible.  As foreigners operating in a developing economy, it tends to sound more like:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you can’t make it work, there’s no hope for the rest of us&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I reflect on my life so far, my circumstances have been extrememly fortunate.  I have many talents and have always had plenty of access to opportunity.  The system works well for me.  So I work hard and generally I get good results.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/gilbert.jpg&quot; alt=&quot;Gilbert&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While the modern era likes to promote itself as a champion of equal opportunity, Filipinos have become well-adjusted to a life lived on the margin of that system.&lt;/p&gt;

&lt;p&gt;Frankie’s roots were also much closer to the margin.  As much as he wanted to keep up with his friends (myself included) in their adventures, the cruel realities of his roots would show themselves.&lt;/p&gt;

&lt;p&gt;So here I am again, in the middle to two worlds, to the left is the world that is keen to reward talent and usher in the future as fast as possible. To the right is a world full of people working hard just to keep their head above water and searching frantically for a lifeline.  As the waters rise, the number of frantic swimmers will be only increase.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/maria.jpg&quot; alt=&quot;Maria&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is through knowing our history that we have the best chance of ensuring that this transition we are undertaking will produce a truly better future. I won’t pretend that I know the solution but I am as committed as ever to keep fighting to make this solution work, whatever it takes.&lt;/p&gt;

&lt;p&gt;Captain Piccard is dreaming that humanity will rise to a new level, will trust the winds (and the weathermen) to take us out of the challenges of today.  It is people like him that help me to keep my eyes on the horizon.  To watch for the silver lining.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pedal-power/sunset.jpg&quot; alt=&quot;Sunset&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="solar-impulse" /><summary type="html">In a salute to the 1000 solution milestone of the Solar Impulse Foundation, This story is a bit of an hommage to the immensely inspiring 2010 TED talk by Captain Bertrand Piccard titled ‘My Solar-Powered Adventure’.</summary></entry><entry><title type="html">SE Asia’s Labelled Solutions for water cleanup.</title><link href="https://sunetrike.com/solar-impulse/se-asias-water-cleanup-solutions/" rel="alternate" type="text/html" title="SE Asia’s Labelled Solutions for water cleanup." /><published>2021-04-12T01:08:07+08:00</published><updated>2021-04-12T01:08:07+08:00</updated><id>https://sunetrike.com/solar-impulse/se-asias-water-cleanup-solutions</id><content type="html" xml:base="https://sunetrike.com/solar-impulse/se-asias-water-cleanup-solutions/">&lt;p&gt;Here we are, one thousand solutions closer to a cleaner planet.  With the &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;#beyond1000solutions&lt;/a&gt; campaign, Solar Impulse is gearing up to bring the forward the next wave of Cleantech into the world.&lt;/p&gt;

&lt;p&gt;To get the ball rolling for the next phase, I’ve put together a short list of some of the solutions getting developed across SE Asia.&lt;/p&gt;

&lt;h2 id=&quot;the-broad-categories&quot;&gt;The broad categories&lt;/h2&gt;

&lt;p&gt;To date, SE Asia sits at 16 labelled solutions.  I’ve broken them down into 3 broad themes (I guess that makes me a lumper, not a splitter):&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Category&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Labelled Solutions&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cleaning up our water&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Getting more efficient&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Better, Cleaner Mobility&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For sure, some will contest my very crude categorizations.  I’d encourage them to also write an article.&lt;/p&gt;

&lt;h2 id=&quot;by-country&quot;&gt;By country&lt;/h2&gt;
&lt;p&gt;By country, it’s probably no surprise to anyone that Singapore leads the pack:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Labelled Solutions&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Singapore&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Hong Kong&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Philippines&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Taiwan&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thailand&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Given the obvious bias that would come along with me trying to pick favourites within a group that our company is active in, I’m only going to talk about my picks from Category 1 &amp;amp; 2.  This article is going to be about water.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;I would consider myself as a capable student of pollution solutions in general.  However, I claim no expertise or specialized knowledge in any of the technologies mentioned below.  I have not reviewed any information beyond what has been made publicy available on Solar Impulse and their own webpage.&lt;/p&gt;

&lt;h1 id=&quot;cleaning-up-our-water&quot;&gt;Cleaning up our water&lt;/h1&gt;

&lt;p&gt;There’s no question that global water resources are deteriorating.  This decline comes from various factors including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;direct chemical pollution&lt;/li&gt;
  &lt;li&gt;micro-plastics overtaking fish&lt;/li&gt;
  &lt;li&gt;fertilizer and erosion runoff killing the world’s coastal ecosystems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We desperately need to improve our track record on hydro-externalities.  The 3 solutions below each endeavour to accomplish that.&lt;/p&gt;

&lt;h2 id=&quot;1-ecoworth&quot;&gt;1. &lt;a href=&quot;http://ecoworth-tech.com/&quot;&gt;EcoWorth&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;solar-impulse-page&quot;&gt;&lt;a href=&quot;https://solarimpulse.com/efficient-solutions/carbon-fibre-aerogel-cfa&quot;&gt;Solar Impulse Page&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;EcoWorth is targeting organics in wastewater.  Organics are a broad category which include most of the contaminants causing bad smells in most of the region’s urban lakes and waterways.&lt;/p&gt;

&lt;p&gt;In the case of this technology, however, the ‘valuable organics’ that they are targeting appear to be some fom of spilled oil.&lt;/p&gt;

&lt;p&gt;You may find the video a little hard to understand, but take note of the oily, yellow film on top of the water.  Absorbent pillows like these are often used in oil spills on the ocean.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/0_ctmxYjVgI&quot; loading=&quot;lazy&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Because of the many pipelines and other oil-producing facilities across the world, these kinds of absorbent materials definitely have widespread demand.&lt;/p&gt;

&lt;p&gt;The term for a material that strongly repels water is &lt;em&gt;&lt;strong&gt;‘Cat’&lt;/strong&gt;&lt;/em&gt;.  Just kidding, it’s considered a ‘hydrophobic’ material and there are some great video demonstrations like this one out there in the cloud&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/Ls_ISb7lG-I&quot; loading=&quot;lazy&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;2-electro-contaminant-removal-system&quot;&gt;2. &lt;a href=&quot;http://www.tridentwater.com.sg/&quot;&gt;Electro-contaminant removal system&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;solar-impulse-page-1&quot;&gt;&lt;a href=&quot;https://solarimpulse.com/efficient-solutions/electro-contaminant-removal-ecr-system&quot;&gt;Solar Impulse Page&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;ECR targets contaminated wastewater by applying electric fields which cause dissolved contaminants to lump together or coagulate (like your blood, when you get cut).  Today, this process is often done using chemicals called floculants.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/yFlrfZK8ErU&quot; loading=&quot;lazy&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Avoiding chemical usage with this approach, is certainly attractive and I look forward to seeing more.
They are targetting phosphorus, even 10 years ago, concerns were being raised about phosphorus shortages in the coming decades.  Now that phosphorus has become a popular battery material, recovering the material from wastewater should be a high priority going forward.&lt;/p&gt;

&lt;h2 id=&quot;3-plakman&quot;&gt;3. PlakMan&lt;/h2&gt;
&lt;h3 id=&quot;solar-impulse-page-2&quot;&gt;&lt;a href=&quot;https://solarimpulse.com/efficient-solutions/plakman&quot;&gt;Solar Impulse Page&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ocean Plastics is a sector where the &lt;a href=&quot;https://www.researchgate.net/figure/waste-hierarchy-8-Eventually-the-higher-concepts-of-waste-management-such-as-3R-and_fig1_303369997&quot;&gt;Cleaner Production Pyramid&lt;/a&gt; plays a hugely important role.  The shear volume of plastics entering oceans every day is difficult to fathom.  To really make a dent on this issue will require solutions at every level of the pyramid.&lt;/p&gt;

&lt;div class=&quot;embed-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/19x7ur_vCv0&quot; loading=&quot;lazy&quot; width=&quot;700&quot; height=&quot;480&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Given that collection/recovery, sits so low on the pyramid, they will probably be categorized as among the most expensive solutions. But that doesn’t mean it’s not necessary.  When PlakMan’s boats hit the water to start sucking up plastic, I hope careful thought will be  given to the location of their initial deployments.&lt;/p&gt;

&lt;p&gt;With all that said, I’m very happy to see new groups coming in to join the effort.  Humanity has had quite the party since first discovering plastics.  The cleanup job is substantial and many hands make lighter work.&lt;/p&gt;

&lt;h1 id=&quot;wrap-up&quot;&gt;Wrap up&lt;/h1&gt;

&lt;p&gt;Hopefully, some of my thoughts above have been helpful in looking at where we might go with these solutions.&lt;/p&gt;

&lt;p&gt;Since you’re here, feel free to look around and learn more about our own solution.  You can check out our &lt;a href=&quot;https://solarimpulse.com/efficient-solutions/sune&quot;&gt;Solar Impulse profile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m very excited to see these projects continue to build steam as we move &lt;a href=&quot;https://solarimpulse.com/beyond-1000-solutions&quot;&gt;#beyond1000solutions&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="solar-impulse" /><summary type="html">Here we are, one thousand solutions closer to a cleaner planet. With the #beyond1000solutions campaign, Solar Impulse is gearing up to bring the forward the next wave of Cleantech into the world.</summary></entry><entry><title type="html">My First Lung Fractal</title><link href="https://sunetrike.com/fractals/lungs/dr-geo/first-lung-fractal/" rel="alternate" type="text/html" title="My First Lung Fractal" /><published>2021-01-14T01:08:07+08:00</published><updated>2021-01-14T01:08:07+08:00</updated><id>https://sunetrike.com/fractals/lungs/dr-geo/first-lung-fractal</id><content type="html" xml:base="https://sunetrike.com/fractals/lungs/dr-geo/first-lung-fractal/">&lt;p&gt;Since I first moved to the Philippines, the air pollution has been one of the hardest features to come to grips with.&lt;/p&gt;

&lt;p&gt;I seem to have especially sensitive lungs as I come down with lung infections 2 to 3 times a year and it lingers for several weeks meanwhile nobody around me ever seems to get sick.&lt;/p&gt;

&lt;p&gt;But enough about that, the coronavirus has given people all sorts of reasons to pay more attention to their lungs in 2020 and 2021.&lt;/p&gt;

&lt;p&gt;I also have a thing for fractals and lungs are one of the famous examples of fractals that make an impact on our everyday life. &lt;a href=&quot;https://www.atsjournals.org/doi/full/10.1164/rccm.200308-1107OC&quot;&gt;One study estimated a whopping 480 million alveoli&lt;/a&gt; in the lungs of an average adult.&lt;/p&gt;

&lt;p&gt;At a diametre of 0.2mm across, you need 8 of them to provide 1mm^2 of oxygen:blood interface.  This gives me a total surface are of 60m^2.  While &lt;a href=&quot;https://www.reference.com/science/surface-area-human-lungs-ffc6ae1756c2f2e&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;https://www.bbc.co.uk/bitesize/guides/zwyfxfr/revision/4&quot;&gt;internet&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Pulmonary_alveolus&quot;&gt;sources&lt;/a&gt; yield 50 to 100 m^2; about the size of a tennis court.&lt;/p&gt;

&lt;p&gt;To hit those kinds of numbers from a structure that bifurcates (branches or splits into 2), you need 29 levels of branching.  &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S1474667016387791&quot;&gt;Meanwhile, this study models branching down to 23 levels&lt;/a&gt;.  My computer starts to seriously slow down around 12.  Poor little bugger!&lt;/p&gt;

&lt;p&gt;I recently discovered &lt;a href=&quot;https://www.gnu.org/software/dr-geo/&quot;&gt;Dr Geo&lt;/a&gt;, a pretty cool open-source geometry drawing program with a Smalltalk interface.  This is totally new territory for me but I was able to get a branching fractal to make a crude approximation of a lung structure.&lt;/p&gt;

&lt;p&gt;Give it a shot, windows users will probably need to use &lt;a href=&quot;https://ubuntu.com/tutorials/ubuntu-on-windows#1-overview&quot;&gt;Ubuntu in Windows&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-smalltalk&quot; data-lang=&quot;smalltalk&quot;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; figure angle alpha beta strand centre edge &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DrGeoFigure&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;freeValue:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;degreesToRadians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;beta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;freeValue:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;360&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;degreesToRadians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;centre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;point:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;point:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;strand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; p1 p2 p3  seg &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;middleOf:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;and:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;center:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;angle:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;p3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;center:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;angle:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;seg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segment:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ifTrue:&lt;/span&gt; 
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;seg&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;large&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
		&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ifTrue:&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;strand&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p2&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;strand&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p3&lt;/span&gt;
				&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ifTrue:&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segment:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
			&lt;span class=&quot;nv&quot;&gt;figure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segment:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
		 &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;strand&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;centre&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;edge&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;value:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="fractals" /><category term="lungs" /><category term="dr-geo" /><summary type="html">Since I first moved to the Philippines, the air pollution has been one of the hardest features to come to grips with.</summary></entry><entry><title type="html">Supercapacitors for LSEVs</title><link href="https://sunetrike.com/supercapacitors/supercapacitors-for-lsevs/" rel="alternate" type="text/html" title="Supercapacitors for LSEVs" /><published>2021-01-09T01:08:07+08:00</published><updated>2021-01-09T01:08:07+08:00</updated><id>https://sunetrike.com/supercapacitors/supercapacitors-for-lsevs</id><content type="html" xml:base="https://sunetrike.com/supercapacitors/supercapacitors-for-lsevs/">&lt;p&gt;Supercapacitors increase battery efficiency by protecting the battery and other system components from excessive stress, and they enable onboard energy capture to reduce the energy cost for vehicle operation. Combining supercapacitors, batteries and onboard energy harvesting improves overall system operation efficiency and allows the vehicle to travel further on a single charge, compared to the battery alone.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Lois Gray</name></author><category term="supercapacitors" /><summary type="html">Supercapacitors increase battery efficiency by protecting the battery and other system components from excessive stress, and they enable onboard energy capture to reduce the energy cost for vehicle operation. Combining supercapacitors, batteries and onboard energy harvesting improves overall system operation efficiency and allows the vehicle to travel further on a single charge, compared to the battery alone.</summary></entry><entry><title type="html">Findings from the 2019 IEEE Smart City Conference in Casablanca, Morocco</title><link href="https://sunetrike.com/presentations/smart-cities/BCBP-Canlubang-presentation-on-Smart-City-technologies/" rel="alternate" type="text/html" title="Findings from the 2019 IEEE Smart City Conference in Casablanca, Morocco" /><published>2020-10-24T01:08:07+08:00</published><updated>2020-10-24T01:08:07+08:00</updated><id>https://sunetrike.com/presentations/smart-cities/BCBP-Canlubang-presentation-on-Smart-City-technologies</id><content type="html" xml:base="https://sunetrike.com/presentations/smart-cities/BCBP-Canlubang-presentation-on-Smart-City-technologies/">&lt;p&gt;Fresh off an exciting trip to Casablanca, Morocco for the IEEE’s 2019 Smart Cities Conference (Oct 2019), I was keen to apply my learnings and get rolling with plans for automated traffic data collection in small to mid-sized municipalities across Southern Luzon as per the plans laid out within &lt;em&gt;&lt;a href=&quot;/assets/pdfs/Smart-Transport-Calabarzon-Poster-Smart-Regions-2018.pdf&quot;&gt;Smart Transport Calabarzon&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Little did any of us know the world was about to stop.  In early 2020, all plans were put on hold, including Smart Transport Calabarzon, as the Covid-19 virus took became a global concern.&lt;/p&gt;

&lt;p&gt;Despite this, I was still buzzing from the new and emerging technologies that will one day change the way local governments administer their public services. My friend and fellow green technophile, Mic Carlos, asked my to show introduce some of the technologies that I found most exciting and relevant to the Canlubang chapter of the Brotherhood of Christian Business Professionals - &lt;a href=&quot;https://www.facebook.com/BCBP-Canlubang-Share-It-109798656251069/&quot;&gt;BCBP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These are the slides I used with a brief description of each:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/pdfs/Smart-Cities-Presentation-BCBP-Canlubang.pdf&quot;&gt;Findings from the 2019 IEEE Smart City Conference in Casablanca, Morocco&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Title and intro&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 2018 Smart Infrastructure Challenge -&lt;/strong&gt; A US infrastructure-oriented innovation competition which we hope to one day replicate in the Philippines with a &lt;em&gt;‘Sustainable Islands’&lt;/em&gt; theme&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. About Smart Transport Calabarzon -&lt;/strong&gt; the multi-sector advocacy group which we formed according to the drafted IEEE best practices to form the only non-US team to complete the Smart Infrastructure Challenge&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. IEEE Smart Cities Conference -&lt;/strong&gt; I became alerted to this event via the &lt;em&gt;IEEE Standard P2784&lt;/em&gt;, of which I became a member in late 2020. One of the major activities of IEEE is in formulating international standards around computing, data and wireless transmission protocols.  Usually these standards are primary driven by pure mathematics and physics.  This upcoming standard on Smart City Planning is arguably the standard that ventures furthest into the social and political realm and I am very curious to see how the members from various countries approach the problem&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Fog Computing -&lt;/strong&gt; the next bold step forward from cloud computing, these ‘fog’ or ‘edge’ devices are able to perform the heavy Artifical Intelligence and Machine Learning (AI/ML) nearer to their physical locations reducing network congestion, data privacy concerns and lag times&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Federated Computing -&lt;/strong&gt; this was one of the themes that the IEEE participants were most excited about.  It gives new methods to allow important &amp;amp; sensitive government and citizen data to be kept in custodianship within trusted institutions and shared with more fine-grained terms &amp;amp; conditions than what currently exists outside of enterprise level cloud providers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Smart Contracts for Government -&lt;/strong&gt; This is largely enabled by upcoming blockchain technologies such as Ethereum.  It can be difficult to think about what it means when we can take ownership of our personal data and rely on our computers to handle our transactions with the government for us.  Humanity has historically known no other way.  Many exciting new projects have been proposed but only time will tell what new opportunities it will bring to local governments in the Philippines.  &lt;a href=&quot;https://e-estonia.com/solutions/security-and-safety/ksi-blockchain/&quot;&gt;Estonia&lt;/a&gt; is one of the leaders in this space.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Online learning -&lt;/strong&gt; I’m sure these researchers had no idea that the whole world would be forced onto an online classroom in a few short months.  Well some of these researchers were already trialling online chemistry classes where the student would control a robot in order to conduct a chemical reaction for their lab module.  With recent events, we are sure to see lots more where that came from!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Data Aggregation &amp;amp; Decisions -&lt;/strong&gt; With the exponentially growing volumes of data coming out of Internet of Things (IoT) sensors and AI/ML applications.  It becomes increasingly important to handle that data efficiently, safely and fast.  As we learn more about data, intelligence and even the process of learning itself, we are forced to think deeply about how we &lt;a href=&quot;https://towardsdatascience.com/applications-of-reinforcement-learning-in-real-world-1a94955bcd12&quot;&gt;Observe, Decide &amp;amp; Act&lt;/a&gt;.  This is one model that was proposed for how we think.  Maybe one day our creations will do it better than us!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Automated Traffic Monitoring -&lt;/strong&gt; This was my primary interest going into the conference.  Traffic and transporation go hand in hand and I’ve never met a Filipino who didn’t want less traffic.  These kinds of counting projects are accessible to municipalities within Metro-Manila.  But there is also plenty of room for improvement across Southern Luzon.  It’s a common saying from engineers that you can’t improve what you don’t measure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. ‘Smartness’ &amp;amp; ‘Resilience’ -&lt;/strong&gt; From here, I proceeded to a more conceptual (even spiritual) conversation about the nature and behaviour of cities.  A common aspiration of ‘Smart City Engineers’ is to make cities more ‘resilient’.  It is ironic that they are commonly dealing with gadgets that may last less than 5 years.  The photos in this slide are of Morocco’s famous (&lt;a href=&quot;https://duckduckgo.com/?t=lm&amp;amp;q=atlas+mountain+rocks&amp;amp;iax=images&amp;amp;ia=images&quot;&gt;to geologists at least&lt;/a&gt;) Atlas Mountains.  People have been inhabiting this harsh, arid landscape for thousands of years.  Resilience to their climate is in their bones and I suggest the same is true of Filipinos in their own tropical environment.  No fancy, well-engineered gadget is going to change or replace that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. The ‘Physics’ of Cities -&lt;/strong&gt; &lt;a href=&quot;https://www.colorado.edu/socialreactors/sites/default/files/attached-files/bettencourt_2013_science.pdf&quot;&gt;The paper&lt;/a&gt; and figures in this slide relate cities to a &lt;a href=&quot;https://web.physics.ucsb.edu/~mmanning/What_are_Power_Laws.html&quot;&gt;power-law&lt;/a&gt; phenomenon also observed in many natural systems such as the size of stars in the universe.  This allows us to consider them in terms of power or “social entropy”.  In such a model, the urban planner seeks to harness or facilitate this inherent power through more efficient social linkages in order to help his/her city thrive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. Cities as Fractals -&lt;/strong&gt; Fractal geometries and mathematics took the academic and artistics worlds by storm when they were first discovered in the 60s and 70s.  The beauty lies in the simplicity of the rules from which they are created.  In his &lt;a href=&quot;https://www.ted.com/talks/ron_eglash_the_fractals_at_the_heart_of_african_designs&quot;&gt;fascinating Ted Talk&lt;/a&gt;, Mathematician Ron Eglash reveals that these ‘discoveries’ of science are often just rediscovering what has been known since ancient times.  It serves to remind us that there are still areas where scientific inquiry is many steps behind religious and traditional wisdom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Gould’s Spandrels -&lt;/strong&gt; It may not look like it at first, but this slide is about design.  Stephen Jay Gould was a famous archaeologist who advanced our understanding of the nature of evolution in many areas.  Among the most famous is &lt;a href=&quot;https://cbs.asu.edu/sites/default/files/PDFS/GouldLewontinSpandrels.pdf&quot;&gt;his paper about spandrels&lt;/a&gt;.  Spandrels are created when you build an arch.  You can’t build an arch without a spandrel.  Both of the examples presented here show an animal which evolved a spandrel, but later found a creative &amp;amp; functional use for it (see the paper for details).  Many times, engineers and planners will focus on function and results.  This can often result in a lot of ‘unused space’.  As you can see in many famous cathedrals, often it is the spandrels that feature some of the most beautiful ornaments.  Cities are full of spandrels, it is up to us to unlock beauty within them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15.  Solar Impulse Foundation -&lt;/strong&gt; If you look around this webpage you will quickly discover that here at sunE, we are big fans of Bertrand Piccard and the &lt;a href=&quot;www.solarimpulse.com&quot;&gt;Solar Impulse Foundation&lt;/a&gt;.  With the first solar-powered airplane to fly around the world, he has helped to create the beacon that we can orient ourselves towards as every year we see more news and evidence of Global Warming and the damage it will cause on our world, our homes, our lifestyles and our economies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;16. CO2 emissions by country -&lt;/strong&gt; This slide outlines the different CO2 contributions made country to country.  While the Philippines is still a small contributor both per capita and on aggregate, they are rapidly approaching the ‘tipping point’ level.  If we can take this opportunity to transition towards low carbon transportation systems, it will position the country as a strong and committed participant in the global effort to avert the existential crisis of the 21st century.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;17. The glass of water -&lt;/strong&gt; This is a very difficult conversation within the geopolitical landscape. Discussions on how to avoid Global Warming are full of finger pointing.  The established science points to some very uncomfortable and inconvenient realities.  This glass of water is a reference to an &lt;a href=&quot;https://www.netzerowatch.com/ipcc-official-climate-policy-is-redistributing-the-worlds-wealth/&quot;&gt;analogy told by IPCC economist Ottmar Edenhofer&lt;/a&gt;.  In that story, he speaks of the global community as a group of travellers lost in the desert.  They happen to find a glass of water and the small number of rich countries drink it up without a second thought.  Upon realizing what they have done, they suggest to save the rest.  The rest of the countries are furious and demand their fair share of the remaining water.  The unfortunate reality that both sides are missing is that the glass of water is not going to save them.  If they want to survive, they need to find the oasis.  That is the challenge that our global community needs to rise to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;18. Wrap-up -&lt;/strong&gt; The theoretical link between fossil fuel combustion &amp;amp; Global warming was first proposed in 1896 by Swedish Chemist Svante Arrhenius.  This was nearly 200 years since Watt’s steam engine kicked off the industrial revolution.  We are now faced with a danger that is as difficult to imagine and it is to accept.  The consequences are dire and the changes it demands from us are scary.  Technology and Society both have a role to play in the solution and I’m glad to be venturing towards in the ways that I know how.&lt;/p&gt;

&lt;p&gt;Thanks so much for your time and attention! I hope to one day work with some of this audience on moving Canlubang in the right direction while also improving the lives of its citizens.&lt;/p&gt;

&lt;div class=&quot;newsletter_wrapper&quot;&gt;
  &lt;h3&gt;Interested in hearing more from us? &lt;a href=&quot;/newsletter/&quot;&gt; Check out our newsletter&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;</content><author><name>Allan Gray</name></author><category term="presentations" /><category term="smart-cities" /><summary type="html">Fresh off an exciting trip to Casablanca, Morocco for the IEEE’s 2019 Smart Cities Conference (Oct 2019), I was keen to apply my learnings and get rolling with plans for automated traffic data collection in small to mid-sized municipalities across Southern Luzon as per the plans laid out within Smart Transport Calabarzon.</summary></entry></feed>